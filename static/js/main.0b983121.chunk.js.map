{"version":3,"sources":["functions/screenSize.js","services/environment.js","services/firebase.js","functions/sha1.js","config/text.js","services/authService.js","config/defaultToast.js","config/urls.js","login/LoginBox.js","login/Signup.js","login/Login.js","services/handleError.js","functions/time.js","services/taskService.js","components/Navbar/UserSettingsDropdown.js","components/Navbar/Navbar.js","services/projectService.js","functions/createTaskObject.js","components/Modal/Modal.js","components/Modal/TaskModal.js","components/Project/Project/ProjectTitle/ProjectTitle.js","components/Project/Project/Task/Subtask.js","components/Project/Project/Task/Task.js","components/Project/Project/Project.js","components/Project/Project/Project-view.js","components/Project/NoProject/NoProject.js","components/Project/ProjectList/ProjectListDropdown/ProjectListDropdown.js","components/Project/ProjectList/ProjectList.js","TodoApp.js","components/Loader/Loader.js","components/HomePage/Footer.js","components/HomePage/Header.js","components/HomePage/HomePage.js","App.js","index.js"],"names":["window","isSmallScreen","onresize","innerWidth","environment","production","firebase","apiKey","databaseURL","projectId","authDomain","storageBucket","messagingSenderId","appId","measurementId","url","initializeApp","analytics","auth","db","firestore","sha1","str","a","buffer","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","x","toString","padStart","join","useEmulator","debounceAuth","text","gotoApp","loading","noListName","Date","toISOString","slice","addPh","addSubtaskPh","addSubtaskBtn","subtasks","sharedProject","subtaskStatus","deleteTask","allTasksCompleted","incomplete","Math","floor","random","length","completed","completedNo","showCompleted","hideCompleted","saveTask","discardTask","notes","notesPh","project","s","noSelected","share","delete","_","long","add","ph","genericError","loggedInAs","name","login","signup","logout","noAccount","yesAccount","error","success","signupSuccess","invalidPass","invalidUser","defaultToast","position","authService","setToken","token","localStorage","setItem","authState","done","onIdTokenChanged","user","clearTimeout","setTimeout","getIdToken","then","signupData","password","sha1Password","axios","method","data","response","email","loginData","userCredential","signInWithEmailAndPassword","JSON","stringify","uid","currentUser","authToken","loginCatch","reason","console","log","code","cogoToast","message","e","preventDefault","signOut","validateSignup","username","confirm","urls","home","app","id","LoginBox","children","title","className","Signup","history","useHistory","useState","getItem","isLoggedIn","setIsLoggedIn","setSignup","setLoading","signupError","setSignupError","_signupError","errors","Object","values","responseData","catch","React","useContext","LoggedInUserContext","push","to","onSubmit","value","onChange","target","placeholder","type","required","autoFocus","autoComplete","Login","setLogin","info","handleError","errorText","indexOf","split","pop","removeItem","location","hash","time","timeStr","m","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","taskService","headers","authorization","updateTask","projectKey","task","addTask","taskId","getTasksForProject","collection","orderBy","onSnapshot","tasksDoc","tasks","forEach","taskData","t","timestamp","toggleTask","doc","update","checked","UserSettingsDropdown","dropdownShown","setDropdownShown","onClick","Navbar","setShowSidebar","showSidebar","projectService","getProject","getListOfProjects","where","projectsDoc","projects","projectData","completedTasks","filter","openTasks","shared","saveListName","result","newProject","deleteProject","getUserByEmail","userEmail","addUserToProject","createTaskObject","description","Modal","modalOpen","okButton","cancelButton","onAccept","onCancel","dangerouslySetInnerHTML","__html","TaskModal","trigger","setModalOpen","subtaskName","setSubtaskName","setSubtasks","newSubtasks","setNewSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","ProjectContext","submit","useEffect","minLength","sub","subtask","disabled","ProjectTitle","setShowCompleted","isLoading","editListName","projectName","setProjectName","setEditListName","Subtask","extraClass","saveSubtasks","saveToggleSubtask","addSubtaskInput","setAddSubtaskInput","Task","expandedTask","setExpandedTask","completedSubtasks","_task","expanded","isExpanded","toggleExpanded","toggleCompleted","onDelete","Project","p","projectTasks","setIsLoading","open","allCompleted","useMemo","taskNameChange","NoProject","ProjectListDropdown","onAction","ProjectList","setProjectKey","setProjects","newProjectName","setNewProjectName","actionName","prompt","unsubscribeProjects","_projects","validProjectId","proj","htmlFor","snap","createContext","TodoApp","projectKeyParam","useParams","setProject","setProjectTasks","String","unsubscribeProject","unsubscribeTasks","Provider","Loader","Footer","href","Header","loaded","HomePage","style","height","display","App","setLoaded","setUser","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b983121.chunk.js","sourcesContent":["const smallWindow = 800; // smaller than this, and it's considered small.\n\nwindow.isSmallScreen = false;\n\nwindow.onresize = function () {\n  window.isSmallScreen = (window.innerWidth < smallWindow);\n}\nwindow.onresize();\n\n","const environment = {\n  production: true,\n\n  firebase: {\n    apiKey: 'AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ',\n    databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n    projectId: 'todo-list-react-33431',\n    authDomain: \"todo-list-react-33431.firebaseapp.com\",\n    storageBucket: \"todo-list-react-33431.appspot.com\",\n    messagingSenderId: \"153291173882\",\n    appId: \"1:153291173882:web:4eb5673b9a70ce5828fe43\",\n    measurementId: \"G-BCMCPMQHDB\"\n  },\n\n  url: 'https://us-central1-todo-list-react-33431.cloudfunctions.net/api',\n};\n\n// environment.production = false; environment.url = 'http://localhost:5000/todo-list-react-33431/us-central1/api';\n\nexport default environment;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\nimport environment from './environment';\n\n\nfirebase.initializeApp(environment.firebase);\n\nexport const analytics = firebase.analytics;\nexport const auth = firebase.auth;\nexport const db = firebase.firestore;\n\nif (environment.production) {\n  analytics();\n} else {\n  // IS DEV\n  db().useEmulator('localhost', 8080);\n  auth().useEmulator('http://localhost:9099/');\n}\n","export async function sha1( str ) {\n  const buffer = new TextEncoder('utf-8').encode( str );\n  const digest = await crypto.subtle.digest('SHA-1', buffer);\n\n  // Convert digest to hex string\n  return Array.from(new Uint8Array(digest)).map( x => x.toString(16).padStart(2,'0') ).join('');\n}\n","const dateToday = new Date().toISOString().slice(0, 10);\n\nexport const text = {\n  gotoApp: 'Open app',\n  loading: 'Loading app...',\n  noListName: 'New Project ' + dateToday,\n  addPh: 'Quick-add a task...',\n  addSubtaskPh: 'Add subtasks to this task',\n  addSubtaskBtn: 'Add a subtask',\n  subtasks: 'Subtasks',\n  sharedProject: 'This project is shared',\n  subtaskStatus: '( Completed / Pending )',\n  deleteTask: 'Delete task and its subtasks? Can\\'t be undone',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappuccino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎',\n      'Make a Todolist: Done ✅',\n      'I am Finnish 🇫🇮 with all tasks.'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  saveTask: 'Save',\n  discardTask: 'Cancel changes',\n\n  notes: 'Notes',\n  notesPh: 'An optional description always helps',\n\n\n  project: {\n    s: 'Projects',\n    noSelected: 'Select a project or create a new one.',\n    share: 'Share Project',\n    delete: {\n      _: 'Delete Project',\n      long: 'Delete this project and all the tasks? (cannot be undone)'\n    },\n    add: {\n      // _: 'Add a new project',\n      ph: 'Enter a name for a new project'\n    }\n  },\n\n  genericError: 'An error occurred. Please see console for details',\n\n  loggedInAs: (name) => `Logged in as ${ name }.`,\n\n  login: {\n    login: 'Log in',\n    signup: 'Sign up',\n    logout: 'Log out',\n    noAccount: 'Don\\'t have an account?',\n    yesAccount: 'Already a user?',\n    error: 'Invalid credentials',\n    success: 'Welcome Back!',\n    signupSuccess: 'Account created! Logging you in...',\n    invalidPass: 'Invalid login credentials',\n    invalidUser: 'No user exists for this email'\n  },\n\n};\n","import axios from 'axios';\nimport environment from './environment';\nimport cogoToast from 'cogo-toast';\nimport { auth } from './firebase';\nimport { sha1 } from 'functions/sha1';\nimport { text } from '../config/text';\nimport { defaultToast } from '../config/defaultToast';\n\nlet debounceAuth;\n\nexport const authService = {\n\n  setToken: (token) => {\n    localStorage.setItem('AuthToken', token);\n  },\n\n  authState: (done) => {\n    auth().onIdTokenChanged((user) => {\n      clearTimeout(debounceAuth);\n      debounceAuth = setTimeout(() => {\n        user && user.getIdToken(true).then((token) => {\n          authService.setToken(token);\n        });\n\n        done(user);\n      }, 300);\n    });\n  },\n\n  signup: (signupData) => {\n    return sha1(signupData.password)\n      .then((sha1Password) => {\n        return axios({\n          url: `${ environment.url }/signup`,\n          method: 'POST',\n          data: {\n            ...signupData,\n            password: sha1Password\n          }\n        });\n      })\n      .then((response) => {\n        return authService.login({\n          email: signupData.email,\n          password: signupData.password\n        });\n      });\n  },\n\n  login: (loginData) => {\n    let userCredential;\n\n    return sha1(loginData.password)\n      .then((sha1Password) => {\n        return auth().signInWithEmailAndPassword(loginData.email, sha1Password);\n      })\n      .then((response) => {\n        localStorage.setItem('uid', JSON.stringify(response.user.uid));\n        userCredential = response;\n        return auth().currentUser.getIdToken();\n      })\n      .then((authToken) => {\n        authService.setToken(authToken);\n        return userCredential;\n      });\n  },\n\n  loginCatch: (reason) => {\n    console.log(reason, reason.code, reason.code === 'auth/user-not-found');\n    if (reason.code === 'auth/wrong-password') {\n      cogoToast.error(text.login.invalidPass, defaultToast);\n    } else if (reason.code === 'auth/user-not-found') {\n      cogoToast.error(text.login.invalidUser, defaultToast);\n    } else {\n      cogoToast.error(reason.message, defaultToast);\n    }\n  },\n\n  logout: (e) => {\n    e.preventDefault();\n\n    auth().signOut().then(() => {\n      cogoToast.success('You\\'ve been signed out of the app', { position: 'bottom-center' });\n    });\n  },\n\n  validateSignup: (signupData) => {\n    if (!signupData.username) {\n      return { username: 'Must enter a valid username' };\n    }\n    if (!signupData.name || signupData.name.length <= 2) {\n      return { name: 'Must enter a longer name' };\n    }\n    if (!signupData.email || signupData.email.length <= 5) {\n      return { email: 'Invalid email' };\n    }\n    if (!signupData.password || !signupData.confirm) {\n      return { password: 'Password can\\'t be empty' };\n    }\n    if (signupData.password !== signupData.confirm) {\n      return { password: 'Passwords don\\'t match' };\n    }\n    return {};\n  }\n};\n","export const defaultToast = { position: 'bottom-center' };\n","export const urls = {\n  home: '/',\n  app: '/app',\n  project: (id) => `${ urls.app }/${ id }`,\n  login: '/login',\n  signup: '/signup'\n}\n","import React from 'react';\nimport './_login-box.scss';\n\nfunction LoginBox ({ children, title, loading }) {\n  return (\n    <>\n      <div className={ 'flex-column vh-100 place-center' + ( loading ? ' loader-input cover' : '' ) }>\n        <div className=\"login-box\">\n          { title && <h5 className=\"mt-5\">{ title }</h5> }\n          { children }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginBox;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from '../App';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from 'config/defaultToast';\nimport LoginBox from './LoginBox';\n\nfunction Signup () {\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n  const [signup, setSignup] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [signupError, setSignupError] = useState({});\n\n\n  async function onSubmit (e) {\n    e.preventDefault();\n\n    const _signupError = authService.validateSignup(signup);\n    const errors = Object.values(_signupError);\n    if (!errors.length) {\n      setLoading(true);\n      authService\n        .signup(signup)\n        .then((responseData) => {\n          setLoading(false);\n          if (responseData.user) {\n            cogoToast.success(text.login.signupSuccess, defaultToast);\n            setSignup({});\n            setIsLoggedIn(true);\n          }\n        })\n        .catch(({ response } ) => {\n          if (response.data && response.data.code) {\n            authService.loginCatch(response.data);\n          } else {\n            setSignupError(response.data);\n            const errors = Object.values(response.data);\n            errors.length && cogoToast.error(errors[0], defaultToast);\n          }\n          setLoading(false);\n        });\n    } else {\n      setSignupError(_signupError);\n      errors.length && cogoToast.error(errors[0], defaultToast);\n    }\n  }\n\n  // If the user is logged in already, redirect to the app!\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <>\n            <LoginBox title={ text.login.signup } loading={ loading }>\n              <form onSubmit={ onSubmit } className=\"flex-center-self\">\n                <input\n                  value={ signup.email || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" required autoFocus autoComplete=\"off\"\n                />\n                { signupError.email && <small>{ signupError.email }</small> }\n                <input\n                  value={ signup.name || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  name: e.target.value\n                }) } placeholder=\"name\" required autoComplete=\"off\"\n                />\n                { signupError.name && <small>{ signupError.name }</small> }\n                <input\n                  value={ signup.username || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  username: e.target.value\n                }) } placeholder=\"username\" required autoComplete=\"off\"\n                />\n                { signupError.username && <small>{ signupError.username }</small> }\n                <input\n                  value={ signup.password || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" required autoComplete=\"off\"\n                />\n                { signupError.password && <small>{ signupError.password }</small> }\n                <input\n                  value={ signup.confirm || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  confirm: e.target.value\n                }) } placeholder=\"confirm\" type=\"password\" required autoComplete=\"off\"\n                />\n                { signupError.password && <small>{ signupError.password }</small> }\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.signup }</button>\n                  <Link to={ urls.login } className=\"btn-flat\">{ text.login.yesAccount } { text.login.login }</Link>\n                </div>\n              </form>\n            </LoginBox>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { urls } from 'config/urls';\nimport { text } from 'config/text';\nimport { LoggedInUserContext } from 'App';\nimport cogoToast from 'cogo-toast';\nimport LoginBox from './LoginBox';\nimport { defaultToast } from '../config/defaultToast';\n\nfunction Login () {\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [login, setLogin] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    authService\n      .login(login)\n      .then((responseData /* Returns {user, error}! */) => {\n\n        setLoading(false);\n\n        if (responseData.user) {\n          // setLogin({});\n          setIsLoggedIn(true);\n          cogoToast.success(text.login.success, defaultToast);\n        } else {\n          if (responseData.error.code === 400) {\n            cogoToast.error(text.login.error, defaultToast);\n          }\n          console.info(responseData);\n        }\n      })\n      .catch((reason) => {\n        setLoading(false);\n        authService.loginCatch(reason);\n      });\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to={ urls.app }/>\n          :\n          <>\n            <LoginBox title={ text.login.login } loading={ loading }>\n              <form onSubmit={ onSubmit } className=\"flex-center-self\">\n                <input\n                  value={ login.email || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" autoFocus required\n                />\n                <input\n                  value={ login.password || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" autoComplete=\"off\" required\n                />\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.login }</button>\n                  <Link\n                    to={ urls.signup } className=\"btn-flat right\"\n                  >{ text.login.noAccount } { text.login.signup }</Link>\n                </div>\n              </form>\n            </LoginBox>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Login;\n","import { urls } from 'config/urls';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from '../config/defaultToast';\n\nexport const handleError = (errorText, error) => {\n  cogoToast.error(errorText, defaultToast);\n\n  console.error(errorText, error);\n  if (['401', '403'].indexOf(error.toString().split(' ').pop()) >= 0) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('AuthToken');\n    window.location.hash = urls.login;\n  }\n}\n","export function time (timeStr) {\n  const m = new Date(timeStr);\n  return m.getUTCFullYear() + '/' + (m.getUTCMonth() + 1) + '/' + m.getUTCDate()\n    + ' ' + m.getUTCHours() + ':' + m.getUTCMinutes() + ':' + m.getUTCSeconds();\n}\n","import { db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from '../config/defaultToast';\nimport { time } from 'functions/time';\n\nconst taskService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  updateTask: async (projectKey, task) => {\n    console.info('Updating task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'PUT',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from PUT', response);\n        cogoToast.success(response.data.message, defaultToast);\n      });\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  addTask: async (projectKey, task) => {\n    console.info('Adding task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task`,\n        method: 'POST',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from POST', response);\n        cogoToast.success(response.data.message, defaultToast);\n        return response.data.taskId;\n      });\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  deleteTask: async (projectKey, task) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'DELETE',\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from DELETE', response);\n        cogoToast.success(response.data.message, defaultToast);\n      });\n    } catch (e) {\n      handleError('Error on delete task: ', e);\n    }\n  },\n\n  getTasksForProject: (projectKey, done) => {\n    try {\n      return taskService.db\n        .collection(`/projects/${ projectKey }/tasks`)\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((tasksDoc) => {\n          const tasks = [];\n          tasksDoc.forEach((task) => {\n            const taskData = task.data();\n\n            if (taskData.subtasks.length) {\n              taskData.subtasks.forEach((t) => t.timestamp = time(t.timestamp));\n            }\n            tasks.push({\n              id: task.id,\n              ...taskData,\n              timestamp: time(taskData.timestamp)\n            });\n          });\n          // done([...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ...tasks, ]);\n          done(tasks);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  toggleTask: (projectId, task) => {\n    try {\n      return taskService.db\n        .doc(`/projects/${ projectId }/tasks/${ task.id }`)\n        .update({\n          checked: task.checked,\n          subtasks: task.subtasks\n        });\n    } catch (e) {\n      handleError('Error on updating \"checked\" task: ', e);\n    }\n  }\n\n};\n\nexport default taskService;\n","import React, { useState } from 'react';\nimport { text } from '../../config/text';\nimport { LoggedInUserContext } from '../../App';\nimport { authService } from '../../services/authService';\n\nfunction UserSettingsDropdown () {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  const user = React.useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <button className=\"btn-invisible\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"material-icons\">settings</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"dropdown dd-left dd-big\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"dropdown-item\">\n              <span className=\"left subtle ps-6\">{ text.loggedInAs(user.email) }</span>\n            </li>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ authService.logout }>\n                {/*<i className=\"material-icons subtle left\">exit_to_app</i>*/}\n                {/*<span className=\"left\">{ text.login.logout }</span>*/}\n                { text.login.logout }\n              </button>\n            </li>\n          </ul>\n          <div className=\"backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default UserSettingsDropdown;\n","import React from 'react';\nimport UserSettingsDropdown from './UserSettingsDropdown';\n\nfunction Navbar ({ setShowSidebar, showSidebar }) {\n\n  return (\n    <>\n      <div className=\"navbar-fixed\">\n        <nav className=\"grey\">\n          <div className=\"nav-wrapper\">\n            <a className=\"sidenav-btn btn-subtle\" onClick={ () => setShowSidebar(! showSidebar ) }>\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <ul className=\"right\">\n              <li>\n                <UserSettingsDropdown/>\n              </li>\n            </ul>\n            {/*<ul className=\"right hide-on-med-and-down\">*/}\n            {/*  <li><a href=\"sass.html\">Sass</a></li>*/}\n            {/*  <li><a href=\"badges.html\">Components</a></li>*/}\n            {/*  <li><a href=\"collapsible.html\">Javascript</a></li>*/}\n            {/*  <li><a href=\"mobile.html\">Mobile</a></li>*/}\n            {/*</ul>*/}\n          </div>\n        </nav>\n      </div>\n    </>\n  )\n}\n\nexport default Navbar;\n","import { db, auth } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from '../config/defaultToast';\n\nconst projectService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getProject: (projectKey, done) => {\n    try {\n      return projectService.db\n        .doc(`/projects/${ projectKey }`)\n        .onSnapshot((doc) => {\n          const project = doc.data();\n          project.id = doc.id;\n\n          console.info(`Changed to project \"${ project.name }\"`);\n\n          done(project);\n        });\n    } catch (e) {\n      handleError('Error on fetching Project: ', e);\n    }\n  },\n\n  getListOfProjects: (done) => {\n    try {\n      return projectService.db\n        .collection(`/projects`)\n        .where('uids', 'array-contains', auth().currentUser.uid)\n        // .orderBy('timestamp', 'desc')\n        .onSnapshot((projectsDoc) => {\n\n          const projects = [];\n          projectsDoc.forEach((doc) => {\n            const projectData = doc.data();\n            const tasks = Object.values(projectData.tasks || '' /* empty object actually... */);\n            const completedTasks = tasks.filter((t) => t.checked).length;\n            const openTasks = tasks.length - completedTasks;\n            projects.push({\n              id: doc.id,\n              name: projectData.name,\n              shared: projectData.shared,\n              openTasks,\n              completedTasks\n            });\n          });\n\n          // done([...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects]);\n          done(projects);\n\n          console.info('Lists loaded: ', projects.length);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  saveListName: async (project) => {\n    console.info('Updating project ', project);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'PUT',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info('result from Edit Project PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save project name: ', e);\n    }\n  },\n\n  newProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project`,\n        method: 'POST',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info(result);\n        return result.data.project;\n      });\n    } catch (e) {\n      handleError('Error on create project: ', e);\n    }\n  },\n\n  deleteProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info('result from project DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project: ', e);\n    }\n  },\n\n  getUserByEmail: async (userEmail) => {\n    try {\n      return await axios({\n        url: environment.url + `/user/search/`,\n        method: 'POST',\n        data: { email: userEmail },\n        headers: projectService.headers(),\n      }).then((result) => {\n        return result.data.user;\n      });\n    } catch (e) {\n      handleError('Error on searching email: ', e);\n    }\n  },\n\n  addUserToProject: async (project, username) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/join`,\n        method: 'POST',\n        headers: projectService.headers(),\n        data: { username: username }\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info('result from joining Project', result);\n      });\n    } catch (e) {\n      handleError('Error on joining project: ', e);\n    }\n  }\n};\n\nexport default projectService;\n","function createTaskObject (task) {\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    id: task.id || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    subtasks: task.subtasks || [], // will not be saved in the DB. here just for reference...\n    description: task.description || ''\n  }\n}\n\nexport default createTaskObject;\n","import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel, loading }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n            <div className={ 'z-depth-5 modal' }>\n              <div className={ (loading ? ' loader-input cover' : '') }>\n                <div className=\"modal-content\">\n                  { children }\n                </div>\n                <div className=\"modal-footer\">\n                  {\n                    okButton &&\n                    <button\n                      onClick={ onAccept }\n                      className=\"modal-close waves-effect waves-green btn-flat btn\"\n                      dangerouslySetInnerHTML={ { __html: okButton } }\n                    />\n                  }\n                  {\n                    cancelButton &&\n                    <button\n                      onClick={ onCancel }\n                      className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                      dangerouslySetInnerHTML={ { __html: cancelButton } }\n                    />\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"backdrop\" onClick={ onCancel }/>\n          </>\n          : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\nimport React, { useContext, useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [loading, setLoading] = useState(false);\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [newSubtasks, setNewSubtasks] = useState([]);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  const project = useContext(ProjectContext);\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (task) {\n    setLoading(true);\n    if (task.id) {\n      await taskService.updateTask(project.id, task);\n    } else {\n      task.id = await taskService.addTask(project.id, createTaskObject(task));\n    }\n    setLoading(false);\n    setModalOpen(false);\n  }\n\n  async function submit (e) {\n    e.preventDefault();\n\n    task.name = taskName;\n    task.description = taskDesc;\n    task.subtasks = [...subtasks, ...newSubtasks];\n\n    await saveTask(task);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    setSubtasks([...task?.subtasks]);\n  }\n\n  function saveSubtask (e) {\n    e.preventDefault();\n\n    setNewSubtasks([\n      ...newSubtasks,\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ]);\n    setSubtaskName('');\n\n    e.target[0].value = '';\n  }\n\n  async function onAccept (e) {\n    await submit(e);\n    setModalOpen(false);\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        loading={ loading }\n        onAccept={ onAccept }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.saveTask + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.discardTask + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <h6 className=\"subtle mb-15 mt-5\">{ project.name }</h6>\n        <form onSubmit={ submit }>\n          <div>\n            <label>Task Name</label>\n            <input\n              value={ taskName } required minLength={ 3 }\n              placeholder=\"Enter a name for the task\"\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.notes }</label>\n            <textarea\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            (subtasks || []).map((sub) =>\n              <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.id }\n                    className=\"material-cb\"\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <div/>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          {\n            newSubtasks.map((sub) =>\n              <li key={ sub.id } className=\"block\">\n                <label className=\"left\">\n                  <input type=\"checkbox\" className=\"material-cb\" disabled/>\n                  <div/>\n                </label>\n                <span className=\"left subtle\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                className=\"input-field\"\n                required minLength={ 3 }\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import React from 'react';\nimport { text } from 'config/text';\n\nfunction ProjectTitle ({ project, showCompleted, setShowCompleted, isLoading }) {\n\n  return (\n    project.editListName\n      ? <form onSubmit={ project.saveListName } className={ ( isLoading === 'name' ? ' loader-input' : '' ) }>\n        <input\n          className=\"as-title m0 invisible h5\" autoFocus /*onBlur={ project.saveListName }*/\n          value={ project.projectName }\n          disabled={ isLoading === 'name' }\n          onChange={ (e) => project.setProjectName(e.target.value) }\n        />\n      </form>\n      : <div className=\"flex-row\">\n        <h5 className=\"max-content m0\" onClick={ () => project.setEditListName(true) }>{ project.projectName }</h5>\n        {\n          showCompleted\n            ? <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(false) }\n              title={ text.hideCompleted }\n            >check_box</button>\n            : <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(true) }\n              title={ text.showCompleted }\n            >check_box_outline_blank</button>\n        }\n      </div>\n  );\n}\n\nexport default ProjectTitle;\n","import { text } from 'config/text';\nimport React, { useState } from 'react';\n\nfunction Subtask ({ extraClass, task, saveSubtasks, saveToggleSubtask }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [addSubtaskInput, setAddSubtaskInput] = useState(false);\n\n  function saveSubtask (e) {\n    e.preventDefault();\n    e.target[0].value = '';\n    setAddSubtaskInput(false);\n\n    task.subtasks = [\n      ...(task.subtasks || []),\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ];\n    saveSubtasks(task);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    saveToggleSubtask(task);\n  }\n\n  return (\n    <ul className={ 'list-unstyled flex-column pt-5 ' + extraClass }>\n      {\n        (task.subtasks || []).map((sub) =>\n          <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n            <label className=\"left\">\n              <input\n                type=\"checkbox\" checked={ sub.checked }\n                id={ sub.id } className=\"material-cb\"\n                onChange={ () => toggleSubtask(sub) }\n              />\n              <div/>\n            </label>\n            <span className=\"left\">{ sub.name }</span>\n          </li>\n        )\n      }\n      <li key=\"new-subtask\">\n        {\n          addSubtaskInput\n            ?\n            <form onSubmit={ saveSubtask }>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                autoFocus={ true }\n                className=\"input-field invisible\"\n              />\n            </form>\n            :\n            <button className=\"btn-flat subtle p0\" onClick={ () => setAddSubtaskInput(true) }>\n              <i className=\"material-icons left\">add</i>\n              { text.addSubtaskBtn }\n            </button>\n        }\n      </li>\n    </ul>\n  );\n}\n\nexport default Subtask;\n","import React, { useContext, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport Subtask from './Subtask';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\nfunction Task ({ task }) {\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedTask, setExpandedTask] = useState(false);\n\n  const project = useContext(ProjectContext);\n\n  const completedSubtasks = subtasks.filter((s) => !!s.checked).length;\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    // after changing the state...\n    if (task.checked) {\n      // set all subtasks as checked, since the main task was marked as checked.\n      (task.subtasks || []).forEach((_task) => _task.checked = true);\n      task.expanded = false;\n    }\n    await taskService.toggleTask(project.id, task);\n    // await taskService.updateTask(project.id, task);\n  }\n\n  /**\n   * If you want to say the toggle state, just update this function\n   */\n  async function toggleExpanded (isExpanded) {\n    //task.expanded = isExpanded;\n    // await taskService.updateTask(task);\n    setExpandedTask(isExpanded);\n  }\n\n  async function saveSubtasks (task) {\n    setSubtasks(task.subtasks);\n    await taskService.updateTask(project.id, task);\n  }\n\n  async function onDelete () {\n    if (window.confirm(text.deleteTask)) {\n\n      await taskService.deleteTask(project.id, task)\n    }\n  }\n\n  async function saveToggleSubtask (task) {\n    await taskService.toggleTask(project.id, task);\n  }\n\n  return (\n    <li className={ (task.checked ? 'done' : '') + ' parent-hover task' } title={ task.timestamp }>\n      <div className=\"task-content\">\n        <button\n          className={ 'toggle-expand subtle btn-invisible material-icons tiny left ' + (expandedTask && ' expanded') }\n          onClick={ () => toggleExpanded(!expandedTask) }\n        >chevron_right\n        </button>\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            className=\"material-cb\"\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <div/>\n        </label>\n        <button\n          className={ 'btn-invisible task-name ' + (task.checked ? '' : '') }\n          onClick={ () => setModalOpen(true) }>\n          { task.name }\n          <span className=\"subtle child-hover ml-5\" title={ text.subtaskStatus }\n          >({ completedSubtasks } / { subtasks.length - completedSubtasks })</span>\n        </button>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-subtle ml-5 material-icons right\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-subtle ml-5 material-icons right',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            task.description &&\n            <div className=\"ml-50\">\n              <p><span className=\"subtle\">{ text.notes }:</span> { task.description }</p>\n            </div>\n          }\n          <Subtask extraClass={ 'ml-50' } saveSubtasks={ saveSubtasks }\n            subtasks={ subtasks } task={ task }\n            saveToggleSubtask={ saveToggleSubtask }\n          />\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { useEffect, useMemo, useState } from 'react';\nimport './_project.scss';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport projectRender from './Project-view';\nimport projectService from '../../../services/projectService';\n\nfunction Project ({ project, projectTasks }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [showCompleted, setShowCompleted] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [projectName, setProjectName] = useState(project.name || text.noListName);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = projectTasks.filter((task) => !task.checked);\n  const completed = projectTasks.filter((task) => !!task.checked);\n\n  // const inputElement = useRef(null);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted()\n  }, [ open.length ]);\n\n  let taskName = '';\n\n  useEffect(() => {\n    setProjectName(project.name);\n  }, [project.name])\n\n  async function submit (e) {\n    e.preventDefault();\n    setIsLoading('task');\n    // inputElement.current && (inputElement.current.target.value = '');\n\n    const taskId = await taskService.addTask(project.id, createTaskObject({ name: taskName }));\n    e.target[0].value = '';\n    setIsLoading('');\n  }\n\n  function taskNameChange (e) {\n    taskName = e.target.value;\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    setIsLoading('name');\n    await projectService.saveListName({ ...project, name: projectName });\n    setEditListName(false);\n    setIsLoading('');\n  }\n\n  return projectRender({\n    open,\n    completed,\n    submit,\n    taskNameChange,\n    showCompleted,\n    setShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    isLoading,\n    project: {\n      projectName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setProjectName\n    }\n  });\n}\n\nexport default Project;\n","import React from 'react';\nimport { text } from 'config/text';\nimport TaskModal from 'components/Modal/TaskModal';\nimport ProjectTitle from './ProjectTitle/ProjectTitle';\nimport Task from './Task/Task';\n\n\nexport default function projectRender (p) {\n\n  return (\n    <>\n      <ProjectTitle\n        project={ p.project } showCompleted={ p.showCompleted } setShowCompleted={ p.setShowCompleted }\n        isLoading={ p.isLoading }\n      />\n\n      <ul className=\"list-unstyled\">\n        { p.open.length ?\n          p.open.map((task) =>\n            <Task\n              key={ task.id }\n              task={ task }\n            />)\n          : (p.completed.length ? <li><h5 className=\"subtle max-content\">{ p.allCompleted }</h5></li> : '')\n        }\n        { p.showCompleted && p.completed.map((task) =>\n          <Task\n            key={ task.id }\n            task={ task }\n          />) }\n\n        <li className=\"task\">\n          <form onSubmit={ p.submit }\n            className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }>\n            {/*className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }>*/}\n            <i /* Just to give the right padding */ className=\"material-icons left v-hidden mr-11\">add</i>\n            <i className=\"material-icons left subtle\">add</i>\n            <div className=\"form-group\">\n              <div className=\"input-group mb-2\">\n                <input\n                  onChange={ p.taskNameChange } className=\"invisible f-100\"\n                  placeholder={ text.addPh } required\n                  disabled={ p.isLoading === 'task' }\n                  autoComplete=\"off\" /*ref={ inputElement }*/\n                />\n              </div>\n            </div>\n          </form>\n        </li>\n      </ul>\n\n      <TaskModal\n        trigger={ {\n          className: 'btn-floating btn-large new-task fixed-action-btn subtle-bg',\n          text: <i className=\"material-icons\">add</i>\n        } }\n        task={ {} }\n        modalOpen={ p.modalOpen }\n        setModalOpen={ p.setModalOpen }\n      />\n    </>\n  );\n}\n","import { text } from 'config/text';\n\nfunction NoProject ({ setShowSidebar }) {\n  return (\n    <>\n      <div className=\"h-100 place-center\">\n        <button className=\"btn-invisible left-align flex-center-self\" onClick={ () => setShowSidebar(true) }>{ text.project.noSelected }</button>\n      </div>\n    </>\n  )\n}\n\nexport default NoProject;\n","import React, { useState } from 'react';\nimport { text } from 'config/text';\n\nfunction ProjectListDropdown ({ project, onAction }) {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  return (\n    <>\n      <button className=\"btn-invisible child-hover ch-hidden left\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"tiny material-icons subtle\">more_horiz</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"dropdown dd-right\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('delete', project) }>\n                <i className=\"tiny material-icons subtle\">delete</i> {text.project.delete._}\n              </button>\n            </li>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('share', project) }>\n                <i className=\"tiny material-icons subtle\">people_outline</i> {text.project.share}\n              </button>\n            </li>\n          </ul>\n          <div className=\"backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default ProjectListDropdown;\n","import React, { useEffect, useState } from 'react';\nimport { text } from 'config/text';\nimport './_project-list.scss';\nimport projectService from 'services/projectService';\nimport ProjectListDropdown from './ProjectListDropdown/ProjectListDropdown';\nimport { LoggedInUserContext } from '../../../App';\nimport { authService } from '../../../services/authService';\nimport cogoToast from 'cogo-toast';\n\nfunction validProjectId (projectId, projects) {\n  // If there's a project set in the URL and it's valid (it exists)\n  if (projectId && projects.filter((p) => p.id === projectId).length) {\n    return projectId;\n  }\n  return ''; // otherwise don't set any project.\n}\n\nfunction ProjectList ({ projectKey, setProjectKey }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [projects, setProjects] = useState([]);\n\n  const [newProjectName, setNewProjectName] = useState('');\n\n  useEffect(() => {\n    const unsubscribeProjects = projectService.getListOfProjects((_projects) => {\n      setProjectKey(validProjectId(projectKey, _projects)); // set the first project as selected...\n      setProjects(_projects);\n    });\n\n    return () => {\n      unsubscribeProjects && unsubscribeProjects();\n    };\n  }, [projectKey]);\n\n  function addNewProject (e) {\n    e.preventDefault();\n\n    setIsLoading('new');\n\n    projectService\n      .newProject({ name: newProjectName })\n      .then((snap) => {\n        setNewProjectName('');\n        setIsLoading('');\n        setProjectKey(snap.id);\n      });\n  }\n\n  async function deleteProject (project) {\n    if (window.confirm(text.project.delete.long)) {\n      setIsLoading(project.id);\n      await projectService.deleteProject(project);\n      setProjectKey('');\n      setIsLoading('');\n    }\n  }\n\n  function setProject (project) {\n    if (project.id === projectKey) {\n      return; // can't change to itself... it also causes a re-render problem in the `useEffect`\n    }\n    setProjectKey(project.id);\n  }\n\n  async function onAction (actionName, project) {\n    switch (actionName) {\n      case 'delete':\n        await deleteProject(project);\n        break;\n      case 'share':\n        const userEmail = prompt('User Email to join?');\n        const user = await projectService.getUserByEmail(userEmail);\n        if (!user) {\n          cogoToast.error(text.genericError);\n          console.error('error: ', user);\n          return;\n        }\n        await projectService.addUserToProject(project, user.username);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <h5 className=\"center-align\">{ text.project.s }</h5>\n      <ul className=\"projects-list flex-column\">\n        {\n          projects.map((proj) =>\n            <li\n              key={ proj.id } className={ 'mb-5 parent-hover flex-row' + (projectKey === proj.id ? ' selected' : '') + (isLoading === proj.id ? ' loader-input' : '') }\n            >\n              <ProjectListDropdown project={ proj } onAction={ onAction }/>\n              <button className=\"btn-invisible left left-align ps-6\" onClick={ () => setProject(proj) }>\n                {\n                  proj.shared &&\n                  <i\n                    className=\"tiny material-icons subtle left mr-5\"\n                    title={ text.sharedProject }\n                  >people_outline</i>\n                }\n                { proj.name }\n                {/*( { proj.openTasks } <span className=\"subtle\">/ { proj.completedTasks }</span> )*/ }\n              </button>\n            </li>\n          )\n        }\n        <li key=\"new-project\" className=\"mb-5 parent-hover flex-row\">\n          <button className=\"btn-invisible child-hover ch-hidden left\">\n            <label htmlFor=\"new-project-input\" className=\"pointer\">\n              <i className=\"tiny material-icons subtle\">add</i>\n            </label>\n          </button>\n          <form onSubmit={ addNewProject } className={ 'add-project flex-row' + (isLoading === 'new' ? ' loader-input' : '') }>\n            <input\n              className=\"invisible subtle left-align\"\n              onChange={ (e) => setNewProjectName(e.target.value) }\n              required minLength=\"3\"\n              disabled={ isLoading === 'new' }\n              autoComplete=\"off\"\n              value={ newProjectName }\n              id=\"new-project-input\"\n              placeholder={ text.project.add.ph }\n            />\n          </form>\n\n        </li>\n      </ul>\n    </>\n  );\n}\n\n\nexport default ProjectList;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from 'App';\n\nimport taskService from 'services/taskService';\n\nimport Navbar from 'components/Navbar/Navbar';\nimport projectService from 'services/projectService';\nimport Project from 'components/Project/Project/Project';\nimport NoProject from 'components/Project/NoProject/NoProject';\nimport ProjectList from 'components/Project/ProjectList/ProjectList';\n\nexport const ProjectContext = React.createContext({});\n\n\nfunction TodoApp () {\n  const history = useHistory();\n  const { projectKeyParam } = useParams();\n\n  const [projectKey, setProjectKey] = useState(projectKeyParam || '');\n  const [project, setProject] = useState({});\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(!window.isSmallScreen);\n\n  useEffect(() => {\n\n    if (projectKey !== String(projectKeyParam)) {\n      history.push(urls.project(projectKey));\n    }\n\n    if (projectKey) {\n\n      const unsubscribeProject = projectService.getProject(projectKey, (project) => {\n        setProject(project);\n      });\n\n      const unsubscribeTasks = taskService.getTasksForProject(projectKey, (project) => {\n        setProjectTasks(project);\n      });\n\n      return () => {\n        unsubscribeProject && unsubscribeProject();\n        unsubscribeTasks && unsubscribeTasks();\n      };\n    }\n  }, [projectKey]);\n\n  if (!React.useContext(LoggedInUserContext)) {\n    history.push(urls.login);\n    return null;\n  }\n\n  return (\n    <>\n      <Navbar setShowSidebar={ setShowSidebar } showSidebar={ showSidebar }/>\n      <div id=\"todo-app\" className={ (showSidebar ? '' : ' hidden-bar') }>\n        <div className={ 'projects-list-box' }>\n          <div className={ 'projects-list-box-inner' }>\n            <ProjectList\n              projectKey={ projectKey }\n              setProjectKey={ setProjectKey }\n            />\n          </div>\n        </div>\n        <div className=\"tasks-list-box flex-column\">\n          <ProjectContext.Provider\n            value={ {\n              id: project.id,\n              name: project.name\n            } }\n          >\n            {\n              projectKey\n                ? <Project project={ project } projectTasks={ projectTasks }/>\n                : <NoProject setShowSidebar={ setShowSidebar }/>\n            }\n          </ProjectContext.Provider>\n        </div>\n        <i/> { /* Thanks to this, we have three elements. Space-between works like a charm */ }\n      </div>\n    </>\n  );\n}\n\nexport default TodoApp;\n","import 'assets/loader.svg';\nimport './_app-loader.scss';\n\nimport React from 'react';\n\nfunction Loader () {\n\n  return (\n    <span className=\"app-loader\">\n      <span className=\"loader-img\"/>\n    </span>\n  )\n}\n\nexport default Loader;\n","function Footer () {\n  return (\n    <>\n      <footer className=\"page-footer grey\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Footer Content</h5>\n              <p\n                className=\"grey-text text-lighten-4\"\n              >You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Links</h5>\n              <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2014 Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { LoggedInUserContext } from 'App';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { Link } from 'react-router-dom';\nimport { authService } from 'services/authService';\n\nfunction Header ({ loaded }) {\n  const user = useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <nav className=\"grey\">\n        <div className=\"nav-wrapper container\">\n          <Link to={ urls.app } className=\"brand-logo\">Todo List</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            {\n              user\n                ? loaded && <>\n                <li><Link to={ urls.app }>{ text.gotoApp }</Link></li>\n                <li><a\n                  href=\"#logout\" onClick={ authService.logout }\n                  className=\"btn-invisible\"\n                >{ text.login.logout }</a>\n                </li>\n              </>\n                : loaded && <>\n                <li><Link to={ urls.login }>{ text.login.login }</Link></li>\n                <li><Link to={ urls.signup }>{ text.login.signup }</Link></li>\n              </>\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\n\nfunction HomePage ({ loaded }) {\n\n\n  return (\n    <>\n      <Header loaded={ loaded }/>\n      <div\n        style={ {\n          height: '300px',\n          display: 'block'\n        } }\n      >\n        <h4 className=\"flex-center-self center-align\">Welcome to the best todo-app</h4>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport Signup from './login/Signup';\nimport Login from './login/Login';\nimport TodoApp from './TodoApp';\nimport { authService } from './services/authService';\nimport Loader from './components/Loader/Loader';\nimport HomePage from './components/HomePage/HomePage';\nimport { urls } from 'config/urls';\n\nexport const LoggedInUserContext = React.createContext({});\n\nfunction App () {\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(false);\n\n  authService.authState((user) => {\n    console.info('User logged in: ', !!user);\n    setUser(user);\n    setLoaded(true);\n  });\n\n  return (\n    <>\n      <LoggedInUserContext.Provider value={ user }>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */ }\n          <Switch>\n            <Route path={ urls.home } exact={ true }>\n              <HomePage loaded={ loaded }/>\n            </Route>\n            { loaded\n              ?\n              <>\n                <Route path={ urls.signup } component={ Signup }/>\n                <Route path={ urls.login } component={ Login }/>\n                <Route path={ `${ urls.project(':projectKeyParam?') }` } component={ TodoApp }/>\n              </>\n              : <Loader/>\n            }\n          </Switch>\n        </Router>\n      </LoggedInUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\nimport 'assets/loader.svg';\nimport 'functions/screenSize'; // must be imported here.\n\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}