{"version":3,"sources":["components/Modal/Modal.js","functions/createTaskObject.js","services/firebase.js","text.js","components/Modal/TaskModal.js","components/Todo/Task/Task.js","services/taskService.js","components/Todo/Todo.js","components/Todo/Todo-view.js","App.js","index.js"],"names":["Modal","children","modalOpen","okButton","cancelButton","onAccept","onCancel","Fragment","className","onClick","dangerouslySetInnerHTML","__html","createTaskObject","task","name","checked","key","timestamp","Date","subtasks","description","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","database","text","TaskModal","trigger","useState","setModalOpen","subtaskName","setSubtaskName","setSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","saveTask","keepOpen","a","ref","update","push","then","reference","submit","e","preventDefault","useEffect","onSubmit","value","placeholder","onChange","target","map","sub","title","type","id","subtask","Math","random","Task","onDelete","expandedTask","setExpandedTask","toggleCompleted","taskService","updateTask","console","error","addTask","deleteTask","tasks","findIndex","_task","remove","log","getTasks","taskSetter","on","snapshot","forEach","snap","val","Todo","input","setTasks","showCompleted","setShowCompleted","open","filter","completed","changed","required","autoComplete","length","index","todoRenderer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.752db7cd.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel }) {\n\n  return (\n    <React.Fragment>\n      <div className={ 'z-depth-5 modal ' + (modalOpen ? 'open' : '') }>\n        <div className=\"modal-content\">\n          { children }\n        </div>\n        <div className=\"modal-footer\">\n          {\n            okButton &&\n            <button\n              onClick={ onAccept }\n              className=\"modal-close waves-effect waves-green btn-flat btn\"\n              dangerouslySetInnerHTML={ { __html: okButton } }\n            />\n          }\n          {\n            cancelButton &&\n            <button\n              onClick={ onCancel }\n              className=\"modal-close waves-effect waves-red btn-flat btn left\"\n              dangerouslySetInnerHTML={ { __html: cancelButton } }\n            />\n          }\n        </div>\n      </div>\n      <div className=\"backdrop\" onClick={ onCancel }/>\n    </React.Fragment>\n  );\n}\n\nexport default Modal;\n","function createTaskObject (task) {\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    key: task.key || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    subtasks: task.subtasks || [], // will not be saved in the DB. here just for reference...\n    description: task.description || ''\n  }\n}\n\nexport default createTaskObject;\n","import firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ\",\n  authDomain: \"todo-list-react-33431.firebaseapp.com\",\n  databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n  projectId: \"todo-list-react-33431\",\n  storageBucket: \"todo-list-react-33431.appspot.com\",\n  messagingSenderId: \"153291173882\",\n  appId: \"1:153291173882:web:4eb5673b9a70ce5828fe43\",\n  measurementId: \"G-BCMCPMQHDB\"\n};\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth;\nexport const db = firebase.database();\n","export const text = {\n  addPh: 'Quick-add a task...',\n  addSubtaskPh: 'Add a subtask to this task',\n  subtasks: 'Subtasks',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  uncompletedNo: 'All tasks completed!',\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  saveTask: 'Save',\n  discardTask: 'Cancel changes'\n\n};\n","import Modal from './Modal';\nimport React, { useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { db } from '../../services/firebase';\nimport { text } from '../../text';\n\nfunction TaskModal ({ trigger, task }) {\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (task, keepOpen) {\n    try {\n      if (task.key) {\n        await db.ref(`todos/${ task.key }`).update(task);\n      } else {\n        await db.ref('todos').push(createTaskObject(task)).then((reference) => {\n          task.key = reference.key;\n        });\n      }\n      setModalOpen(!!keepOpen);\n    } catch (error) {\n    }\n  }\n\n  async function submit (e) {\n    e.preventDefault();\n\n    task.name = taskName;\n    task.description = taskDesc;\n    task.subtasks = subtasks;\n\n    await saveTask(task, false);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    setSubtasks([...task?.subtasks]);\n  }\n\n  function saveSubtask (e) {\n    e.preventDefault();\n\n    setSubtasks([\n      ...subtasks,\n      {\n        key: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ]);\n    e.target[0].value = '';\n  }\n\n  async function onAccept (e) {\n    await submit(e);\n    setModalOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        onAccept={ onAccept }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.saveTask + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.discardTask + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <form onSubmit={ submit }>\n          <div>\n            <label>Task Name</label>\n            <input\n              value={ taskName }\n              placeholder=\"Enter a name for the task\"\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>Notes</label>\n            <textarea\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder=\"An optional description always helps\"\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            subtasks.map((sub) =>\n              <li key={ sub.key } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.key }\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <span> </span>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                className=\"input-field\"\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default TaskModal;\n","import React, { useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\n\nfunction Task ({ task, saveTask, onDelete }) {\n\n  const [expandedTask, setExpandedTask] = useState(false);\n\n  function toggleCompleted (task) {\n    task.checked = !task.checked;\n    saveTask(task);\n  }\n\n\n  return (\n    <li className={ (task.checked ? 'done' : '') + ' parent-hover' } title={ task.timestamp }>\n      <label className=\"left\">\n        <input\n          type=\"checkbox\"\n          checked={ task.checked }\n          onChange={ () => toggleCompleted(task) }\n        />\n        <span> </span>\n      </label>\n      <span className={ 'left task-name ' + (task.checked ? '' : '') }>{ task.name }</span>\n\n      <button\n        className=\"child-hover btn-subtle ml-5 material-icons right\"\n        onClick={ () => onDelete(task) }\n      >delete\n      </button>\n      <button\n        className=\"child-hover toggle-expand btn-subtle ml-5 material-icons right\"\n        onClick={ () => setExpandedTask(!expandedTask) }\n      >add\n      </button>\n      <TaskModal\n        trigger={ {\n          className: 'child-hover btn-subtle ml-5 material-icons right',\n          text: 'edit'\n        } } task={ { ...task } }\n      />\n      {\n        expandedTask &&\n        <React.Fragment>\n          <p>{ task.description }</p>\n        </React.Fragment>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { db } from './firebase';\n\nconst taskService = {\n\n  updateTask: async (task) => {\n    try {\n      await db.ref(`todos/${ task.key }`).update(task);\n    } catch (e) {\n      console.error('Error on update: ', e);\n    }\n  },\n\n  addTask: async (task) => {\n    try {\n      await db.ref('todos').push(task);\n    } catch (e) {\n      console.error('Error on save: ', e);\n    }\n  },\n\n  deleteTask: async (task, tasks) => {\n    const index = tasks.findIndex((_task) => _task.key === task.key);\n    if (index >= 0) {\n      await db.ref(`todos/${ task.key }`).remove(() => {\n        console.log(`\"${ task.name }\" was removed!`);\n      });\n    }\n  },\n\n  getTasks: async (taskSetter) => {\n    try {\n      db.ref('todos').on('value', (snapshot) => {\n        const tasks = [];\n        snapshot.forEach((snap) => {\n          tasks.push({\n            ...snap.val(),\n            key: snap.key\n          });\n        });\n        taskSetter(tasks);\n      });\n    } catch (e) {\n      console.error('Error on fetching tasks: ', e);\n    }\n  }\n};\n\nexport default taskService;\n","import { useState, useEffect } from 'react';\nimport './_todo.scss';\nimport todoRenderer from 'components/Todo/Todo-view';\nimport { db } from 'services/firebase';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\n\nfunction Todo () {\n\n  const [tasks, setTasks] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(true);\n\n  const open = tasks.filter((task) => !task.checked);\n  const completed = tasks.filter((task) => !!task.checked);\n\n  let taskName = '';\n  let input;\n\n  useEffect(() => {\n    taskService.getTasks(setTasks);\n  }, [/* empty dependency means this function will NEVER be called again === componentDidMount */]);\n\n  async function submit (e) {\n    e.preventDefault();\n\n    await taskService.addTask(createTaskObject({ name: taskName }));\n\n    input.target.value = '';\n  }\n\n  function changed (e) {\n    input = input || e;\n    taskName = e.target.value;\n  }\n\n  return todoRenderer({\n    open,\n    completed,\n    deleteTask: (task) => taskService.deleteTask(task, tasks),\n    submit,\n    changed,\n    saveTask: taskService.updateTask,\n    showCompleted,\n    setShowCompleted,\n  });\n}\n\nexport default Todo;\n","import React from 'react';\nimport Task from 'components/Todo/Task/Task';\nimport { text } from 'text';\nimport TaskModal from '../Modal/TaskModal';\n\n\nexport default function todoRenderer ({\n  submit, changed, saveTask, deleteTask, completed, open, showCompleted, setShowCompleted\n}) {\n  return (\n    <React.Fragment>\n      <form className=\"form-inline\" onSubmit={ submit }>\n        <div className=\"form-group\">\n          <div className=\"input-group mb-2\">\n            <input\n              onChange={ changed } className=\"form-control\" id=\"todo-name\" placeholder={ text.addPh } required\n              autoComplete=\"off\"\n            />\n          </div>\n        </div>\n      </form>\n\n      { open.length ?\n        <ul className=\"list-unstyled\">\n          { open.map((task, index) =>\n            <Task\n              key={ index }\n              task={ task }\n              saveTask={ saveTask }\n              onDelete={ deleteTask }\n            />) }\n        </ul>\n        : <p className=\"left\">{ text.uncompletedNo }</p>\n      }\n\n      { completed.length ?\n        (\n          showCompleted\n            ?\n            <React.Fragment>\n              <hr/>\n              <button className=\"btn-flat\" onClick={ () => setShowCompleted(false) }>{ text.hideCompleted }</button>\n              <ul className=\"list-unstyled completed\">\n                { completed.map((task, index) =>\n                  <Task\n                    key={ index }\n                    task={ task }\n                    saveTask={ saveTask }\n                    onDelete={ deleteTask }\n                  />) }\n              </ul>\n            </React.Fragment>\n            :\n            <React.Fragment>\n              <hr/>\n              <button className=\"btn-flat\" onClick={ () => setShowCompleted(true) }>{ text.showCompleted }</button>\n            </React.Fragment>\n        )\n        : <p className=\"left\">{ text.completedNo }</p>\n      }\n\n      <TaskModal\n        trigger={ {\n          className: 'btn-floating btn-large green fixed-action-btn',\n          text: <i className=\"material-icons\">add</i>\n        } } saveTask={ saveTask } task={ {} }\n      />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Todo from 'components/Todo/Todo';\n\nfunction App () {\n\n  return (\n    <React.Fragment>\n      <div className=\"container\" id=\"todo\">\n        {/*<React.Suspense fallback={<Loader />}>*/ }\n        <Todo/>\n        {/*</React.Suspense>*/ }\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'index.scss';\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}