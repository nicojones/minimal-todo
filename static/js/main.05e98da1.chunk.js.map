{"version":3,"sources":["components/Modal/Modal.js","functions/createTaskObject.js","text.js","services/firebase.js","services/taskService.js","components/Modal/TaskModal.js","components/Todo/Task/Subtask.js","components/Todo/Task/Task.js","components/ListTitle/ListTitle.js","components/Todo/Todo.js","components/Todo/Todo-view.js","components/Loader/Loader.js","components/TodoProjects/TodoProjects.js","App.js","index.js"],"names":["Modal","children","modalOpen","okButton","cancelButton","onAccept","onCancel","className","onClick","dangerouslySetInnerHTML","__html","createTaskObject","task","name","checked","key","timestamp","Date","subtasks","description","text","incomplete","Math","floor","random","length","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","user","taskService","path","updateTask","a","console","log","ref","update","error","addTask","push","deleteTask","tasks","findIndex","_task","remove","getTasks","listKey","done","on","snapshot","listName","child","val","list","forEach","e","getLists","lists","listData","Object","values","completedTasks","filter","t","openTasks","saveListName","TaskModal","trigger","setModalOpen","useState","subtaskName","setSubtaskName","setSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","saveTask","keepOpen","then","reference","submit","preventDefault","useEffect","onSubmit","value","placeholder","onChange","target","map","sub","title","type","id","subtask","Subtask","extraClass","addSubtaskInput","setAddSubtaskInput","autoFocus","Task","onDelete","find","s","mainCheckDisabled","setMainCheckDisabled","expandedTask","setExpandedTask","disabled","toggleCompleted","href","ListTitle","editListName","onBlur","setListName","setEditListName","Todo","showCompleted","setShowCompleted","open","completed","allCompleted","useMemo","changed","index","required","autoComplete","todoRenderer","Loader","TodoProjects","setListKey","setLists","_lists","_listKey","window","location","hash","App","substring","setList","showLoader","setShowLoader","ListContext","React","createContext","off","style","width","margin","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05e98da1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n          <div className={ 'z-depth-5 modal open' }>\n            <div className=\"modal-content\">\n              { children }\n            </div>\n            <div className=\"modal-footer\">\n              {\n                okButton &&\n                <button\n                  onClick={ onAccept }\n                  className=\"modal-close waves-effect waves-green btn-flat btn\"\n                  dangerouslySetInnerHTML={ { __html: okButton } }\n                />\n              }\n              {\n                cancelButton &&\n                <button\n                  onClick={ onCancel }\n                  className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                  dangerouslySetInnerHTML={ { __html: cancelButton } }\n                />\n              }\n            </div>\n          </div>\n          <div className=\"backdrop\" onClick={ onCancel }/>\n        </>\n        : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","function createTaskObject (task) {\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    key: task.key || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    subtasks: task.subtasks || [], // will not be saved in the DB. here just for reference...\n    description: task.description || ''\n  }\n}\n\nexport default createTaskObject;\n","export const text = {\n  loading: 'Loading app...',\n  noListName: '<no name>',\n  addPh: 'Quick-add a task...',\n  addSubtaskPh: 'Add a subtask to this task',\n  addSubtaskBtn: 'Add a subtask',\n  subtasks: 'Subtasks',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappucino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  saveTask: 'Save',\n  discardTask: 'Cancel changes',\n\n  notes: 'Notes',\n  notesPh: 'An optional description always helps'\n\n};\n","import firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ\",\n  authDomain: \"todo-list-react-33431.firebaseapp.com\",\n  databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n  projectId: \"todo-list-react-33431\",\n  storageBucket: \"todo-list-react-33431.appspot.com\",\n  messagingSenderId: \"153291173882\",\n  appId: \"1:153291173882:web:4eb5673b9a70ce5828fe43\",\n  measurementId: \"G-BCMCPMQHDB\"\n};\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\n// export const auth = firebase.auth;\nexport const db = firebase.database();\n","import { db } from './firebase';\n\nconst user = 'nicoemailcom';\n\nconst taskService = {\n\n  db: db,\n\n  path: '',\n\n  updateTask: async (task) => {\n    console.log('Updating task ', task.name);\n    try {\n      return await db.ref(`${ taskService.path }/tasks/${ task.key }`).update(task);\n    } catch (e) {\n      console.error('Error on update: ', e);\n    }\n  },\n\n  addTask: async (task) => {\n    console.log('Added task ', task.name);\n    try {\n      return await db.ref(`${ taskService.path }/tasks`).push(task);\n    } catch (e) {\n      console.error('Error on save: ', e);\n    }\n  },\n\n  deleteTask: async (task, tasks) => {\n    console.log('Deleting task ', task.name);\n    const index = tasks.findIndex((_task) => _task.key === task.key);\n    if (index >= 0) {\n      await db.ref(`${ taskService.path }/tasks/${ task.key }`).remove(() => {\n        console.log(`\"${ task.name }\" was removed!`);\n      });\n    }\n  },\n\n  getTasks: (listKey, done) => {\n    taskService.path = `lists/${ user }/${ listKey }`;\n\n    try {\n      return db.ref(taskService.path).on('value', (snapshot) => {\n\n        const listName = snapshot.child('name').val();\n\n        const list = {\n          key: snapshot.key,\n          name: listName,\n          tasks: []\n        };\n\n        snapshot.child('tasks').forEach((task) => {\n          list.tasks.push({\n            key: task.key,\n            subtasks: [],\n            ...task.val(),\n          });\n        })\n\n        done(list);\n\n        console.log('List with tasks loaded: ', list.tasks.length);\n      });\n    } catch (e) {\n      console.error('Error on fetching tasks: ', e);\n    }\n  },\n\n  getLists: (done) => {\n    try {\n      return db.ref(`lists/${ user }`).on('value', (snapshot) => {\n\n        const lists = [];\n        snapshot.forEach((list) => {\n          const listData = list.val();\n          const tasks = Object.values(listData.tasks || '' /* empty object actually... */);\n          const completedTasks = tasks.filter((t) => t.checked).length;\n          const openTasks = tasks.length - completedTasks;\n          lists.push({\n            key: list.key,\n            name: listData.name,\n            openTasks,\n            completedTasks\n          });\n        })\n\n        done(lists);\n\n        console.log('Lists loaded: ', lists.length);\n      });\n    } catch (e) {\n      console.error('Error on fetching tasks: ', e);\n    }\n  },\n\n  saveListName: async (listName) => {\n    console.log('Updating list name ', listName);\n\n    try {\n      return await db.ref(`${ taskService.path }`).update({ name: listName });\n    } catch (e) {\n      console.error('Error on update: ', e);\n    }\n  }\n};\n\nexport default taskService;\n","import Modal from './Modal';\nimport React, { useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from '../../text';\nimport taskService from '../../services/taskService';\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (task, keepOpen) {\n    if (task.key) {\n      await taskService.updateTask(task);\n    } else {\n      taskService.addTask(createTaskObject(task)).then((reference) => {\n        task.key = reference.key;\n      });\n    }\n    setModalOpen(!!keepOpen);\n  }\n\n  async function submit (e) {\n    e.preventDefault();\n\n    task.name = taskName;\n    task.description = taskDesc;\n    task.subtasks = subtasks;\n\n    await saveTask(task, false);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    setSubtasks([...task?.subtasks]);\n  }\n\n  function saveSubtask (e) {\n    e.preventDefault();\n\n    setSubtasks([\n      ...subtasks,\n      {\n        key: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ]);\n    e.target[0].value = '';\n  }\n\n  async function onAccept (e) {\n    await submit(e);\n    setModalOpen(false);\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        onAccept={ onAccept }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.saveTask + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.discardTask + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <form onSubmit={ submit }>\n          <div>\n            <label>Task Name</label>\n            <input\n              value={ taskName }\n              placeholder=\"Enter a name for the task\"\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.notes }</label>\n            <textarea\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            subtasks.map((sub) =>\n              <li key={ sub.key } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.key }\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <span> </span>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                className=\"input-field\"\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import { text } from 'text';\nimport React, { useState } from 'react';\nimport taskService from '../../../services/taskService';\n\nfunction Subtask ({ extraClass, task, setSubtasks }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [addSubtaskInput, setAddSubtaskInput] = useState(false);\n\n  function saveSubtask (e) {\n    e.preventDefault();\n    e.target[0].value = '';\n    setAddSubtaskInput(false);\n\n    task.subtasks = [\n      ...(task.subtasks || []),\n      {\n        key: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ];\n    taskService.updateTask(task);\n\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    taskService.updateTask(task);\n    setSubtasks(task.subtasks);\n  }\n\n  return (\n    <ul className={ 'list-unstyled flex-column ' + extraClass }>\n      {\n        (task.subtasks || []).map((sub) =>\n          <li key={ sub.key } title={ sub.timestamp } className=\"block\">\n            <label className=\"left\">\n              <input\n                type=\"checkbox\" checked={ sub.checked }\n                id={ sub.key }\n                onChange={ () => toggleSubtask(sub) }\n              />\n              <span> </span>\n            </label>\n            <span className=\"left\">{ sub.name }</span>\n          </li>\n        )\n      }\n      <li key=\"new-subtask\">\n        {\n          addSubtaskInput\n            ?\n            <form onSubmit={ saveSubtask }>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                autoFocus={ true }\n                className=\"input-field invisible\"\n              />\n            </form>\n            :\n            <button className=\"btn-flat subtle\" onClick={ () => setAddSubtaskInput(true) }>\n              <i className=\"material-icons left\">add_circle_outline</i>\n              { text.addSubtaskBtn }\n            </button>\n        }\n      </li>\n    </ul>\n  );\n}\n\nexport default Subtask;\n","import React, { useEffect, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport Subtask from './Subtask';\nimport { text } from 'text';\nimport taskService from '../../../services/taskService';\n\nfunction Task ({ task, onDelete }) {\n\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [mainCheckDisabled, setMainCheckDisabled] = useState(!!subtasks.find((s) => s.checked === false));\n  const [expandedTask, setExpandedTask] = useState(mainCheckDisabled);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    setMainCheckDisabled(!!task.subtasks.find((s) => s.checked === false))\n  }, [task.subtasks])\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    await taskService.updateTask(task);\n  }\n\n  return (\n    <li className={ (task.checked ? 'done' : '') + ' parent-hover task' } title={ task.timestamp }>\n      <div>\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            disabled={ mainCheckDisabled }\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <span> </span>\n        </label>\n        <a\n          href=\"#!\" className={ 'task-name ' + (task.checked ? '' : '') } onClick={ () => setModalOpen(true) }\n        >{ task.name }</a>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-subtle ml-5 material-icons right\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <button\n            className=\"child-hover toggle-expand btn-subtle ml-5 material-icons right\"\n            onClick={ () => setExpandedTask(!expandedTask) }\n          >add\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-subtle ml-5 material-icons right',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            task.description &&\n            <div className=\"ml-50\">\n              <p><span className=\"subtle\">{ text.notes }:</span> { task.description }</p>\n            </div>\n          }\n          <Subtask extraClass={ 'ml-50' } setSubtasks={ setSubtasks } subtasks={ subtasks } task={ task }/>\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import React from 'react';\nimport { text } from 'text';\n\nfunction ListTitle ({ list }) {\n  return (\n    list.editListName\n      ? <form onSubmit={ list.saveListName }>\n        <input\n          className=\"as-title h2 invisible\" autoFocus onBlur={ list.saveListName }\n          value={ list.listName || text.noListName }\n          onChange={ (e) => list.setListName(e.target.value) }\n        />\n      </form>\n      : <h2 className=\"center-align\" onClick={ () => list.setEditListName(true) }>{ list.listName || text.noListName }</h2>\n  );\n}\n\nexport default ListTitle;\n","import { useMemo, useState } from 'react';\nimport './_todo.scss';\nimport todoRenderer from 'components/Todo/Todo-view';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from '../../text';\n\nfunction Todo ({ list }) {\n\n  const [showCompleted, setShowCompleted] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [listName, setListName] = useState(list.name);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = list.tasks.filter((task) => !task.checked);\n  const completed = list.tasks.filter((task) => !!task.checked);\n\n  const allCompleted = useMemo(() => text.allTasksCompleted(), [ open.length ]);\n\n  let taskName = '';\n\n  async function submit (e) {\n    e.preventDefault();\n\n    await taskService.addTask(createTaskObject({ name: taskName }));\n  }\n\n  function changed (e) {\n    taskName = e.target.value;\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    await taskService.saveListName(listName);\n    setEditListName(false);\n  }\n\n  return todoRenderer({\n    open,\n    completed,\n    deleteTask: (task) => taskService.deleteTask(task, list.tasks),\n    submit,\n    changed,\n    showCompleted,\n    setShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    list: {\n      listName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setListName\n    }\n  });\n}\n\nexport default Todo;\n","import React from 'react';\nimport Task from 'components/Todo/Task/Task';\nimport { text } from 'text';\nimport TaskModal from 'components/Modal/TaskModal';\nimport ListTitle from 'components/ListTitle/ListTitle';\n\n\nexport default function todoRenderer ({\n  submit, changed, deleteTask, completed, open, showCompleted, setShowCompleted, modalOpen, setModalOpen, allCompleted, list\n}) {\n\n  return (\n    <>\n      <ListTitle list={ list }/>\n      { open.length ?\n        <ul className=\"list-unstyled\">\n          { open.map((task, index) =>\n            <Task\n              key={ index }\n              task={ task }\n              onDelete={ deleteTask }\n            />) }\n        </ul>\n        : <h4 className=\"left subtle center-align\">{ allCompleted }</h4>\n      }\n\n      <form className=\"form-inline\" onSubmit={ submit }>\n        <div className=\"form-group\">\n          <div className=\"input-group mb-2\">\n            <input\n              onChange={ changed } className=\"invisible\"\n              placeholder={ text.addPh } required\n              autoComplete=\"off\"\n              autoFocus\n            />\n          </div>\n        </div>\n      </form>\n\n      { completed.length ?\n        (\n          showCompleted\n            ?\n            <>\n              <hr/>\n              <button className=\"btn-flat\" onClick={ () => setShowCompleted(false) }>{ text.hideCompleted }</button>\n              <ul className=\"list-unstyled completed\">\n                { completed.map((task, index) =>\n                  <Task\n                    key={ index }\n                    task={ task }\n                    onDelete={ deleteTask }\n                  />) }\n              </ul>\n            </>\n            :\n            <>\n              <hr/>\n              <button className=\"btn-flat\" onClick={ () => setShowCompleted(true) }>{ text.showCompleted }</button>\n            </>\n        )\n        : <h5 className=\"left subtle center-align\">{ text.completedNo }</h5>\n      }\n\n      <TaskModal\n        trigger={ {\n          className: 'btn-floating btn-large green fixed-action-btn',\n          text: <i className=\"material-icons\">add</i>\n        } }\n        task={ {} }\n        modalOpen={ modalOpen }\n        setModalOpen={ setModalOpen }\n      />\n    </>\n  );\n}\n","import './_app-loader.scss';\nimport { text } from 'text';\nimport React from 'react';\n\nfunction Loader () {\n  return (\n    <span className=\"app-loader\">\n      <span>{ text.loading }</span>\n    </span>\n  )\n}\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport taskService from 'services/taskService';\n\nfunction TodoProjects ({ setListKey, listKey }) {\n\n  const [lists, setLists] = useState([]);\n\n  function changeList (_listKey) {\n    window.location.hash = _listKey;\n    setListKey(_listKey);\n  }\n\n  useEffect( () => {\n    taskService.getLists((_lists) => {\n      setLists(_lists);\n    });\n  }, [/* empty dependency means this function will NEVER be called again === componentDidMount */]);\n  return (\n    <>\n      <h3>Projects</h3>\n      <ul>\n        {\n          lists.map((a) =>\n            <li key={ a.key }>\n              <button className=\"btn-subtle\" onClick={ () => changeList(a.key) }>\n                { a.name } ({ a.openTasks } <span className=\"subtle\">/ { a.completedTasks }</span>)\n              </button>\n            </li>\n          ) }\n      </ul>\n    </>\n  );\n}\n\nexport default TodoProjects;\n","import React, { useEffect, useState } from 'react';\nimport Todo from 'components/Todo/Todo';\nimport taskService from './services/taskService';\nimport Loader from 'components/Loader/Loader';\nimport TodoProjects from './components/TodoProjects/TodoProjects';\n\nfunction App () {\n\n  const [listKey, setListKey] = useState(window.location.hash.substring(1) || '0');\n\n  const [list, setList] = useState({});\n  const [showLoader, setShowLoader] = useState(true);\n\n  const ListContext = React.createContext(list.key);\n\n  useEffect(() => {\n    taskService.getTasks(listKey, (list) => {\n      setList(list);\n      setShowLoader(false);\n    });\n    return () => {\n      taskService.db.ref(taskService.path).off('value');\n    };\n  }, [listKey]);\n\n  return (\n    <>\n      <div className=\"container flex-column\" id=\"todo\">\n        {\n          showLoader\n            ? <Loader/>\n            : <>\n              <div className=\"row\" style={ { width: '100%', margin: 0 } }>\n                <div className=\"col s3\">\n                  <TodoProjects listKey={ listKey } setListKey={ setListKey }/>\n                </div>\n                <div className=\"col s9\">\n                  <ListContext.Provider value={ list.key }>\n                    <Todo list={ list }/>\n                  </ListContext.Provider>\n                </div>\n              </div>\n            </>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}