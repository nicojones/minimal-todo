{"version":3,"sources":["services/environment.js","services/firebase.js","functions/sha1.js","services/authService.js","login/Signup.js","login/Login.js","services/handleError.js","services/taskService.js","services/projectService.js","functions/createTaskObject.js","text.js","components/Modal/Modal.js","components/Modal/TaskModal.js","components/Project/Project/ProjectTitle/ProjectTitle.js","components/Project/Project/Task/Subtask.js","components/Project/Project/Task/Task.js","components/Project/Project/Project.js","components/Project/Project/Project-view.js","components/Project/NoProject/NoProject.js","components/Project/ProjectList/ProjectListDropdown/ProjectListDropdown.js","components/Project/ProjectList/ProjectList.js","TodoApp.js","components/Loader/Loader.js","components/HomePage/Footer.js","components/HomePage/HomePage.js","App.js","index.js"],"names":["environment","url","firebase","initializeApp","apiKey","databaseURL","projectId","analytics","auth","db","firestore","sha1","str","a","buffer","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","x","toString","padStart","join","authService","authState","done","onAuthStateChanged","signup","signupData","originalLoginData","password","email","then","sha1Password","confirm","sha1Confirm","axios","method","data","response","login","loginData","userCredential","signInWithEmailAndPassword","localStorage","setItem","JSON","stringify","user","uid","currentUser","getIdToken","authToken","Signup","useState","getItem","isLoggedIn","setIsLoggedIn","username","name","setSignup","e","preventDefault","responseData","alert","console","log","to","onSubmit","className","value","onChange","target","placeholder","type","required","Login","setLogin","handleError","errorText","error","indexOf","split","pop","removeItem","window","location","replace","taskService","headers","authorization","updateTask","projectKey","task","info","id","result","addTask","deleteTask","getTasksForProject","collection","onSnapshot","tasksDoc","tasks","forEach","push","projectService","getProject","doc","project","getListOfProjects","where","projectsDoc","projects","projectData","Object","values","completedTasks","filter","t","checked","length","openTasks","shared","saveListName","newProject","message","deleteProject","addUserToProject","userIds","createTaskObject","timestamp","Date","subtasks","description","text","gotoApp","loading","noListName","toISOString","slice","addPh","addSubtaskPh","addSubtaskBtn","sharedProject","subtaskStatus","allTasksCompleted","incomplete","Math","floor","random","completed","completedNo","showCompleted","hideCompleted","saveTask","discardTask","notes","notesPh","addProject","addProjectPh","logout","Modal","children","modalOpen","okButton","cancelButton","onAccept","onCancel","onClick","dangerouslySetInnerHTML","__html","TaskModal","trigger","setModalOpen","subtaskName","setSubtaskName","setSubtasks","newSubtasks","setNewSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","useContext","ProjectContext","keepOpen","reference","submit","useEffect","minLength","sub","title","subtask","disabled","ProjectTitle","setShowCompleted","isLoading","editListName","autoFocus","projectName","setProjectName","setEditListName","Subtask","extraClass","saveSubtasks","addSubtaskInput","setAddSubtaskInput","Task","expandedTask","setExpandedTask","completedSubtasks","s","_task","expanded","isExpanded","toggleExpanded","toggleCompleted","onDelete","Project","projectTasks","setIsLoading","open","allCompleted","useMemo","taskNameChange","autoComplete","projectRender","NoProject","ProjectListDropdown","onAction","dropdownShown","setDropdownShown","ProjectList","setProjectKey","setProjects","setShowAddProject","newProjectName","setNewProjectName","actionName","userId","prompt","unsubscribeProjects","_projects","p","validProjectId","proj","htmlFor","snap","React","createContext","TodoApp","hash","substring","setProject","setProjectTasks","unsubscribeProject","unsubscribeTasks","Provider","Loader","Footer","href","HomePage","loaded","LoggedInUserContext","signOut","style","height","display","App","setLoaded","setUser","refreshToken","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c123ccea.chunk.js","sourcesContent":["const environment = {\n  url: 'https://us-central1-todo-list-react-33431.cloudfunctions.net/api',\n  // url: 'http://localhost:5000/todo-list-react-33431/us-central1/api',\n};\n\nexport default environment;\n","import firebase from 'firebase';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ\",\n  databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n  projectId: \"todo-list-react-33431\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const analytics = firebase.analytics;\nexport const auth = firebase.auth;\nexport const db = firebase.firestore;\n","export async function sha1( str ) {\n  const buffer = new TextEncoder('utf-8').encode( str );\n  const digest = await crypto.subtle.digest('SHA-1', buffer);\n\n  // Convert digest to hex string\n  return Array.from(new Uint8Array(digest)).map( x => x.toString(16).padStart(2,'0') ).join('');\n}\n","import axios from 'axios';\nimport environment from './environment';\nimport { auth } from './firebase';\nimport { sha1 } from 'functions/sha1';\n\nexport const authService = {\n\n  authState: (done) => {\n    auth().onAuthStateChanged(done);\n  },\n\n  signup: (signupData) => {\n    const originalLoginData = {\n      password: signupData.password,\n      email: signupData.email\n    };\n    return sha1(signupData.password)\n      .then((sha1Password) => {\n        signupData.password = sha1Password;\n        return sha1(signupData.confirm);\n      })\n      .then((sha1Confirm) => {\n        signupData.confirm = sha1Confirm;\n\n        return axios({\n          url: `${ environment.url }/signup`,\n          method: 'POST',\n          data: signupData\n        });\n      })\n      .then((response) => {\n        return authService.login(originalLoginData);\n      });\n  },\n\n  login: (loginData) => {\n    let userCredential;\n    return sha1(loginData.password)\n      .then((sha1Password) => {\n        return auth().signInWithEmailAndPassword(loginData.email, sha1Password);\n      })\n      .then((response) => {\n        localStorage.setItem('uid', JSON.stringify(response.user.uid));\n        userCredential = response;\n        return auth().currentUser.getIdToken();\n      })\n      .then((authToken) => {\n        localStorage.setItem('AuthToken', authToken);\n        return userCredential;\n      });\n  }\n};\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect } from 'react-router-dom';\n\nfunction Signup () {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'))\n  const [signup, setSignup] = useState({\n    email: 'nico@kupfer.es',\n    username: 'nicojones',\n    password: 'abcdef',\n    confirm: 'abcdef',\n    name: 'Nico Jones'\n  });\n\n\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    authService.signup(signup).then((responseData) => {\n      if (responseData.user) {\n        setSignup({});\n        setIsLoggedIn(true);\n      } else {\n        alert('error! please see console');\n        console.log(responseData);\n      }\n    })\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <form onSubmit={ onSubmit } className=\"flex-center-self\">\n            <input\n              value={ signup.email || '' } onChange={ (e) => setSignup({\n              ...signup,\n              email: e.target.value\n            }) } placeholder=\"email\" type=\"email\" required\n            />\n            <input\n              value={ signup.name || '' } onChange={ (e) => setSignup({\n              ...signup,\n              name: e.target.value\n            }) } placeholder=\"name\"  required\n            />\n            <input\n              value={ signup.username || '' } onChange={ (e) => setSignup({\n              ...signup,\n              username: e.target.value\n            }) } placeholder=\"username\" required\n            />\n            <input\n              value={ signup.password || '' } onChange={ (e) => setSignup({\n              ...signup,\n              password: e.target.value\n            }) } placeholder=\"password\" type=\"password\" required\n            />\n            <input\n              value={ signup.confirm || '' } onChange={ (e) => setSignup({\n              ...signup,\n              confirm: e.target.value\n            }) } placeholder=\"confirm\" type=\"password\" required\n            />\n            <button type=\"submit\" className=\"btn\">sign up</button>\n          </form>\n      }\n    </>\n  )\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect } from 'react-router-dom';\n\nfunction Login () {\n\n  const [login, setLogin] = useState({\n    email: 'nico@kupfer.es',\n    password: 'abcdef'\n  });\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n\n\n  function onSubmit(e) {\n    e.preventDefault();\n\n    authService.login(login).then((responseData) => {\n      if (responseData.user) {\n        setLogin({});\n        setIsLoggedIn(true);\n      } else {\n        alert('error! please see console');\n        console.log(responseData);\n      }\n    })\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <form onSubmit={ onSubmit } className=\"flex-center-self\">\n            <input\n              value={ login.email || '' } onChange={ (e) => setLogin({\n              ...login,\n              email: e.target.value\n            }) } placeholder=\"email\" type=\"email\"\n            />\n            <input\n              value={ login.password || '' } onChange={ (e) => setLogin({\n              ...login,\n              password: e.target.value\n            }) } placeholder=\"password\" type=\"password\"\n            />\n            <button type=\"submit\">log in</button>\n          </form>\n      }\n    </>\n  )\n}\n\nexport default Login;\n","export const handleError = (errorText, error) => {\n  console.error(errorText, error);\n  if (['401', '403'].indexOf(error.toString().split(' ').pop()) >= 0) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('AuthToken');\n    window.location.replace('/login');\n  }\n}\n","import { db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\n\nconst taskService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  updateTask: async (projectKey, task) => {\n    console.info('Updating task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'PUT',\n        data: task,\n        headers: taskService.headers()\n      }).then((result) => {\n        console.info('result from PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  addTask: async (projectKey, task) => {\n    console.info('Adding task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task`,\n        method: 'POST',\n        data: task,\n        headers: taskService.headers()\n      }).then((result) => {\n        console.info('result from POST', result);\n      });\n      // return await db.ref(`${ taskService.path }/tasks`).push(task);\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  deleteTask: async (projectKey, task) => {\n    console.info('Deleting task ', task.name, task.id);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'DELETE',\n        headers: taskService.headers()\n      }).then((result) => {\n        console.info('result from DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete task: ', e);\n    }\n  },\n\n  getTasksForProject: (projectKey, done) => {\n    try {\n      return taskService.db\n        .collection(`/projects/${ projectKey }/tasks`)\n        .onSnapshot((tasksDoc) => {\n        const tasks = [];\n        tasksDoc.forEach((task) => {\n          tasks.push({\n            id: task.id,\n            ...task.data()\n          });\n        });\n        done(tasks);\n      });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n};\n\nexport default taskService;\n","import { db, auth } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\n\nconst projectService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getProject: (projectKey, done) => {\n    try {\n      return projectService.db\n        .doc(`/projects/${ projectKey }`)\n        .onSnapshot((doc) => {\n          const project = doc.data();\n          project.id = doc.id;\n\n          console.info(`Changed to project \"${ project.name }\"`);\n\n          done(project);\n        });\n    } catch (e) {\n      handleError('Error on fetching Project: ', e);\n    }\n  },\n\n  getListOfProjects: (done) => {\n    try {\n      return projectService.db\n        .collection(`/projects`)\n        .where('uids', 'array-contains', auth().currentUser.uid)\n        .onSnapshot((projectsDoc) => {\n\n          const projects = [];\n          projectsDoc.forEach((doc) => {\n            const projectData = doc.data();\n            const tasks = Object.values(projectData.tasks || '' /* empty object actually... */);\n            const completedTasks = tasks.filter((t) => t.checked).length;\n            const openTasks = tasks.length - completedTasks;\n            projects.push({\n              id: doc.id,\n              name: projectData.name,\n              shared: projectData.shared,\n              openTasks,\n              completedTasks\n            });\n          });\n\n          done(projects);\n\n          console.info('Lists loaded: ', projects.length);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  saveListName: async (project) => {\n    console.info('Updating project ', project);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'PUT',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        console.info('result from Edit Project PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save project name: ', e);\n    }\n  },\n\n  newProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project`,\n        method: 'POST',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        console.info(result.data.message);\n        return result.data.project;\n      });\n    } catch (e) {\n      handleError('Error on create project: ', e);\n    }\n  },\n\n  deleteProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        console.info('result from project DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project: ', e);\n    }\n  },\n\n  addUserToProject: async (project, userIds) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/join`,\n        method: 'PATCH',\n        headers: projectService.headers(),\n        data: { userIds: userIds }\n      }).then((result) => {\n        console.info('result from joining Project', result);\n      });\n    } catch (e) {\n      handleError('Error on joining project: ', e);\n    }\n  }\n};\n\nexport default projectService;\n","function createTaskObject (task) {\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    id: task.id || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    subtasks: task.subtasks || [], // will not be saved in the DB. here just for reference...\n    description: task.description || ''\n  }\n}\n\nexport default createTaskObject;\n","const dateToday = new Date().toISOString().slice(0, 10);\n\nexport const text = {\n  gotoApp: 'Open app',\n  loading: 'Loading app...',\n  noListName: 'New Project ' + dateToday,\n  addPh: 'Quick-add a task...',\n  addSubtaskPh: 'Add subtasks to this task',\n  addSubtaskBtn: 'Add a subtask',\n  subtasks: 'Subtasks',\n  sharedProject: 'This project is shared',\n  subtaskStatus: '( Completed / Pending )',\n  deleteTask: 'Delete task and its subtasks? Can\\'t be undone',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappuccino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎',\n      'Make a Todolist: Done ✅',\n      'I am Finnish 🇫🇮 with all tasks.'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  saveTask: 'Save',\n  discardTask: 'Cancel changes',\n\n  notes: 'Notes',\n  notesPh: 'An optional description always helps',\n\n  projects: 'Projects',\n  addProject: 'Add a new project',\n  addProjectPh: 'Enter a name for a new project',\n  deleteProject: 'Delete this project and all the tasks? (cannot be undone)',\n\n  login: {\n    login: 'Log in',\n    signup: 'Sign up',\n    logout: 'Log out'\n  }\n\n};\n","import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n          <div className={ 'z-depth-5 modal open' }>\n            <div className=\"modal-content\">\n              { children }\n            </div>\n            <div className=\"modal-footer\">\n              {\n                okButton &&\n                <button\n                  onClick={ onAccept }\n                  className=\"modal-close waves-effect waves-green btn-flat btn\"\n                  dangerouslySetInnerHTML={ { __html: okButton } }\n                />\n              }\n              {\n                cancelButton &&\n                <button\n                  onClick={ onCancel }\n                  className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                  dangerouslySetInnerHTML={ { __html: cancelButton } }\n                />\n              }\n            </div>\n          </div>\n          <div className=\"backdrop\" onClick={ onCancel }/>\n        </>\n        : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\nimport React, { useContext, useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [newSubtasks, setNewSubtasks] = useState([]);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  const project = useContext(ProjectContext);\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (task, keepOpen) {\n    if (task.id) {\n      await taskService.updateTask(project.id, task);\n    } else {\n      taskService.addTask(project.id, createTaskObject(task)).then((reference) => {\n        task.id = reference.id;\n      });\n    }\n    setModalOpen(!!keepOpen);\n  }\n\n  async function submit (e) {\n    e.preventDefault();\n\n    task.name = taskName;\n    task.description = taskDesc;\n    task.subtasks = [...subtasks, ...newSubtasks];\n\n    await saveTask(task, false);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    setSubtasks([...task?.subtasks]);\n  }\n\n  function saveSubtask (e) {\n    e.preventDefault();\n\n    setNewSubtasks([\n      ...newSubtasks,\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ]);\n    setSubtaskName('');\n\n    e.target[0].value = '';\n  }\n\n  async function onAccept (e) {\n    await submit(e);\n    setModalOpen(false);\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        onAccept={ onAccept }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.saveTask + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.discardTask + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <h6 className=\"subtle mb-15 mt-5\">{ project.name }</h6>\n        <form onSubmit={ submit }>\n          <div>\n            <label>Task Name</label>\n            <input\n              value={ taskName } required minLength={ 3 }\n              placeholder=\"Enter a name for the task\"\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.notes }</label>\n            <textarea\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            (subtasks || []).map((sub) =>\n              <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.id }\n                    className=\"material-cb\"\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <div/>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          {\n            newSubtasks.map((sub) =>\n              <li key={ sub.id } className=\"block\">\n                <label className=\"left\">\n                  <input type=\"checkbox\" className=\"material-cb\" disabled/>\n                  <div/>\n                </label>\n                <span className=\"left subtle\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                className=\"input-field\"\n                required minLength={3}\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import React from 'react';\nimport { text } from 'text';\n\nfunction ProjectTitle ({ project, showCompleted, setShowCompleted, isLoading }) {\n\n  return (\n    project.editListName\n      ? <form onSubmit={ project.saveListName } className={ ( isLoading === 'name' ? ' loader-input' : '' ) }>\n        <input\n          className=\"as-title m0 invisible h4\" autoFocus /*onBlur={ project.saveListName }*/\n          value={ project.projectName }\n          onChange={ (e) => project.setProjectName(e.target.value) }\n        />\n      </form>\n      : <div className=\"flex-row\">\n        <h5 className=\"max-content m0\" onClick={ () => project.setEditListName(true) }>{ project.projectName }</h5>\n        {\n          showCompleted\n            ? <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(false) }\n              title={ text.hideCompleted }\n            >check_box</button>\n            : <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(true) }\n              title={ text.showCompleted }\n            >check_box_outline_blank</button>\n        }\n      </div>\n  );\n}\n\nexport default ProjectTitle;\n","import { text } from 'text';\nimport React, { useState } from 'react';\n\nfunction Subtask ({ extraClass, task, saveSubtasks }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [addSubtaskInput, setAddSubtaskInput] = useState(false);\n\n  function saveSubtask (e) {\n    e.preventDefault();\n    e.target[0].value = '';\n    setAddSubtaskInput(false);\n\n    task.subtasks = [\n      ...(task.subtasks || []),\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ];\n    saveSubtasks(task);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    saveSubtasks(task);\n  }\n\n  return (\n    <ul className={ 'list-unstyled flex-column ' + extraClass }>\n      {\n        (task.subtasks || []).map((sub) =>\n          <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n            <label className=\"left\">\n              <input\n                type=\"checkbox\" checked={ sub.checked }\n                id={ sub.id } className=\"material-cb\"\n                onChange={ () => toggleSubtask(sub) }\n              />\n              <div/>\n            </label>\n            <span className=\"left\">{ sub.name }</span>\n          </li>\n        )\n      }\n      <li key=\"new-subtask\">\n        {\n          addSubtaskInput\n            ?\n            <form onSubmit={ saveSubtask }>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                autoFocus={ true }\n                className=\"input-field invisible\"\n              />\n            </form>\n            :\n            <button className=\"btn-flat subtle\" onClick={ () => setAddSubtaskInput(true) }>\n              <i className=\"material-icons left\">add</i>\n              { text.addSubtaskBtn }\n            </button>\n        }\n      </li>\n    </ul>\n  );\n}\n\nexport default Subtask;\n","import React, { useContext, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport Subtask from './Subtask';\nimport { text } from 'text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\nfunction Task ({ task }) {\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedTask, setExpandedTask] = useState(false);\n\n  const project = useContext(ProjectContext);\n\n  const completedSubtasks = subtasks.filter((s) => !!s.checked).length;\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    // after changing the state...\n    if (task.checked) {\n      // set all subtasks as checked, since the main task was marked as checked.\n      (task.subtasks || []).forEach((_task) => _task.checked = true);\n      task.expanded = false;\n    }\n    await taskService.updateTask(project.id, task);\n  }\n\n  /**\n   * If you want to say the toggle state, just update this function\n   */\n  async function toggleExpanded (isExpanded) {\n    //task.expanded = isExpanded;\n    // await taskService.updateTask(task);\n    setExpandedTask(isExpanded);\n  }\n\n  async function saveSubtasks (task) {\n    setSubtasks(task.subtasks);\n    await taskService.updateTask(project.id, task);\n  }\n\n  async function onDelete () {\n    if (window.confirm(text.deleteTask)) {\n\n      await taskService.deleteTask(project.id, task)\n    }\n  }\n\n  return (\n    <li className={ (task.checked ? 'done' : '') + ' parent-hover task' } title={ task.timestamp }>\n      <div className=\"task-content\">\n        <button\n          className={ 'toggle-expand subtle btn-invisible material-icons tiny left ' + (expandedTask && ' expanded') }\n          onClick={ () => toggleExpanded(!expandedTask) }\n        >chevron_right\n        </button>\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            className=\"material-cb\"\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <div/>\n        </label>\n        <button\n          className={ 'btn-invisible task-name ' + (task.checked ? '' : '') }\n          onClick={ () => setModalOpen(true) }>\n          { task.name }\n          <span className=\"subtle child-hover ml-5\" title={ text.subtaskStatus }\n          >({ completedSubtasks } / { subtasks.length - completedSubtasks })</span>\n        </button>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-subtle ml-5 material-icons right\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-subtle ml-5 material-icons right',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            task.description &&\n            <div className=\"ml-50\">\n              <p><span className=\"subtle\">{ text.notes }:</span> { task.description }</p>\n            </div>\n          }\n          <Subtask extraClass={ 'ml-50' } saveSubtasks={ saveSubtasks } subtasks={ subtasks } task={ task }/>\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { useEffect, useMemo, useState } from 'react';\nimport './_project.scss';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'text';\nimport projectRender from './Project-view';\nimport projectService from '../../../services/projectService';\n\nfunction Project ({ project, projectTasks }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [showCompleted, setShowCompleted] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [projectName, setProjectName] = useState(project.name || text.noListName);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = projectTasks.filter((task) => !task.checked);\n  const completed = projectTasks.filter((task) => !!task.checked);\n\n  // const inputElement = useRef(null);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted()\n  }, [ open.length ]);\n\n  let taskName = '';\n\n  useEffect(() => {\n    setProjectName(project.name);\n  }, [project.name])\n\n  async function submit (e) {\n    e.preventDefault();\n    setIsLoading('task');\n    // inputElement.current && (inputElement.current.target.value = '');\n\n    await taskService.addTask(project.id, createTaskObject({ name: taskName }));\n    e.target[0].value = '';\n    setIsLoading('');\n  }\n\n  function taskNameChange (e) {\n    taskName = e.target.value;\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    setIsLoading('name');\n    await projectService.saveListName({ ...project, name: projectName });\n    setEditListName(false);\n    setIsLoading('');\n  }\n\n  return projectRender({\n    open,\n    completed,\n    submit,\n    taskNameChange,\n    showCompleted,\n    setShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    isLoading,\n    project: {\n      projectName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setProjectName\n    }\n  });\n}\n\nexport default Project;\n","import React from 'react';\nimport { text } from 'text';\nimport TaskModal from 'components/Modal/TaskModal';\nimport ProjectTitle from './ProjectTitle/ProjectTitle';\nimport Task from './Task/Task';\n\n\nexport default function projectRender ({\n  submit, taskNameChange, completed, open, showCompleted, setShowCompleted, modalOpen, setModalOpen, allCompleted, project, isLoading\n}) {\n\n  return (\n    <>\n      <ProjectTitle\n        project={ project } showCompleted={ showCompleted } setShowCompleted={ setShowCompleted }\n        isLoading={ isLoading }\n      />\n\n      <ul className=\"list-unstyled\">\n        { open.length ?\n          open.map((task) =>\n            <Task\n              key={ task.id }\n              task={ task }\n            />)\n          : (completed.length ? <li><h5 className=\"subtle max-content\">{ allCompleted }</h5></li> : '')\n        }\n        { showCompleted && completed.map((task) =>\n          <Task\n            key={ task.id }\n            task={ task }\n          />) }\n\n        <li className=\"task\">\n          <form onSubmit={ submit }\n            className={ 'flex-row task-content form-inline' + (isLoading === 'task' ? ' loader-input' : '') }>\n            <i /* Just to give the right padding */ className=\"material-icons left v-hidden mr-11\">add</i>\n            <i className=\"material-icons left subtle\">add</i>\n            <div className=\"form-group\">\n              <div className=\"input-group mb-2\">\n                <input\n                  onChange={ taskNameChange } className=\"invisible f-100\"\n                  placeholder={ text.addPh } required\n                  autoComplete=\"off\" /*ref={ inputElement }*/\n                />\n              </div>\n            </div>\n          </form>\n        </li>\n      </ul>\n\n      <TaskModal\n        trigger={ {\n          className: 'btn-floating btn-large fixed-action-btn subtle-bg',\n          text: <i className=\"material-icons\">add</i>\n        } }\n        task={ {} }\n        modalOpen={ modalOpen }\n        setModalOpen={ setModalOpen }\n      />\n    </>\n  );\n}\n","function NoProject () {\n  return (\n    <>\n      <h6>Select a project or create a new one.</h6>\n    </>\n  )\n}\n\nexport default NoProject;\n","import React, { useState } from 'react';\n\nfunction ProjectListDropdown ({ project, onAction }) {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  return (\n    <>\n      <button className=\"btn-invisible child-hover ch-hidden left\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"tiny material-icons subtle\">more_horiz</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"pl-dropdown\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"pl-dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('delete', project) }>\n                <i className=\"tiny material-icons subtle\">delete</i> Delete Project\n              </button>\n            </li>\n            <li className=\"pl-dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('share', project) }>\n                <i className=\"tiny material-icons subtle\">people_outline</i> Share Project\n              </button>\n            </li>\n          </ul>\n          <div className=\"pl-backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default ProjectListDropdown;\n","import React, { useEffect, useState } from 'react';\nimport { text } from 'text';\nimport './_project-list.scss';\nimport projectService from 'services/projectService';\nimport ProjectListDropdown from './ProjectListDropdown/ProjectListDropdown';\n\nfunction validProjectId (projectId, projects) {\n  // If there's a project set in the URL and it's valid (it exists)\n  if (projectId && projects.filter((p) => p.id === projectId).length) {\n    return projectId;\n  }\n  return ''; // otherwise don't set any project.\n}\n\nfunction ProjectList ({ projectKey, setProjectKey }) {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [projects, setProjects] = useState([]);\n  const [showAddProject, setShowAddProject] = useState(false);\n\n  const [newProjectName, setNewProjectName] = useState('');\n\n  useEffect(() => {\n    const unsubscribeProjects = projectService.getListOfProjects((_projects) => {\n      setProjectKey(validProjectId(projectKey, _projects)); // set the first project as selected...\n      setProjects(_projects);\n    });\n\n    return () => {\n      unsubscribeProjects();\n    };\n  }, [projectKey]);\n\n  // }, [/* empty dependency means this function will NEVER be called again === componentDidMount */]);\n\n  function addNewProject (e) {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    projectService\n      .newProject({ name: newProjectName })\n      .then((snap) => {\n        setShowAddProject(false);\n        setNewProjectName('');\n        setIsLoading(false);\n        setProjectKey(snap.id);\n      });\n  }\n\n  async function deleteProject (project) {\n    if (window.confirm(text.deleteProject)) {\n      // setIsLoading(true);\n      await projectService.deleteProject(project);\n      setProjectKey('');\n      // setIsLoading(false);\n    }\n  }\n\n  function setProject (project) {\n    if (project.id === projectKey) {\n      return; // can't change to itself... it also causes a re-render problem in the `useEffect`\n    }\n    setProjectKey(project.id);\n  }\n\n  async function onAction (actionName, project) {\n    switch (actionName) {\n      case 'delete':\n        await deleteProject(project);\n        break;\n      case 'share':\n        const userId = prompt('User Id to join?');\n        await projectService.addUserToProject(project, [userId]);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <h5 className=\"center-align\">{ text.projects }</h5>\n      <ul className=\"projects-list flex-column\">\n        {\n          projects.map((proj) =>\n            <li\n              key={ proj.id } className={ (projectKey === proj.id ? 'selected' : '') + ' mb-5 parent-hover flex-row' }\n            >\n              <ProjectListDropdown project={ proj } onAction={ onAction }/>\n              <button className=\"btn-invisible left left-align\" onClick={ () => setProject(proj) }>\n                {\n                  proj.shared &&\n                  <i\n                    className=\"tiny material-icons subtle left mr-5\"\n                    title={ text.sharedProject }\n                  >people_outline</i>\n                }\n                { proj.name }\n                {/*( { proj.openTasks } <span className=\"subtle\">/ { proj.completedTasks }</span> )*/ }\n              </button>\n            </li>\n          )\n        }\n        <li key=\"new-project\" className=\"mb-5 parent-hover flex-row\">\n          <button className=\"btn-invisible child-hover ch-hidden left\">\n            <label htmlFor=\"new-project-input\" className=\"pointer\">\n              <i className=\"tiny material-icons subtle\">add</i>\n            </label>\n          </button>\n          <form onSubmit={ addNewProject } className={ 'add-project flex-row' + (isLoading ? ' loader-input' : '') }>\n            <input\n              className=\"invisible subtle left-align\"\n              onChange={ (e) => setNewProjectName(e.target.value) }\n              required minLength=\"3\"\n              value={ newProjectName }\n              id=\"new-project-input\"\n              placeholder={ text.addProjectPh }\n            />\n          </form>\n\n        </li>\n      </ul>\n    </>\n  );\n}\n\n\nexport default ProjectList;\n","import React, { useEffect, useState } from 'react';\n\nimport taskService from 'services/taskService';\nimport projectService from 'services/projectService';\nimport Project from 'components/Project/Project/Project';\nimport NoProject from 'components/Project/NoProject/NoProject';\nimport ProjectList from 'components/Project/ProjectList/ProjectList';\n\nexport const ProjectContext = React.createContext({});\n\nfunction TodoApp () {\n\n  const [projectKey, setProjectKey] = useState(window.location.hash.substring(1));\n\n  const [project, setProject] = useState({});\n  const [projectTasks, setProjectTasks] = useState([]);\n\n  useEffect(() => {\n    window.location.hash = projectKey || '';\n\n    if (projectKey) {\n\n      const unsubscribeProject = projectService.getProject(projectKey, (project) => {\n        setProject(project);\n      });\n\n      const unsubscribeTasks = taskService.getTasksForProject(projectKey, (project) => {\n        setProjectTasks(project);\n      });\n\n      return () => {\n        unsubscribeProject();\n        unsubscribeTasks();\n      };\n    }\n  }, [projectKey]);\n\n  return (\n    <>\n      <div className=\"row m0 w-100\">\n        <div className=\"col s3 projects-list-box\">\n          <ProjectList\n            projectKey={ projectKey }\n            setProjectKey={ setProjectKey }\n          />\n        </div>\n        <div className=\"col s9 tasks-list-box flex-column\">\n          <ProjectContext.Provider\n            value={ {\n              id: project.id,\n              name: project.name\n            } }\n          >\n            {\n              projectKey\n                ? <Project project={ project } projectTasks={ projectTasks }/>\n                : <NoProject/>\n            }\n          </ProjectContext.Provider>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TodoApp;\n","import './_app-loader.scss';\nimport { text } from 'text';\nimport React from 'react';\n\nfunction Loader () {\n  return (\n    <span className=\"app-loader\">\n      <span className=\"loader-img loader-lg\"/>\n    </span>\n  )\n}\n\nexport default Loader;\n","function Footer () {\n  return (\n    <>\n      <footer className=\"page-footer\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Footer Content</h5>\n              <p\n                className=\"grey-text text-lighten-4\"\n              >You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Links</h5>\n              <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2014 Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport Footer from './Footer';\nimport { LoggedInUserContext } from 'App';\nimport { auth } from 'services/firebase';\nimport { text } from '../../text';\n\nfunction HomePage ({ loaded }) {\n\n  const user = useContext(LoggedInUserContext);\n\n  function signOut (e) {\n    e.preventDefault();\n\n    auth().signOut().then(() => {\n      console.log('You\\'ve been signed out of the app');\n    })\n  }\n\n  return (\n    <>\n\n      <nav>\n        <div className=\"nav-wrapper container\">\n          <a href=\"/app\" className=\"brand-logo\">Todo List</a>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            {\n              user\n                ? loaded && <>\n                  <li><a href=\"/app\">{ text.gotoApp }</a></li>\n                  <li><a href=\"#!\" onClick={ signOut } className=\"btn-invisible\">{ text.login.logout }</a></li>\n                </>\n                : loaded && <>\n                  <li><a href=\"/login\">{ text.login.login }</a></li>\n                  <li><a href=\"/signup\">{ text.login.signup }</a></li>\n                </>\n            }\n          </ul>\n        </div>\n      </nav>\n      <div\n        style={ {\n          height: '300px',\n          display: 'block'\n        } }\n      >\n        <h4 className=\"flex-center-self center-align\">Welcome to the best todo-app</h4>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport Signup from './login/Signup';\nimport Login from './login/Login';\nimport TodoApp from './TodoApp';\nimport { authService } from './services/authService';\nimport Loader from './components/Loader/Loader';\nimport HomePage from './components/HomePage/HomePage';\n\nexport const LoggedInUserContext = React.createContext({});\n\nfunction App () {\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(false);\n\n  authService.authState((user) => {\n    console.info('User state changed', user && user.refreshToken);\n    setLoaded(true);\n    setUser(user);\n  });\n\n  return (\n    <>\n      <LoggedInUserContext.Provider value={ user }>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */ }\n          <Switch>\n            <Route path=\"/\" exact={ true }>\n              <HomePage loaded={ loaded }/>\n            </Route>\n            { loaded\n              ?\n              <>\n                <Route path=\"/signup\">\n                  <Signup/>\n                </Route>\n                <Route path=\"/login\">\n                  <Login/>\n                </Route>\n                <Route path=\"/app\">\n                  <TodoApp/>\n                </Route>\n              </>\n              : <Loader/>\n            }\n          </Switch>\n        </Router>\n      </LoggedInUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\nimport 'assets/loader.svg';\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}