{"version":3,"sources":["functions/screenSize.js","functions/clientOS.js","services/environment.js","services/firebase.js","functions/sha1.js","config/text.js","services/authService.js","config/constants.js","config/urls.js","login/LoginBox.js","login/Signup.js","login/Login.js","components/Dropdown/UserSettingsDropdown.js","components/Navbar/Navbar.js","services/handleError.js","functions/time.js","services/taskService.js","functions/createTaskObject.js","components/Project/ProjectOptions/ProjectOptions.js","services/projectService.js","components/Project/ProjectTitle/ProjectTitle.js","components/Project/ProjectTitle/index.js","components/Modal/Modal.js","components/Modal/TaskModal.js","components/Project/Task/Task.js","components/Project/Project.js","components/Project/Project-view.js","components/NoProject/NoProject.js","components/Project/ProjectList/ProjectListDropdown/ProjectListDropdown.js","components/Project/ProjectList/ProjectListDropdown/index.js","components/ColorPicker/ColorPicker.js","functions/createProjectObject.js","components/Project/ProjectList/ProjectList.js","components/Project/ProjectList/index.js","functions/reservedKey.js","services/drawerService.js","components/Project/ProjectOptions/index.js","components/Drawer/Drawer.js","TodoApp.js","components/Loader/Loader.js","components/HomePage/Footer.js","components/HomePage/Header.js","components/HomePage/HomePage.js","App.js","index.js"],"names":["window","isSmallScreen","onresize","innerWidth","osName","Unknown","Android","iOS","Windows","MacOS","Linux","storage","environment","production","firebase","apiKey","databaseURL","projectId","authDomain","storageBucket","messagingSenderId","appId","measurementId","url","initializeApp","analytics","auth","db","firestore","sha1","str","a","buffer","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","x","toString","padStart","join","useEmulator","debounceAuth","text","gotoApp","loading","noListName","Date","toISOString","slice","task","name","delete","addTaskPh","phs","Math","floor","random","length","addSubtaskPh","save","discard","notes","notesPh","drawer","inbox","_","invalidDrawer","sharedProject","subtaskStatus","allTasksCompleted","incomplete","completed","completedNo","showCompleted","hideCompleted","project","s","noSelected","share","tasks","long","add","ph","genericError","loggedInAs","login","signup","logout","noAccount","yesAccount","error","success","signupSuccess","invalidPass","invalidUser","constants","defaultProjectColor","toast","position","maxDepth","defaultSort","sort","icon","authService","setToken","token","localStorage","setItem","authState","done","onIdTokenChanged","user","clearTimeout","setTimeout","getIdToken","then","signupData","password","sha1Password","axios","method","data","response","email","loginData","userCredential","signInWithEmailAndPassword","JSON","stringify","uid","currentUser","authToken","loginCatch","reason","console","code","cogoToast","message","e","preventDefault","signOut","validateSignup","username","confirm","urls","home","app","id","inboxUrl","LoginBox","children","title","className","Signup","history","useHistory","useState","getItem","isLoggedIn","setIsLoggedIn","setSignup","setLoading","signupError","setSignupError","_signupError","errors","Object","values","responseData","catch","React","useContext","LoggedInUserContext","push","to","onSubmit","value","onChange","target","placeholder","type","required","autoFocus","autoComplete","Login","setLogin","info","UserSettingsDropdown","dropdownShown","setDropdownShown","onClick","Navbar","setShowSidebar","showSidebar","handleError","errorText","lastError","indexOf","split","pop","removeItem","location","hash","time","timeStr","m","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","taskService","headers","authorization","updateTask","addTask","taskId","deleteTask","getTasksForProject","projectKey","sortField","sortDirection","log","collection","orderBy","onSnapshot","tasksDoc","forEach","taskDoc","parentId","timestamp","seconds","subtasks","toggleTask","doc","update","checked","expanded","createTaskObject","level","description","priority","ProjectOptions","setSort","sortDropdown","showSortDropdown","moreDropdown","showMoreDropdown","d","projectService","getProject","exists","getListOfProjects","where","projectsDoc","projects","projectData","shared","color","updateProject","showSuccess","result","newProject","deleteProject","deleteProjectTasks","getUserByEmail","userEmail","addUserToProject","ProjectTitle","projectFunctions","toggleShowCompleted","isLoading","ProjectContext","psc","prompt","editListName","saveListName","projectName","disabled","onBlur","setEditListName","setProjectName","deleteTasks","Modal","modalOpen","okButton","cancelButton","onAccept","onCancel","dangerouslySetInnerHTML","__html","TaskModal","trigger","setModalOpen","subtaskName","setSubtaskName","setSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","saveTask","subtask","useEffect","minLength","addPh","sub","toggleSubtask","Task","expandedTask","setExpandedTask","openLength","filter","doneClass","showExpanderClass","isExpanded","toggleExpanded","toggleCompleted","onDelete","aria-details","t","Project","p","setProject","projectLoading","setProjectLoading","projectTasks","setProjectTasks","setIsLoading","setShowCompleted","open","allCompleted","useMemo","hexColor","projectPartial","unsubscribeProject","unsubscribeTasks","taskNameChange","load","changeColor","NoProject","ProjectListDropdown","onAction","actionName","ColorPicker","onChangeComplete","showColorPicker","setShowColorPicker","style","backgroundColor","colorChoice","hex","createProjectObject","ProjectList","changeToProject","setProjects","newProjectName","setNewProjectName","_project","unsubscribeProjects","_projects","find","validProject","proj","htmlFor","snap","reservedKey","drawerService","getDrawer","drawerKey","query","taskCollection","collectionGroup","taskData","Drawer","drawerUrl","drawerTasks","setDrawerTasks","createContext","TodoApp","useParams","projectKeyParam","Provider","Loader","Footer","href","Header","loaded","HomePage","height","display","App","setLoaded","setUser","path","exact","component","root","document","getElementById","os","platform","navigator","unknown","isMobile","test","userAgent","guessClientOS","classList","ReactDOM","render"],"mappings":"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","file":"static/js/main.5b2e8227.chunk.js","sourcesContent":["const smallWindow = 800; // smaller than this, and it's considered small.\n\nwindow.isSmallScreen = false;\n\nwindow.onresize = function () {\n  window.isSmallScreen = (window.innerWidth < smallWindow);\n}\nwindow.onresize();\n\n","export const osName = {\n  Unknown: 'u',\n  Android: 'android',\n  iOS: 'ios',\n  Windows: 'win',\n  MacOS: 'mac',\n  Linux: 'linux',\n  storage: 'cs' // the name of the localstorage key.\n}\n\n\n/**\n * Function from StackOverflow to detect OS. Maybe not needed, but it's just to be fancy\n * {@url https://stackoverflow.com/a/38241481/2016686}\n */\nexport function guessClientOS () {\n  /**\n   * As detected by the browser.\n   */\n  const platform = window.navigator.platform;\n\n  /**\n   * These are the possible values\n   */\n  const macOsPlatforms = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'];\n  const windowsPlatforms = ['Win32', 'Win64', 'Windows', 'WinCE'];\n\n  /**\n   * This is what we need to guess.\n   */\n  let os = osName.unknown;\n  let isMobile = false;\n\n  if (macOsPlatforms.indexOf(platform) !== -1) {\n    os = osName.MacOS;\n  } else if (windowsPlatforms.indexOf(platform) !== -1) {\n    os = osName.Windows;\n  } else if (/Linux/.test(platform)) {\n    os = osName.Linux;\n  } else {\n    // Otherwise, we try with phones...\n    const userAgent = window.navigator.userAgent;\n    const iosPlatforms = ['iPhone', 'iPad', 'iPod'];\n    if (/Android/.test(userAgent)) {\n      os = osName.Android;\n      isMobile = true;\n    } else if (iosPlatforms.indexOf(platform) !== -1) {\n      os = osName.iOS;\n      isMobile = true;\n    }\n  }\n\n  return { isMobile, os };\n}\n","const environment = {\n  production: true,\n\n  firebase: {\n    apiKey: 'AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ',\n    databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n    projectId: 'todo-list-react-33431',\n    authDomain: \"todo-list-react-33431.firebaseapp.com\",\n    storageBucket: \"todo-list-react-33431.appspot.com\",\n    messagingSenderId: \"153291173882\",\n    appId: \"1:153291173882:web:4eb5673b9a70ce5828fe43\",\n    measurementId: \"G-BCMCPMQHDB\"\n  },\n\n  url: 'https://us-central1-todo-list-react-33431.cloudfunctions.net/api',\n};\n\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  // dev code\n  environment.production = false; environment.url = 'http://localhost:5000/todo-list-react-33431/us-central1/api';\n  console.info('RUNNING ON DEVELOPMENT MODE', environment.url)\n} else {\n  // production code\n}\n\nexport default environment;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\nimport environment from './environment';\n\n\nfirebase.initializeApp(environment.firebase);\n\nexport const analytics = firebase.analytics;\nexport const auth = firebase.auth;\nexport const db = firebase.firestore;\n\nif (environment.production) {\n  analytics();\n} else {\n  // IS DEV\n  db().useEmulator('localhost', 8080);\n  auth().useEmulator('http://localhost:9099/');\n}\n","export async function sha1( str ) {\n  const buffer = new TextEncoder('utf-8').encode( str );\n  const digest = await crypto.subtle.digest('SHA-1', buffer);\n\n  // Convert digest to hex string\n  return Array.from(new Uint8Array(digest)).map( x => x.toString(16).padStart(2,'0') ).join('');\n}\n","const dateToday = new Date().toISOString().slice(0, 10);\n\nexport const text = {\n  gotoApp: 'Open app',\n  loading: 'Loading app...',\n  noListName: 'New Project ' + dateToday,\n\n  task: {\n    name: 'Name of the task',\n    delete: 'Delete task and its subtasks? Can\\'t be undone',\n    addTaskPh: () => {\n      const phs = [\n        'e.g. Buy carrots',\n        'e.g. Clean apartment in the morning',\n        'e.g. Do some exercise',\n        'Add a new task ...',\n        'Create a task ...',\n        'e.g. Call family',\n        'e.g. Schedule interview'\n      ];\n      return phs[Math.floor(Math.random() * phs.length)];\n    },\n    addSubtaskPh: 'Add subtasks to this task',\n    save: 'Save',\n    discard: 'Cancel changes',\n    notes: 'Notes',\n    notesPh: 'An optional description always helps'\n  },\n\n  drawer: {\n    inbox: {\n      _: 'Inbox'\n    },\n    invalidDrawer: 'Invalid URL (not an actual project)'\n  },\n  // addSubtaskBtn: 'Add a subtask',\n  // subtasks: 'Subtasks',\n  sharedProject: 'This project is shared',\n  subtaskStatus: '( Pending / Completed )',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappuccino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎',\n      'Make a Todolist: Done ✅',\n      'I am Finnish 🇫🇮 with all tasks.'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  project: {\n    s: 'Projects',\n    noSelected: 'Select a project or create a new one.',\n    share: 'Share Project',\n    delete: {\n      _: 'Delete Project',\n      tasks: 'Delete all tasks',\n      long: 'Delete this project and all the tasks? (cannot be undone)'\n    },\n    add: {\n      // _: 'Add a new project',\n      ph: 'Enter a name for a new project'\n    }\n  },\n\n  genericError: 'An error occurred. Please see console for details',\n\n  loggedInAs: (name) => `Logged in as ${ name }.`,\n\n  login: {\n    login: 'Log in',\n    signup: 'Sign up',\n    logout: 'Log out',\n    noAccount: 'Don\\'t have an account?',\n    yesAccount: 'Already a user?',\n    error: 'Invalid credentials',\n    success: 'Welcome Back!',\n    signupSuccess: 'Account created! Logging you in...',\n    invalidPass: 'Invalid login credentials',\n    invalidUser: 'No user exists for this email'\n  },\n\n};\n","import axios from 'axios';\nimport environment from './environment';\nimport cogoToast from 'cogo-toast';\nimport { auth } from './firebase';\nimport { sha1 } from 'functions/sha1';\nimport { text } from 'config/text';\nimport { constants } from 'config/constants';\n\nlet debounceAuth;\n\nexport const authService = {\n\n  setToken: (token) => {\n    localStorage.setItem('AuthToken', token);\n  },\n\n  authState: (done) => {\n    auth().onIdTokenChanged((user) => {\n      clearTimeout(debounceAuth);\n      debounceAuth = setTimeout(() => {\n        user && user.getIdToken(true).then((token) => {\n          authService.setToken(token);\n        });\n\n        done(user);\n      }, 300);\n    });\n  },\n\n  signup: (signupData) => {\n    return sha1(signupData.password)\n      .then((sha1Password) => {\n        return axios({\n          url: `${ environment.url }/signup`,\n          method: 'POST',\n          data: {\n            ...signupData,\n            password: sha1Password\n          }\n        });\n      })\n      .then((response) => {\n        return authService.login({\n          email: signupData.email,\n          password: signupData.password\n        });\n      });\n  },\n\n  login: (loginData) => {\n    let userCredential;\n\n    return sha1(loginData.password)\n      .then((sha1Password) => {\n        return auth().signInWithEmailAndPassword(loginData.email, sha1Password);\n      })\n      .then((response) => {\n        localStorage.setItem('uid', JSON.stringify(response.user.uid));\n        userCredential = response;\n        return auth().currentUser.getIdToken();\n      })\n      .then((authToken) => {\n        authService.setToken(authToken);\n        return userCredential;\n      });\n  },\n\n  loginCatch: (reason) => {\n    console.error(reason, reason.code, reason.code === 'auth/user-not-found');\n    if (reason.code === 'auth/wrong-password') {\n      cogoToast.error(text.login.invalidPass, constants.toast);\n    } else if (reason.code === 'auth/user-not-found') {\n      cogoToast.error(text.login.invalidUser, constants.toast);\n    } else {\n      cogoToast.error(reason.message, constants.toast);\n    }\n  },\n\n  logout: (e) => {\n    e.preventDefault();\n\n    auth().signOut().then(() => {\n      cogoToast.success('You\\'ve been signed out of the app', { position: 'bottom-center' });\n    });\n  },\n\n  validateSignup: (signupData) => {\n    if (!signupData.username) {\n      return { username: 'Must enter a valid username' };\n    }\n    if (!signupData.name || signupData.name.length <= 2) {\n      return { name: 'Must enter a longer name' };\n    }\n    if (!signupData.email || signupData.email.length <= 5) {\n      return { email: 'Invalid email' };\n    }\n    if (!signupData.password || !signupData.confirm) {\n      return { password: 'Password can\\'t be empty' };\n    }\n    if (signupData.password !== signupData.confirm) {\n      return { password: 'Passwords don\\'t match' };\n    }\n    return {};\n  }\n};\n","export const constants = {\n  defaultProjectColor: '#aaa',\n  toast: { position: 'bottom-center' },\n  maxDepth: 3,\n  defaultSort: 'timestamp,desc',\n  sort: [\n    { icon: 'sort_by_alpha', name: 'A -> Z', sort: '_name_lower,asc' },\n    { icon: 'sort_by_alpha', name: 'Z -> A', sort: '_name_lower,desc' },\n    { icon: 'arrow_downward', name: 'Oldest First', sort: 'timestamp,asc' },\n    { icon: 'arrow_upward', name: 'Newest First', sort: 'timestamp,desc' },\n    { icon: 'flag', name: 'Priority', sort: 'priority,desc'}\n  ]\n};\n","export const urls = {\n  home: '/',\n  app: '/app',\n  project: (id) => `${ urls.app }/${ id }`,\n  login: '/login',\n  signup: '/signup',\n\n  inboxUrl: 'inbox',\n}\n","import React from 'react';\nimport './_login-box.scss';\n\nfunction LoginBox ({ children, title, loading }) {\n  return (\n    <>\n      <div className={ 'flex-column vh-100 place-center' + ( loading ? ' loader-input cover' : '' ) }>\n        <div className=\"login-box\">\n          { title && <h5 className=\"mt-5\">{ title }</h5> }\n          { children }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginBox;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from '../App';\nimport cogoToast from 'cogo-toast';\nimport LoginBox from './LoginBox';\nimport { constants } from 'config/constants';\n\nfunction Signup () {\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n  const [signup, setSignup] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [signupError, setSignupError] = useState({});\n\n\n  async function onSubmit (e) {\n    e.preventDefault();\n\n    const _signupError = authService.validateSignup(signup);\n    const errors = Object.values(_signupError);\n    if (!errors.length) {\n      setLoading(true);\n      authService\n        .signup(signup)\n        .then((responseData) => {\n          setLoading(false);\n          if (responseData.user) {\n            cogoToast.success(text.login.signupSuccess, constants.toast);\n            setSignup({});\n            setIsLoggedIn(true);\n          }\n        })\n        .catch(({ response } ) => {\n          if (response.data && response.data.code) {\n            authService.loginCatch(response.data);\n          } else {\n            setSignupError(response.data);\n            const errors = Object.values(response.data);\n            errors.length && cogoToast.error(errors[0], constants.toast);\n          }\n          setLoading(false);\n        });\n    } else {\n      setSignupError(_signupError);\n      errors.length && cogoToast.error(errors[0], constants.toast);\n    }\n  }\n\n  // If the user is logged in already, redirect to the app!\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <>\n            <LoginBox title={ text.login.signup } loading={ loading }>\n              <form onSubmit={ onSubmit } className=\"flex-center-self\">\n                <input\n                  value={ signup.email || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" required autoFocus autoComplete=\"off\"\n                />\n                { signupError.email && <small>{ signupError.email }</small> }\n                <input\n                  value={ signup.name || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  name: e.target.value\n                }) } placeholder=\"name\" required autoComplete=\"off\"\n                />\n                { signupError.name && <small>{ signupError.name }</small> }\n                <input\n                  value={ signup.username || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  username: e.target.value\n                }) } placeholder=\"username\" required autoComplete=\"off\"\n                />\n                { signupError.username && <small>{ signupError.username }</small> }\n                <input\n                  value={ signup.password || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" required autoComplete=\"off\"\n                />\n                { signupError.password && <small>{ signupError.password }</small> }\n                <input\n                  value={ signup.confirm || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  confirm: e.target.value\n                }) } placeholder=\"confirm\" type=\"password\" required autoComplete=\"off\"\n                />\n                { signupError.password && <small>{ signupError.password }</small> }\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.signup }</button>\n                  <Link to={ urls.login } className=\"btn-flat\">{ text.login.yesAccount } { text.login.login }</Link>\n                </div>\n              </form>\n            </LoginBox>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { urls } from 'config/urls';\nimport { text } from 'config/text';\nimport { constants } from 'config/constants';\nimport { LoggedInUserContext } from 'App';\nimport cogoToast from 'cogo-toast';\nimport LoginBox from './LoginBox';\n\nfunction Login () {\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [login, setLogin] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    authService\n      .login(login)\n      .then((responseData /* Returns {user, error}! */) => {\n\n        setLoading(false);\n\n        if (responseData.user) {\n          // setLogin({});\n          setIsLoggedIn(true);\n          cogoToast.success(text.login.success, constants.toast);\n        } else {\n          if (responseData.error.code === 400) {\n            cogoToast.error(text.login.error, constants.toast);\n          }\n          console.info(responseData);\n        }\n      })\n      .catch((reason) => {\n        setLoading(false);\n        authService.loginCatch(reason);\n      });\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to={ urls.app }/>\n          :\n          <>\n            <LoginBox title={ text.login.login } loading={ loading }>\n              <form onSubmit={ onSubmit } className=\"flex-center-self\">\n                <input\n                  value={ login.email || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" autoFocus required\n                />\n                <input\n                  value={ login.password || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" autoComplete=\"off\" required\n                />\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.login }</button>\n                  <Link\n                    to={ urls.signup } className=\"btn-flat right\"\n                  >{ text.login.noAccount } { text.login.signup }</Link>\n                </div>\n              </form>\n            </LoginBox>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { text } from '../../config/text';\nimport { LoggedInUserContext } from '../../App';\nimport { authService } from '../../services/authService';\n\nfunction UserSettingsDropdown () {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  const user = React.useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <button className=\"btn-invisible\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"material-icons\">settings</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"dropdown dd-left dd-big dd-high\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"dropdown-item\">\n              <span className=\"left subtle ps-6\">{ text.loggedInAs(user.email) }</span>\n            </li>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ authService.logout }>\n                {/*<i className=\"material-icons subtle left\">exit_to_app</i>*/}\n                {/*<span className=\"left\">{ text.login.logout }</span>*/}\n                { text.login.logout }\n              </button>\n            </li>\n          </ul>\n          <div className=\"backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default UserSettingsDropdown;\n","import React from 'react';\nimport UserSettingsDropdown from 'components/Dropdown/UserSettingsDropdown';\nimport './_navbar.scss';\n\nfunction Navbar ({ setShowSidebar, showSidebar }) {\n\n  return (\n    <>\n      <div className={ 'navbar-fixed todo-navbar ' + ( showSidebar ? 'open' : 'closed' ) }>\n        <nav className=\"grey navbar-hide\">\n          <div className=\"nav-wrapper\">\n            <a className=\"sidenav-btn btn-subtle\" onClick={ () => setShowSidebar(!showSidebar) }>\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <ul className=\"right\">\n              <li>\n                <UserSettingsDropdown/>\n              </li>\n            </ul>\n            {/*<ul className=\"right hide-on-med-and-down\">*/ }\n            {/*  <li><a href=\"sass.html\">Sass</a></li>*/ }\n            {/*  <li><a href=\"badges.html\">Components</a></li>*/ }\n            {/*  <li><a href=\"collapsible.html\">Javascript</a></li>*/ }\n            {/*  <li><a href=\"mobile.html\">Mobile</a></li>*/ }\n            {/*</ul>*/ }\n          </div>\n        </nav>\n      </div>\n    </>\n  );\n}\n\nexport default Navbar;\n","import { urls } from 'config/urls';\nimport cogoToast from 'cogo-toast';\nimport { constants } from 'config/constants';\n\nexport const handleError = (errorText, error) => {\n  window.lastError = error;\n  cogoToast.error(errorText, constants.toast);\n\n  console.error(errorText, error);\n  if (['401', '403'].indexOf(error.toString().split(' ').pop()) >= 0) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('AuthToken');\n    window.location.hash = urls.login;\n  }\n}\n","export function time (timeStr) {\n  const m = new Date(timeStr);\n  return m.getUTCFullYear() + '/' + (m.getUTCMonth() + 1) + '/' + m.getUTCDate()\n    + ' ' + m.getUTCHours() + ':' + m.getUTCMinutes() + ':' + m.getUTCSeconds();\n}\n","import { db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { time } from 'functions/time';\nimport { constants } from 'config/constants';\n\nconst taskService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  updateTask: async (task) => {\n    console.info('Updating task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ task.projectId }/task/${ task.id }`,\n        method: 'PUT',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from PUT', response);\n        cogoToast.success(response.data.message, constants.toast);\n      });\n    } catch (e) {\n      handleError('Error on update task: ' + e.response.data.message, e);\n    }\n  },\n\n  addTask: async (task) => {\n    console.info('Adding task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ task.projectId }/task`,\n        method: 'POST',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from POST', response);\n        cogoToast.success(response.data.message, constants.toast);\n        return response.data.taskId;\n      });\n    } catch (e) {\n      handleError('Error on save task: ' + e.response.data.message, e);\n    }\n  },\n\n  deleteTask: async (task) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ task.projectId }/task/${ task.id }`,\n        method: 'DELETE',\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from DELETE', response);\n        cogoToast.success(response.data.message, constants.toast);\n      });\n    } catch (e) {\n      handleError('Error on delete task: ' + e.response.data.message, e);\n    }\n  },\n\n  getTasksForProject: (projectKey, sort, done) => {\n    const [sortField, sortDirection] = sort.split(',');\n    console.log(projectKey, sort)\n    try {\n      return taskService.db\n        .collection(`/projects/${ projectKey }/tasks`)\n        .orderBy('level', 'desc')\n        .orderBy(sortField, sortDirection)\n        .onSnapshot((tasksDoc) => {\n          const tasks = {};\n          tasksDoc.forEach((taskDoc) => {\n            const id = taskDoc.id;\n            const task = taskDoc.data();\n            const parentId = task.parentId || 'root_task';\n\n            tasks[parentId] = tasks[parentId] || [];\n            tasks[parentId].push({\n              id,\n              ...task,\n              projectId: projectKey,\n              timestamp: time(task.timestamp.seconds * 1000),\n              subtasks: tasks[id] || []\n            });\n            delete tasks[id];\n          });\n          done(tasks['root_task'] || []);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  toggleTask: (task) => {\n    try {\n      return taskService.db\n        .doc(`/projects/${ task.projectId }/tasks/${ task.id }`)\n        .update({\n          checked: task.checked,\n          expanded: task.expanded\n        });\n    } catch (e) {\n      handleError('Error on updating \"checked\" task: ', e);\n    }\n  }\n\n};\n\nexport default taskService;\n","import cogoToast from 'cogo-toast';\nimport { constants } from '../config/constants';\n\nfunction createTaskObject (task) {\n  if (!task.projectId) {\n    cogoToast.error('No project id!', constants.toast);\n    console.error(task);\n  }\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    id: task.id || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    level: task.level || 0,\n    parentId: task.parentId || null,\n    description: task.description || '',\n    projectId: task.projectId,\n    priority: task.priority || 0\n  }\n}\n\nexport default createTaskObject;\n","import React, { useState } from 'react';\nimport './_project-options.scss';\nimport { constants } from '../../../config/constants';\n\n\nfunction ProjectOptions ({ sort, setSort, children }) {\n\n  const [sortDropdown, showSortDropdown] = useState(false);\n  const [moreDropdown, showMoreDropdown] = useState(false);\n\n  return (\n    <>\n      <div className=\"buttons\">\n        <>\n          { sort && // Only if the `sort` is passed from the parent.\n          <button className=\"btn-invisible\" onClick={ () => showSortDropdown(true) }>\n            <i className=\"material-icons\">swap_vert</i>\n          </button>\n          }\n          {\n            sortDropdown &&\n            <>\n              <ul className=\"dropdown dd-left dd-0 dd-high\">\n                {\n                  constants.sort.map((d) =>\n                    <li key={ d.sort } className={ 'dropdown-item' + (d.sort === sort ? ' selected' : '') }>\n                      <button className=\"btn-invisible\" onClick={ () => setSort(d.sort) }>\n                        { d.icon && <i className=\"material-icons tiny left\">{ d.icon }</i> }\n                        { d.name }\n                      </button>\n                    </li>\n                  )\n                }\n              </ul>\n              <div className=\"backdrop\" onClick={ () => showSortDropdown(false) }/>\n            </>\n          }\n          {\n            children && // Only if the `more` is passed from the parent.\n            <button className=\"btn-invisible\" onClick={ () => showMoreDropdown(true) }>\n              <i className=\"material-icons\">more_horiz</i></button>\n          }\n          {\n            moreDropdown &&\n            <>\n              <ul className=\"dropdown dd-left dd-0 dd-high\">\n                { children }\n              </ul>\n              <div className=\"backdrop\" onClick={ () => showMoreDropdown(false) }/>\n            </>\n          }\n        </>\n      </div>\n    </>\n  );\n}\n\nexport default ProjectOptions;\n","import { auth, db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { constants } from '../config/constants';\n\nconst projectService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getProject: (projectKey, done) => {\n    try {\n      return projectService.db\n        .doc(`/projects/${ projectKey }`)\n        .onSnapshot((doc) => {\n          if (doc.exists) {\n            const project = { ...doc.data(), id: doc.id };\n\n            done(project);\n            console.info(`Changed to project \"${ project.name }\"`);\n          } else {\n            done({ /* no project */ });\n          }\n        });\n    } catch (e) {\n      handleError('Error on fetching Project: ', e);\n    }\n  },\n\n  getListOfProjects: (done) => {\n    try {\n      return projectService.db\n        .collection(`/projects`)\n        .where('_uids', 'array-contains', auth().currentUser.uid)\n        // .orderBy('timestamp', 'desc')\n        .onSnapshot((projectsDoc) => {\n\n          const projects = [];\n          projectsDoc.forEach((doc) => {\n            const projectData = doc.data();\n            projects.push({\n              id: doc.id,\n              name: projectData.name,\n              shared: projectData.shared,\n              sort: projectData.sort,\n              showCompleted: projectData.showCompleted,\n              color: projectData.color\n            });\n          });\n\n          // done([...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects]);\n          done(projects);\n\n          console.info('Lists loaded: ', projects.length);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  updateProject: async (project, showSuccess) => {\n    showSuccess = showSuccess || true;\n    console.info('Updating project ', project);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'PUT',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        showSuccess && cogoToast.success(result.data.message, constants.toast);\n        console.info('result from Edit Project PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save project name: ', e);\n    }\n  },\n\n  newProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project`,\n        method: 'POST',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        return result.data.project;\n      });\n    } catch (e) {\n      handleError('Error on create project: ', e);\n    }\n  },\n\n  deleteProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        console.info('result from project DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project: ', e);\n    }\n  },\n\n  deleteProjectTasks: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/only-tasks`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        console.info('result from project task DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project tasks: ', e);\n    }\n  },\n\n  getUserByEmail: async (userEmail) => {\n    try {\n      return await axios({\n        url: environment.url + `/user/search/`,\n        method: 'POST',\n        data: { email: userEmail },\n        headers: projectService.headers(),\n      }).then((result) => {\n        return result.data.user;\n      });\n    } catch (e) {\n      handleError('Error on searching email: ', e);\n    }\n  },\n\n  addUserToProject: async (project, username) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/join`,\n        method: 'POST',\n        headers: projectService.headers(),\n        data: { username: username }\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        console.info('result from joining Project', result);\n      });\n    } catch (e) {\n      handleError('Error on joining project: ', e);\n    }\n  }\n};\n\nexport default projectService;\n","import React, { useContext } from 'react';\nimport { text } from 'config/text';\nimport { ProjectContext } from 'TodoApp';\nimport ProjectOptions from 'components/Project/ProjectOptions/ProjectOptions';\nimport projectService from 'services/projectService';\nimport cogoToast from 'cogo-toast';\n\nfunction ProjectTitle ({ projectFunctions, toggleShowCompleted, isLoading }) {\n\n  const project = useContext(ProjectContext);\n  const psc = project.showCompleted;\n\n  async function deleteProject () {\n    if (window.confirm(text.project.delete._)) {\n      await projectService.deleteProject(project);\n    }\n  }\n\n  async function deleteTasks () {\n    if (window.confirm(text.project.delete.tasks)) {\n      await projectService.deleteProjectTasks(project);\n    }\n  }\n\n  async function share () {\n    const userEmail = prompt('User Email to join?');\n    const user = await projectService.getUserByEmail(userEmail);\n    if (!user) {\n      cogoToast.error(text.genericError);\n      console.error('error: ', user);\n      return;\n    }\n    await projectService.addUserToProject(project, user.username);\n  }\n\n  return (\n    projectFunctions.editListName\n      ? <form onSubmit={ projectFunctions.saveListName } className={ (isLoading === 'name' ? ' loader-input' : '') }>\n        <input\n          className=\"as-title m0 invisible h5\" autoFocus /*onBlur={ project.saveListName }*/\n          value={ projectFunctions.projectName }\n          disabled={ isLoading === 'name' }\n          onBlur={ () => projectFunctions.setEditListName(false) }\n          onChange={ (e) => projectFunctions.setProjectName(e.target.value) }\n        />\n      </form>\n      : <div className=\"project-title-bar\">\n        <div className=\"flex-row\">\n          <h5\n            className=\"max-content m0\" onClick={ () => projectFunctions.setEditListName(true) }\n          >{ projectFunctions.projectName }</h5>\n        </div>\n        <ProjectOptions sort={ projectFunctions.sort } setSort={ projectFunctions.setSort }>\n          <li className=\"dropdown-item\" key=\"completed\">\n            <button className=\"btn-invisible w-100 left-align\" onClick={ () => toggleShowCompleted(!psc) }>\n              <i className=\"material-icons tiny left\">{ psc ? 'check_box_outline_blank' : 'check_box' }</i>\n              { psc ? text.hideCompleted : text.showCompleted }\n            </button>\n          </li>\n          <li className=\"dropdown-item\" key=\"share\">\n            <button className=\"btn-invisible w-100 left-align\" onClick={ () => share() }>\n              <i className=\"material-icons tiny left\">people_outline</i>\n              { text.project.share }\n            </button>\n          </li>\n          <li className=\"dropdown-item\" key=\"tasks\">\n            <button className=\"btn-invisible w-100 left-align\" onClick={ () => deleteTasks() }>\n              <i className=\"material-icons tiny left\">delete_sweep</i>\n              { text.project.delete.tasks }\n            </button>\n          </li>\n          <li className=\"dropdown-item\" key=\"delete\">\n            <button className=\"btn-invisible w-100 left-align\" onClick={ () => deleteProject() }>\n              <i className=\"material-icons tiny left\">delete</i>\n              { text.project.delete._ }\n            </button>\n          </li>\n        </ProjectOptions>\n      </div>\n  );\n}\n\nexport default ProjectTitle;\n","import ProjectTitle from './ProjectTitle';\nexport default ProjectTitle;\n","import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel, loading }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n            <div className={ 'z-depth-5 modal' }>\n              <div className={ (loading ? ' loader-input cover' : '') }>\n                <div className=\"modal-content\">\n                  { children }\n                </div>\n                <div className=\"modal-footer\">\n                  {\n                    okButton &&\n                    <button\n                      onClick={ onAccept }\n                      className=\"modal-close waves-effect waves-green btn-flat btn\"\n                      dangerouslySetInnerHTML={ { __html: okButton } }\n                    />\n                  }\n                  {\n                    cancelButton &&\n                    <button\n                      onClick={ onCancel }\n                      className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                      dangerouslySetInnerHTML={ { __html: cancelButton } }\n                    />\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"backdrop\" onClick={ onCancel }/>\n          </>\n          : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\nimport React, { useContext, useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [loading, setLoading] = useState(false);\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  const project = useContext(ProjectContext);\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (e) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    await taskService.updateTask({ ...task, name: taskName, description: taskDesc });\n\n    setLoading(false);\n\n    setModalOpen(false);\n  }\n\n  async function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    await taskService.toggleTask(subtask);\n  }\n\n  async function saveSubtask (e) {\n    e.preventDefault();\n\n    await taskService.addTask(createTaskObject({\n      name: subtaskName, parentId: task.id, level: task.level + 1, projectId: project.id\n    }));\n\n    e.target[0].value = '';\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        loading={ loading }\n        onAccept={ saveTask }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.task.save + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.task.discard + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <h6 className=\"subtle mb-15 mt-5\">{ project.name }</h6>\n        <form onSubmit={ saveTask }>\n          <div>\n            <label>{ text.task.name }</label>\n            <input\n              value={ taskName } required minLength={ 3 }\n              placeholder={ text.task.addPh }\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.task.notes }</label>\n            <input\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.task.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            (subtasks || []).map((sub) =>\n              <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.id }\n                    className=\"material-cb\"\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <div/>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.task.addSubtaskPh }\n                className=\"input-field\"\n                required minLength={ 3 }\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\nimport { constants } from 'config/constants';\n\nfunction Task ({ task, level }) {\n\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedTask, setExpandedTask] = useState(task.expanded || false);\n\n  const project = useContext(ProjectContext);\n\n  const openLength = subtasks.filter((s) => !s.checked).length || 0;\n\n  const doneClass = (task.checked ? (project.showCompleted ? 'done' : 'hidden') : '');\n\n  const showExpanderClass = ((project.showCompleted ? subtasks.length : openLength) ? '' : ' v-hidden')\n\n  useEffect(() => {\n    setSubtasks(task.subtasks || []);\n  }, [task.subtasks]);\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    // after changing the state...\n    if (task.checked) {\n      // set all subtasks as checked, since the main task was marked as checked.\n      // (task.subtasks || []).forEach((_task) => _task.checked = true);\n      task.expanded = false;\n    }\n    await taskService.toggleTask(task);\n    // await taskService.updateTask(project.id, task);\n  }\n\n  /**\n   * If you want to say the toggle state, just update this function\n   */\n  async function toggleExpanded (isExpanded) {\n    // task.expanded = isExpanded;\n    // await taskService.updateTask(task);\n    setExpandedTask(isExpanded);\n  }\n\n  async function onDelete () {\n    if (window.confirm(text.task.delete)) {\n\n      await taskService.deleteTask(task);\n    }\n  }\n\n  return (\n    <li className={ doneClass + ' task' } title={ task.timestamp }>\n      <div className=\"task-content parent-hover\">\n        <button\n          className={ 'toggle-expand subtle btn-invisible material-icons tiny left ' + (expandedTask ? ' expanded' : '') + showExpanderClass }\n          onClick={ () => toggleExpanded(!expandedTask) }\n        >chevron_right\n        </button>\n\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            className=\"material-cb\"\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <div/>\n        </label>\n        <button\n          className={ 'btn-invisible ' + (task.checked ? '' : '') }\n          onClick={ () => setModalOpen(true) }\n        >\n          <span className=\"task-name\">{ task.name }</span>\n          { subtasks.length > 0 && <small\n            className=\"subtle child-hover ml-5\" title={ text.subtaskStatus }\n          >({ openLength } / { subtasks.length - openLength })</small> }\n          { task.description && <small className=\"subtle ml-5\">{ task.description }</small> }\n        </button>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-invisible ml-5 material-icons right subtle\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-invisible ml-5 material-icons right subtle',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            (task.level < constants.maxDepth) && <>\n              <ul className=\"subtasks\" aria-details={ level }>\n                {\n                  subtasks.map((t) =>\n                    <Task\n                      key={ t.id }\n                      task={ t }\n                      level={ level + 1 }\n                    />\n                  )\n                }\n              </ul>\n            </>\n          }\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { useEffect, useMemo, useState } from 'react';\nimport './_project.scss';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport projectRender from './Project-view';\nimport projectService from 'services/projectService';\n\nfunction Project ({ project, setProject }) {\n\n  const [sort, setSort] = useState(project.sort);\n  const [projectLoading, setProjectLoading] = useState(true);\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState('');\n  const [showCompleted, setShowCompleted] = useState(project.showCompleted);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [projectName, setProjectName] = useState(project.name || text.noListName);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = projectTasks.filter((task) => !task.checked);\n  const completed = projectTasks.filter((task) => !!task.checked);\n\n  // const inputElement = useRef(null);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted();\n  }, [open.length]);\n\n  const addTaskPh = useMemo(() => {\n    setShowCompleted(project.showCompleted);\n    return text.task.addTaskPh();\n  }, [project.id]);\n\n  let taskName = '';\n\n  useEffect(() => {\n    setProjectName(project.name);\n  }, [project.name]);\n\n  useEffect(() => {\n    const unsubscribeProject = projectService.getProject(project.id, setProject);\n    const unsubscribeTasks = taskService.getTasksForProject(project.id, sort, (tasks) => {\n      setProjectTasks(tasks);\n      setProjectLoading(false);\n    });\n\n    if (project.id && sort !== project.sort) {\n      projectService.updateProject({ ...project, sort }, false);\n    }\n\n    return () => {\n      unsubscribeProject && unsubscribeProject();\n      unsubscribeTasks && unsubscribeTasks();\n    };\n  }, [project.id, sort]);\n\n  async function addTask (e) {\n    e.preventDefault();\n    setIsLoading('task');\n    console.log(createTaskObject({\n      name: taskName,\n      projectId: project.id\n    }));\n    // inputElement.current && (inputElement.current.target.value = '');\n\n    const taskId = await taskService.addTask(createTaskObject({\n      name: taskName,\n      projectId: project.id\n    }));\n    e.target[0].value = '';\n    setIsLoading('');\n  }\n\n  function taskNameChange (e) {\n    taskName = e.target.value;\n  }\n\n  async function toggleShowCompleted (showCompleted) {\n    setShowCompleted(showCompleted);\n    await update({ showCompleted });\n  }\n\n  async function changeColor (hexColor) {\n    await update({ color: hexColor });\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    setIsLoading('name');\n    await update({ name: projectName });\n    setEditListName(false);\n    setIsLoading('');\n  }\n\n  async function update (projectPartial) {\n    return await projectService.updateProject({ ...project, ...projectPartial });\n  }\n\n  return projectRender({\n    open,\n    completed,\n    addTask,\n    taskNameChange,\n    showCompleted,\n    toggleShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    isLoading,\n    addTaskPh,\n    load: {\n      projectLoading,\n      setProjectLoading\n    },\n    project: {\n      projectName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setProjectName,\n      changeColor,\n      sort,\n      setSort\n    }\n  });\n}\n\nexport default Project;\n","import React from 'react';\nimport ProjectTitle from './ProjectTitle';\nimport Task from './Task/Task';\n\n\nexport default function projectRender (p) {\n\n  return (\n    <>\n      <div className={ p.load.projectLoading ? 'loader-input cover' : '' }>\n        <ProjectTitle\n          projectFunctions={ p.project } toggleShowCompleted={ p.toggleShowCompleted }\n          isLoading={ p.isLoading }\n        />\n\n        <ul>\n          { p.open.length ?\n            p.open.map((task) =>\n              <Task\n                key={ task.id }\n                task={ task }\n                level={ 0 }\n              />)\n            : (p.completed.length ? <li><h5 className=\"subtle max-content ml-50\">{ p.allCompleted }</h5></li> : '')\n          }\n          { p.showCompleted && p.completed.map((task) =>\n            <Task\n              key={ task.id }\n              task={ task }\n            />) }\n\n          <li className=\"task\">\n            <form\n              onSubmit={ p.addTask }\n              className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }\n            >\n              {/*className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }>*/ }\n              <i /* Just to give the right padding */ className=\"material-icons left v-hidden mr-11\">add</i>\n              <i className=\"material-icons left subtle\">add</i>\n              <div className=\"form-group\">\n                <div className=\"input-group mb-2\">\n                  <input\n                    onChange={ p.taskNameChange } className=\"invisible f-100\"\n                    placeholder={ p.addTaskPh } required\n                    disabled={ p.isLoading === 'task' }\n                    autoComplete=\"off\" /*ref={ inputElement }*/\n                  />\n                </div>\n              </div>\n            </form>\n          </li>\n        </ul>\n\n        {\n          // <TaskModal\n          //   trigger={ {\n          //     className: 'btn-floating btn-large new-task fixed-action-btn subtle-bg',\n          //     text: <i className=\"material-icons\">add</i>\n          //   } }\n          //   task={ {} }\n          //   modalOpen={ p.modalOpen }\n          //   setModalOpen={ p.setModalOpen }\n          // />\n        }\n      </div>\n    </>\n  );\n}\n","import { text } from 'config/text';\n\nfunction NoProject ({ setShowSidebar }) {\n  return (\n    <>\n      <div className=\"h-100 place-center\">\n        <button className=\"btn-invisible left-align flex-center-self\" onClick={ () => setShowSidebar(true) }>{ text.project.noSelected }</button>\n      </div>\n    </>\n  )\n}\n\nexport default NoProject;\n","import React, { useState } from 'react';\nimport { text } from 'config/text';\nimport projectService from 'services/projectService';\nimport cogoToast from 'cogo-toast';\n\nfunction ProjectListDropdown ({ project }) {\n\n  /**\n   * @deprecated PLEASE REMOVE\n   * @param actionName\n   * @param project\n   * @returns {Promise<void>}\n   */\n  async function onAction (actionName, project) {\n    switch (actionName) {\n      case 'delete':\n        await projectService.deleteProject(project);\n        break;\n      case 'share':\n        const userEmail = prompt('User Email to join?');\n        const user = await projectService.getUserByEmail(userEmail);\n        if (!user) {\n          cogoToast.error(text.genericError);\n          console.error('error: ', user);\n          return;\n        }\n        await projectService.addUserToProject(project, user.username);\n        break;\n      default:\n        break;\n    }\n  }\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  return (\n    <>\n      <button className=\"btn-invisible child-hover ch-hidden left\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"tiny material-icons subtle\">more_horiz</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"dropdown dd-right\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('delete', project) }>\n                <i className=\"tiny material-icons subtle\">delete</i> {text.project.delete._}\n              </button>\n            </li>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('share', project) }>\n                <i className=\"tiny material-icons subtle\">people_outline</i> {text.project.share}\n              </button>\n            </li>\n          </ul>\n          <div className=\"backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default ProjectListDropdown;\n","import ProjectListDropdown from './ProjectListDropdown';\nexport default ProjectListDropdown;\n","import { TwitterPicker } from 'react-color';\nimport React, { useState } from 'react';\n\nfunction ColorPicker ({ onChangeComplete, color }) {\n\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  function setColor(colorChoice) {\n    setShowColorPicker(false);\n    onChangeComplete(colorChoice.hex);\n  }\n\n  return (\n    <>\n      <span className=\"relative\">\n        <button className=\"btn-invisible h-100\" onClick={ () => setShowColorPicker(true) }>\n          <span className=\"btn-colorpicker\" style={ { backgroundColor: color } }/>\n        </button>\n        { showColorPicker ?\n          <div className=\"colorpicker\">\n            <div className=\"backdrop\" onClick={ () => setShowColorPicker(false) }/>\n            <TwitterPicker\n              color={ color }\n              onChangeComplete={ setColor }\n            />\n          </div>\n          : ''\n        }\n              </span>\n    </>\n  );\n}\n\nexport default ColorPicker;\n","import { constants } from 'config/constants';\n\nfunction createProjectObject (name) {\n  return{\n    name: name,\n    color: constants.defaultProjectColor,\n    sort: constants.defaultSort,\n    showCompleted: false\n  }\n}\n\nexport default createProjectObject;\n","import React, { useEffect, useState } from 'react';\nimport { text } from 'config/text';\nimport './_project-list.scss';\nimport projectService from 'services/projectService';\nimport ProjectListDropdown from './ProjectListDropdown';\nimport cogoToast from 'cogo-toast';\nimport ColorPicker from 'components/ColorPicker/ColorPicker';\nimport { urls } from 'config/urls';\nimport createProjectObject from 'functions/createProjectObject';\n\nfunction validProject (projectId, projects) {\n  const proj = projects.find((p) => p.id === projectId);\n  // If there's a project set in the URL and it's valid (it exists)\n  return proj || null; // otherwise don't set any project.\n}\n\nfunction ProjectList ({ projectId, project, changeToProject }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [projects, setProjects] = useState([]);\n\n  const [newProjectName, setNewProjectName] = useState('');\n\n  useEffect(() => {\n    const unsubscribeProjects = projectService.getListOfProjects((_projects) => {\n      const _project = validProject(project.id || projectId, _projects);\n      _project && changeToProject(_project);\n      setProjects(_projects);\n    });\n\n    return () => {\n      unsubscribeProjects && unsubscribeProjects();\n    };\n  }, [ ]);\n\n  function addNewProject (e) {\n    e.preventDefault();\n\n    setIsLoading('new');\n\n    projectService\n      .newProject(createProjectObject(newProjectName))\n      .then((snap) => {\n        setNewProjectName('');\n        setIsLoading('');\n        changeToProject(snap.id);\n      });\n  }\n\n  async function deleteProject (project) {\n    if (window.confirm(text.project.delete.long)) {\n      setIsLoading(project.id);\n      await projectService.deleteProject(project);\n      changeToProject('');\n      setIsLoading('');\n    }\n  }\n\n  function setProject (_project) {\n    console.log(project, _project);\n    if (_project.id === project.id) {\n      return; // can't change to itself... it also causes a re-render problem in the `useEffect`\n    }\n    changeToProject(_project);\n  }\n\n  async function changeColor (project, hexColor) {\n    return await projectService.updateProject({\n      ...project,\n      color: hexColor\n    });\n  }\n\n  return (\n    <>\n      <h5 className=\"center-align\">{ text.project.s }</h5>\n      <ul className=\"projects-list flex-column\">\n        <li key={ urls.inboxUrl } className={ 'ml-50 mb-5 parent-hover flex-row' + (project.id === urls.inboxUrl ? ' selected' : '') }>\n          <button className=\"btn-invisible left left-align ps-6\" onClick={ () => setProject({ id: urls.inboxUrl }) }>{ text.drawer.inbox._ }</button>\n        </li>\n        {\n          projects.map((proj) =>\n            <li\n              key={ proj.id }\n              className={ 'mb-5 parent-hover flex-row' + (project.id === proj.id ? ' selected' : '') + (isLoading === proj.id ? ' loader-input' : '') }\n            >\n              <ProjectListDropdown project={ proj }/>\n              <ColorPicker color={ proj.color } onChangeComplete={ (e) => changeColor(proj, e) } />\n              <button className=\"btn-invisible left left-align ps-6\" onClick={ () => setProject(proj) }>\n                { proj.name }\n                {\n                  proj.shared &&\n                  <i\n                    className=\"tiny material-icons subtle left mr-5\"\n                    title={ text.sharedProject }\n                  >people_outline</i>\n                }\n                {/*( { proj.openTasks } <span className=\"subtle\">/ { proj.completedTasks }</span> )*/ }\n              </button>\n            </li>\n          )\n        }\n        <li key=\"new-project\" className=\"mb-5 parent-hover flex-row\">\n          <button className=\"btn-invisible child-hover ch-hidden left\">\n            <label htmlFor=\"new-project-input\" className=\"pointer\">\n              <i className=\"tiny material-icons subtle\">add</i>\n            </label>\n          </button>\n          <form\n            onSubmit={ addNewProject }\n            className={ 'add-project flex-row' + (isLoading === 'new' ? ' loader-input' : '') }\n          >\n            <input\n              className=\"invisible left-align\"\n              onChange={ (e) => setNewProjectName(e.target.value) }\n              required minLength=\"3\"\n              disabled={ isLoading === 'new' }\n              autoComplete=\"off\"\n              value={ newProjectName }\n              id=\"new-project-input\"\n              placeholder={ text.project.add.ph }\n            />\n          </form>\n\n        </li>\n      </ul>\n    </>\n  );\n}\n\n\nexport default ProjectList;\n","import ProjectList from './ProjectList';\nexport default ProjectList;\n","import { urls } from 'config/urls';\n\nfunction reservedKey (projectKey) {\n  return [urls.inboxUrl].indexOf(projectKey) >= 0;\n}\n\nexport default reservedKey;\n","import { db } from './firebase';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { urls } from '../config/urls';\nimport { text } from '../config/text';\n\nconst drawerService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getDrawer: (drawerKey, sort, done) => {\n    const [sortField, sortDirection] = sort.split(',');\n    try {\n      const taskCollection = drawerService.db.collectionGroup('tasks');\n      let query;\n      switch (drawerKey) {\n        case urls.inboxUrl:\n          query = taskCollection\n            .where('checked', '==', false)\n            .orderBy(sortField, sortDirection);\n          break;\n        default:\n          cogoToast.error(text.invalidDrawer);\n          done([]);\n          return () => {};\n      }\n      //\n      if (query) {\n\n        return query.onSnapshot((tasksDoc) => {\n\n          const tasks = [];\n          tasksDoc.forEach((doc) => {\n            const taskData = doc.data();\n\n            tasks.push({\n              id: doc.id,\n              ...taskData\n            });\n          });\n\n          done(tasks);\n\n          console.info('Tasks in inbox: ', tasks.length);\n        });\n      }\n    } catch (e) {\n      handleError('Error on fetching drawer: ', e);\n    }\n  },\n};\n\nexport default drawerService;\n","import ProjectOptions from './ProjectOptions';\nexport default ProjectOptions;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport reservedKey from 'functions/reservedKey';\nimport drawerService from 'services/drawerService';\nimport Task from 'components/Project/Task/Task';\nimport { text } from 'config/text';\nimport ProjectOptions from 'components/Project/ProjectOptions';\nimport { constants } from 'config/constants';\n\nfunction Drawer ({ drawerUrl }) {\n\n  const [loading, setLoading] = useState(true);\n  const [drawerTasks, setDrawerTasks] = useState([]);\n  const [sort, setSort] = useState(constants.defaultSort)\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted();\n  }, []);\n\n  useEffect(() => {\n    if (reservedKey(drawerUrl)) {\n      // Special project, like an inbox...\n      const unsubscribeProject = drawerService.getDrawer(drawerUrl, sort, (tasks) => {\n        setDrawerTasks(tasks);\n        setLoading(false);\n      });\n\n      return () => {\n        unsubscribeProject && unsubscribeProject();\n      };\n\n    }\n  }, [drawerUrl, sort]);\n\n  return (\n    <>\n      <div className={ loading ? 'loader-input cover' : '' }>\n        <div className=\"project-title-bar\">\n          <h5 className=\"max-content m0\">{ text.drawer.inbox._ }</h5>\n          <ProjectOptions sort={ sort } setSort={ setSort }/>\n        </div>\n        <ul>\n          {\n            drawerTasks.length\n              ? drawerTasks.map((t) => <Task key={ t.id } task={ t } level={ 0 }/>)\n              : <li><h5 className=\"subtle max-content ml-50\">{ allCompleted }</h5></li>\n          }\n        </ul>\n      </div>\n\n    </>\n  );\n}\n\nexport default Drawer;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from 'App';\n\nimport Navbar from 'components/Navbar/Navbar';\nimport Project from 'components/Project/Project';\nimport NoProject from 'components/NoProject/NoProject';\nimport ProjectList from 'components/Project/ProjectList';\nimport Drawer from './components/Drawer/Drawer';\nimport reservedKey from './functions/reservedKey';\n\nexport const ProjectContext = React.createContext({});\n\nfunction TodoApp () {\n  const history = useHistory();\n  const { projectKeyParam: projectId } = useParams();\n\n  const [project, setProject] = useState({});\n  const [showSidebar, setShowSidebar] = useState(!window.isSmallScreen);\n\n  function changeToProject (_project) {\n    if (_project.id !== project.id) {\n      setProject(_project);\n      history.push(urls.project(_project.id || ''));\n    }\n  }\n\n  if (!React.useContext(LoggedInUserContext)) {\n    history.push(urls.login);\n    return null;\n  }\n\n  return (\n    <>\n      <Navbar setShowSidebar={ setShowSidebar } showSidebar={ showSidebar }/>\n      <div id=\"todo-app\" className={ (showSidebar ? '' : ' hidden-bar') }>\n        <div className={ 'projects-list-box' }>\n          <div className={ 'projects-list-box-inner' }>\n            <ProjectList\n              projectId={ projectId }\n              project={ project }\n              changeToProject={ changeToProject }\n            />\n          </div>\n        </div>\n        <div className=\"tasks-list-box flex-column\">\n          <ProjectContext.Provider value={ project }>\n            {\n              project.id\n                ? (\n                  reservedKey(project.id)\n                    ? <Drawer drawerUrl={ project.id } />\n                    : <Project project={ project } setProject={ changeToProject }/>\n                )\n                : <NoProject setShowSidebar={ setShowSidebar }/>\n            }\n          </ProjectContext.Provider>\n        </div>\n        <i/> { /* Thanks to this, we have three elements. Space-between works like a charm */ }\n      </div>\n    </>\n  );\n}\n\nexport default TodoApp;\n","import 'assets/loader.svg';\nimport './_app-loader.scss';\n\nimport React from 'react';\n\nfunction Loader () {\n\n  return (\n    <span className=\"app-loader\">\n      <span className=\"loader-img\"/>\n    </span>\n  )\n}\n\nexport default Loader;\n","function Footer () {\n  return (\n    <>\n      <footer className=\"page-footer grey\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Footer Content</h5>\n              <p\n                className=\"grey-text text-lighten-4\"\n              >You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Links</h5>\n              <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2014 Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { LoggedInUserContext } from 'App';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { Link } from 'react-router-dom';\nimport { authService } from 'services/authService';\n\nfunction Header ({ loaded }) {\n  const user = useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <nav className=\"grey\">\n        <div className=\"nav-wrapper container\">\n          <Link to={ urls.app } className=\"brand-logo\">Todo List</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            {\n              user\n                ? loaded && <>\n                <li><Link to={ urls.app }>{ text.gotoApp }</Link></li>\n                <li><a\n                  href=\"#logout\" onClick={ authService.logout }\n                  className=\"btn-invisible\"\n                >{ text.login.logout }</a>\n                </li>\n              </>\n                : loaded && <>\n                <li><Link to={ urls.login }>{ text.login.login }</Link></li>\n                <li><Link to={ urls.signup }>{ text.login.signup }</Link></li>\n              </>\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\n\nfunction HomePage ({ loaded }) {\n\n\n  return (\n    <>\n      <Header loaded={ loaded }/>\n      <div\n        style={ {\n          height: '300px',\n          display: 'block'\n        } }\n      >\n        <h4 className=\"flex-center-self center-align\">Welcome to the best todo-app</h4>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport Signup from './login/Signup';\nimport Login from './login/Login';\nimport TodoApp from './TodoApp';\nimport { authService } from './services/authService';\nimport Loader from './components/Loader/Loader';\nimport HomePage from './components/HomePage/HomePage';\nimport { urls } from 'config/urls';\n\nexport const LoggedInUserContext = React.createContext({});\n\nfunction App () {\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(false);\n\n  authService.authState((user) => {\n    console.info('User logged in: ', !!user);\n    setUser(user);\n    setLoaded(true);\n  });\n\n  return (\n    <>\n      <LoggedInUserContext.Provider value={ user }>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */ }\n          <Switch>\n            <Route path={ urls.home } exact={ true }>\n              <HomePage loaded={ loaded }/>\n            </Route>\n            { loaded\n              ?\n              <>\n                <Route path={ urls.signup } component={ Signup }/>\n                <Route path={ urls.login } component={ Login }/>\n                <Route path={ `${ urls.project(':projectKeyParam?') }` } component={ TodoApp }/>\n              </>\n              : <Loader/>\n            }\n          </Switch>\n        </Router>\n      </LoggedInUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\nimport 'assets/loader.svg';\nimport 'functions/screenSize'; // must be imported here.\nimport { guessClientOS } from './functions/clientOS';\n\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\nconst root = document.getElementById('root');\n\n// if (!localStorage.getItem(osName.storage)) {\n//   localStorage.setItem(osName.storage, JSON.stringify(guessClientOS()));\n// }\nconst os = guessClientOS();\nroot.classList.add(os.isMobile ? 'mobile' : 'desktop');\n\n// ======================================== //\n\nReactDOM.render(<App />, root);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}