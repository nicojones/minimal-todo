{"version":3,"sources":["services/environment.js","services/firebase.js","services/authService.js","functions/sha1.js","text.js","urls.js","components/Loader/Loader.js","login/Signup.js","login/Login.js","services/handleError.js","services/taskService.js","services/projectService.js","functions/createTaskObject.js","components/Modal/Modal.js","components/Modal/TaskModal.js","components/Project/Project/ProjectTitle/ProjectTitle.js","components/Project/Project/Task/Subtask.js","components/Project/Project/Task/Task.js","components/Project/Project/Project.js","components/Project/Project/Project-view.js","components/Project/NoProject/NoProject.js","components/Project/ProjectList/ProjectListDropdown/ProjectListDropdown.js","components/Project/ProjectList/ProjectList.js","TodoApp.js","components/HomePage/Footer.js","components/HomePage/Header.js","components/HomePage/HomePage.js","App.js","index.js"],"names":["environment","url","firebase","initializeApp","apiKey","databaseURL","projectId","analytics","debounceAuth","auth","db","firestore","sha1","str","a","buffer","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","x","toString","padStart","join","authService","authState","done","onAuthStateChanged","user","clearTimeout","setTimeout","signup","signupData","password","then","sha1Password","axios","method","data","response","login","email","loginData","userCredential","signInWithEmailAndPassword","localStorage","setItem","JSON","stringify","uid","currentUser","getIdToken","authToken","logout","e","preventDefault","signOut","console","info","validateSignup","log","username","name","length","confirm","text","gotoApp","loading","noListName","Date","toISOString","slice","addPh","addSubtaskPh","addSubtaskBtn","subtasks","sharedProject","subtaskStatus","deleteTask","allTasksCompleted","incomplete","Math","floor","random","completed","completedNo","showCompleted","hideCompleted","saveTask","discardTask","notes","notesPh","projects","addProject","addProjectPh","deleteProject","loggedInAs","noAccount","yesAccount","urls","home","app","project","id","Loader","className","Signup","history","useHistory","useState","getItem","isLoggedIn","setIsLoggedIn","setSignup","setLoading","signupError","alert","responseData","catch","React","useContext","LoggedInUserContext","push","to","onSubmit","value","onChange","target","placeholder","type","required","autoFocus","Login","setLogin","handleError","errorText","error","indexOf","split","pop","removeItem","window","location","replace","taskService","headers","authorization","updateTask","projectKey","task","result","addTask","getTasksForProject","collection","orderBy","onSnapshot","tasksDoc","tasks","forEach","toggleTask","doc","update","checked","projectService","getProject","getListOfProjects","where","projectsDoc","projectData","Object","values","completedTasks","filter","t","openTasks","shared","saveListName","newProject","message","getUserByEmail","userEmail","addUserToProject","createTaskObject","timestamp","description","Modal","children","modalOpen","okButton","cancelButton","onAccept","onCancel","onClick","dangerouslySetInnerHTML","__html","TaskModal","trigger","setModalOpen","subtaskName","setSubtaskName","setSubtasks","newSubtasks","setNewSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","ProjectContext","keepOpen","reference","submit","useEffect","minLength","sub","title","subtask","disabled","ProjectTitle","setShowCompleted","isLoading","editListName","projectName","setProjectName","setEditListName","Subtask","extraClass","saveSubtasks","addSubtaskInput","setAddSubtaskInput","Task","expandedTask","setExpandedTask","completedSubtasks","s","_task","expanded","isExpanded","toggleExpanded","toggleCompleted","onDelete","Project","projectTasks","setIsLoading","open","allCompleted","useMemo","taskNameChange","autoComplete","projectRender","NoProject","ProjectListDropdown","onAction","dropdownShown","setDropdownShown","ProjectList","setProjectKey","setProjects","newProjectName","setNewProjectName","actionName","prompt","unsubscribeProjects","_projects","p","validProjectId","proj","htmlFor","snap","createContext","TodoApp","projectKeyParam","useParams","setProject","setProjectTasks","String","unsubscribeProject","unsubscribeTasks","Provider","Footer","href","Header","loaded","HomePage","style","height","display","App","setLoaded","setUser","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.590e64bb.chunk.js","sourcesContent":["const environment = {\n  // url: 'https://us-central1-todo-list-react-33431.cloudfunctions.net/api',\n  url: 'http://localhost:5000/todo-list-react-33431/us-central1/api',\n};\n\nexport default environment;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ\",\n  databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n  projectId: \"todo-list-react-33431\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const analytics = firebase.analytics;\nexport const auth = firebase.auth;\nexport const db = firebase.firestore;\n","import axios from 'axios';\nimport environment from './environment';\nimport { auth } from './firebase';\nimport { sha1 } from 'functions/sha1';\n\nlet debounceAuth;\n\nexport const authService = {\n\n  authState: (done) => {\n    auth().onAuthStateChanged((user) => {\n      clearTimeout(debounceAuth);\n      debounceAuth = setTimeout(() => {\n        done(user);\n      }, 200);\n    });\n  },\n\n  signup: (signupData) => {\n    return sha1(signupData.password)\n      .then((sha1Password) => {\n        return axios({\n          url: `${ environment.url }/signup`,\n          method: 'POST',\n          data: { ...signupData, password: sha1Password }\n        });\n      })\n      .then((response) => {\n        return authService.login({\n          email: signupData.email,\n          password: signupData.password\n        });\n      });\n  },\n\n  login: (loginData) => {\n    let userCredential;\n    return sha1(loginData.password)\n      .then((sha1Password) => {\n        return auth().signInWithEmailAndPassword(loginData.email, sha1Password);\n      })\n      .then((response) => {\n        localStorage.setItem('uid', JSON.stringify(response.user.uid));\n        userCredential = response;\n        return auth().currentUser.getIdToken();\n      })\n      .then((authToken) => {\n        localStorage.setItem('AuthToken', authToken);\n        return userCredential;\n      });\n  },\n\n  logout: (e) => {\n    e.preventDefault();\n\n    auth().signOut().then(() => {\n      console.info('You\\'ve been signed out of the app');\n    });\n  },\n\n  validateSignup: (signupData) => {\n    console.log('data?', signupData)\n    if (!signupData.username) {\n      return 'Must enter a valid username';\n    }\n    if (!signupData.name || signupData.name.length <= 5) {\n      return 'Must enter a valid name';\n    }\n    if (!signupData.email || signupData.email.length <= 5) {\n      return 'Invalid email';\n    }\n    if (!signupData.password || !signupData.confirm) {\n      return 'Password can\\'t be empty';\n    }\n    if (signupData.password !== signupData.confirm) {\n      return 'Passwords don\\'t match';\n    }\n  }\n};\n","export async function sha1( str ) {\n  const buffer = new TextEncoder('utf-8').encode( str );\n  const digest = await crypto.subtle.digest('SHA-1', buffer);\n\n  // Convert digest to hex string\n  return Array.from(new Uint8Array(digest)).map( x => x.toString(16).padStart(2,'0') ).join('');\n}\n","const dateToday = new Date().toISOString().slice(0, 10);\n\nexport const text = {\n  gotoApp: 'Open app',\n  loading: 'Loading app...',\n  noListName: 'New Project ' + dateToday,\n  addPh: 'Quick-add a task...',\n  addSubtaskPh: 'Add subtasks to this task',\n  addSubtaskBtn: 'Add a subtask',\n  subtasks: 'Subtasks',\n  sharedProject: 'This project is shared',\n  subtaskStatus: '( Completed / Pending )',\n  deleteTask: 'Delete task and its subtasks? Can\\'t be undone',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappuccino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎',\n      'Make a Todolist: Done ✅',\n      'I am Finnish 🇫🇮 with all tasks.'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  saveTask: 'Save',\n  discardTask: 'Cancel changes',\n\n  notes: 'Notes',\n  notesPh: 'An optional description always helps',\n\n  projects: 'Projects',\n  addProject: 'Add a new project',\n  addProjectPh: 'Enter a name for a new project',\n  deleteProject: 'Delete this project and all the tasks? (cannot be undone)',\n\n  loggedInAs: (name) => `Logged in as ${ name }.`,\n\n  login: {\n    login: 'Log in',\n    signup: 'Sign up',\n    logout: 'Log out',\n    noAccount: 'Don\\'t have an account?',\n    yesAccount: 'Already a user?'\n  }\n\n};\n","export const urls = {\n  home: '/',\n  app: '/app',\n  project: (id) => `${ urls.app }/${ id }`,\n  login: '/login',\n  signup: '/signup'\n}\n","import 'assets/loader.svg';\nimport './_app-loader.scss';\n\nimport React from 'react';\n\nfunction Loader () {\n\n  return (\n    <span className=\"app-loader\">\n      <span className=\"loader-img\"/>\n    </span>\n  )\n}\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { text } from 'text';\nimport { urls } from 'urls';\nimport { LoggedInUserContext } from '../App';\nimport Loader from 'components/Loader/Loader';\n\nfunction Signup () {\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n  const [signup, setSignup] = useState({});\n  const [loading, setLoading] = useState(false);\n\n\n  async function onSubmit (e) {\n    e.preventDefault();\n\n    const signupError = authService.validateSignup(signup);\n    if (!signupError) {\n      setLoading(true);\n      authService.signup(signup).then((responseData) => {\n        setLoading(false);\n        if (responseData.user) {\n          setSignup({});\n          setIsLoggedIn(true);\n        } else {\n          alert('error! please see console');\n          console.log(responseData);\n        }\n      }).catch(() => {\n        setLoading(false);\n      });\n    } else {\n      alert(signupError);\n    }\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <>\n            { loading && <Loader/> }\n            <div className=\"row\">\n              <form onSubmit={ onSubmit } className=\"flex-center-self center-block\">\n                <input\n                  value={ signup.email || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" required autoFocus\n                />\n                <input\n                  value={ signup.name || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  name: e.target.value\n                }) } placeholder=\"name\" required\n                />\n                <input\n                  value={ signup.username || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  username: e.target.value\n                }) } placeholder=\"username\" required\n                />\n                <input\n                  value={ signup.password || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" required\n                />\n                <input\n                  value={ signup.confirm || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  confirm: e.target.value\n                }) } placeholder=\"confirm\" type=\"password\" required\n                />\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.signup }</button>\n                  <Link to={ urls.login } className=\"btn-flat\">{ text.login.yesAccount } { text.login.login }</Link>\n                </div>\n              </form>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { urls } from 'urls';\nimport { text } from 'text';\nimport { LoggedInUserContext } from 'App';\n\nfunction Login () {\n\n  const history = useHistory();\n  const [login, setLogin] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    authService.login(login).then((responseData) => {\n      if (responseData.user) {\n        setLogin({});\n        setIsLoggedIn(true);\n      } else {\n        alert('error! please see console');\n        console.log(responseData);\n      }\n    });\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to={ urls.app }/>\n          :\n          <>\n            <div className=\"row\">\n              <form onSubmit={ onSubmit } className=\"flex-center-self center-block\">\n                <input\n                  value={ login.email || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" autoFocus\n                />\n                <input\n                  value={ login.password || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\"\n                />\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.login }</button>\n                  <Link to={ urls.signup } className=\"btn-flat right\">{ text.login.noAccount } { text.login.signup }</Link>\n                </div>\n              </form>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Login;\n","import { urls } from '../urls';\n\nexport const handleError = (errorText, error) => {\n  console.error(errorText, error);\n  if (['401', '403'].indexOf(error.toString().split(' ').pop()) >= 0) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('AuthToken');\n    window.location.replace(urls.login);\n  }\n}\n","import { db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\n\nconst taskService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  updateTask: async (projectKey, task) => {\n    console.info('Updating task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'PUT',\n        data: task,\n        headers: taskService.headers()\n      }).then((result) => {\n        console.info('result from PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  addTask: async (projectKey, task) => {\n    console.info('Adding task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task`,\n        method: 'POST',\n        data: task,\n        headers: taskService.headers()\n      }).then((result) => {\n        console.info('result from POST', result);\n      });\n      // return await db.ref(`${ taskService.path }/tasks`).push(task);\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  deleteTask: async (projectKey, task) => {\n    console.info('Deleting task ', task.name, task.id);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'DELETE',\n        headers: taskService.headers()\n      }).then((result) => {\n        console.info('result from DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete task: ', e);\n    }\n  },\n\n  getTasksForProject: (projectKey, done) => {\n    try {\n      return taskService.db\n        .collection(`/projects/${ projectKey }/tasks`)\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((tasksDoc) => {\n        const tasks = [];\n        tasksDoc.forEach((task) => {\n          tasks.push({\n            id: task.id,\n            ...task.data()\n          });\n        });\n        done(tasks);\n      });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  toggleTask: (projectId, task) => {\n    try {\n      return taskService.db\n        .doc(`/projects/${ projectId }/tasks/${ task.id }`)\n        .update({ checked: task.checked, subtasks: task.subtasks })\n    } catch (e) {\n      handleError('Error on updating \"checked\" task: ', e);\n    }\n  }\n\n};\n\nexport default taskService;\n","import { db, auth } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\n\nconst projectService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getProject: (projectKey, done) => {\n    try {\n      return projectService.db\n        .doc(`/projects/${ projectKey }`)\n        .onSnapshot((doc) => {\n          const project = doc.data();\n          project.id = doc.id;\n\n          console.info(`Changed to project \"${ project.name }\"`);\n\n          done(project);\n        });\n    } catch (e) {\n      handleError('Error on fetching Project: ', e);\n    }\n  },\n\n  getListOfProjects: (done) => {\n    try {\n      return projectService.db\n        .collection(`/projects`)\n        .where('uids', 'array-contains', auth().currentUser.uid)\n        // .orderBy('timestamp', 'desc')\n        .onSnapshot((projectsDoc) => {\n\n          const projects = [];\n          projectsDoc.forEach((doc) => {\n            const projectData = doc.data();\n            const tasks = Object.values(projectData.tasks || '' /* empty object actually... */);\n            const completedTasks = tasks.filter((t) => t.checked).length;\n            const openTasks = tasks.length - completedTasks;\n            projects.push({\n              id: doc.id,\n              name: projectData.name,\n              shared: projectData.shared,\n              openTasks,\n              completedTasks\n            });\n          });\n\n          done(projects);\n\n          console.info('Lists loaded: ', projects.length);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  saveListName: async (project) => {\n    console.info('Updating project ', project);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'PUT',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        console.info('result from Edit Project PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save project name: ', e);\n    }\n  },\n\n  newProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project`,\n        method: 'POST',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        console.info(result.data.message);\n        return result.data.project;\n      });\n    } catch (e) {\n      handleError('Error on create project: ', e);\n    }\n  },\n\n  deleteProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        console.info('result from project DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project: ', e);\n    }\n  },\n\n  getUserByEmail: async (userEmail) => {\n    try {\n      return await axios({\n        url: environment.url + `/user/search/`,\n        method: 'POST',\n        data: { email: userEmail },\n        headers: projectService.headers(),\n      }).then((result) => {\n        return result.data.user;\n      });\n    } catch (e) {\n      handleError('Error on searching email: ', e);\n    }\n  },\n\n  addUserToProject: async (project, username) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/join`,\n        method: 'POST',\n        headers: projectService.headers(),\n        data: { username: username }\n      }).then((result) => {\n        console.info('result from joining Project', result);\n      });\n    } catch (e) {\n      handleError('Error on joining project: ', e);\n    }\n  }\n};\n\nexport default projectService;\n","function createTaskObject (task) {\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    id: task.id || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    subtasks: task.subtasks || [], // will not be saved in the DB. here just for reference...\n    description: task.description || ''\n  }\n}\n\nexport default createTaskObject;\n","import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n          <div className={ 'z-depth-5 modal open' }>\n            <div className=\"modal-content\">\n              { children }\n            </div>\n            <div className=\"modal-footer\">\n              {\n                okButton &&\n                <button\n                  onClick={ onAccept }\n                  className=\"modal-close waves-effect waves-green btn-flat btn\"\n                  dangerouslySetInnerHTML={ { __html: okButton } }\n                />\n              }\n              {\n                cancelButton &&\n                <button\n                  onClick={ onCancel }\n                  className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                  dangerouslySetInnerHTML={ { __html: cancelButton } }\n                />\n              }\n            </div>\n          </div>\n          <div className=\"backdrop\" onClick={ onCancel }/>\n        </>\n        : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\nimport React, { useContext, useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [newSubtasks, setNewSubtasks] = useState([]);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  const project = useContext(ProjectContext);\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (task, keepOpen) {\n    if (task.id) {\n      await taskService.updateTask(project.id, task);\n    } else {\n      taskService.addTask(project.id, createTaskObject(task)).then((reference) => {\n        task.id = reference.id;\n      });\n    }\n    setModalOpen(!!keepOpen);\n  }\n\n  async function submit (e) {\n    e.preventDefault();\n\n    task.name = taskName;\n    task.description = taskDesc;\n    task.subtasks = [...subtasks, ...newSubtasks];\n\n    await saveTask(task, false);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    setSubtasks([...task?.subtasks]);\n  }\n\n  function saveSubtask (e) {\n    e.preventDefault();\n\n    setNewSubtasks([\n      ...newSubtasks,\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ]);\n    setSubtaskName('');\n\n    e.target[0].value = '';\n  }\n\n  async function onAccept (e) {\n    await submit(e);\n    setModalOpen(false);\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        onAccept={ onAccept }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.saveTask + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.discardTask + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <h6 className=\"subtle mb-15 mt-5\">{ project.name }</h6>\n        <form onSubmit={ submit }>\n          <div>\n            <label>Task Name</label>\n            <input\n              value={ taskName } required minLength={ 3 }\n              placeholder=\"Enter a name for the task\"\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.notes }</label>\n            <textarea\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            (subtasks || []).map((sub) =>\n              <li key={ sub.id } title={ sub.timestamp.toISOString() } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.id }\n                    className=\"material-cb\"\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <div/>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          {\n            newSubtasks.map((sub) =>\n              <li key={ sub.id } className=\"block\">\n                <label className=\"left\">\n                  <input type=\"checkbox\" className=\"material-cb\" disabled/>\n                  <div/>\n                </label>\n                <span className=\"left subtle\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                className=\"input-field\"\n                required minLength={3}\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import React from 'react';\nimport { text } from 'text';\n\nfunction ProjectTitle ({ project, showCompleted, setShowCompleted, isLoading }) {\n\n  return (\n    project.editListName\n      ? <form onSubmit={ project.saveListName } className={ ( isLoading === 'name' ? ' loader-input' : '' ) }>\n        <input\n          className=\"as-title m0 invisible h4\" autoFocus /*onBlur={ project.saveListName }*/\n          value={ project.projectName }\n          onChange={ (e) => project.setProjectName(e.target.value) }\n        />\n      </form>\n      : <div className=\"flex-row\">\n        <h5 className=\"max-content m0\" onClick={ () => project.setEditListName(true) }>{ project.projectName }</h5>\n        {\n          showCompleted\n            ? <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(false) }\n              title={ text.hideCompleted }\n            >check_box</button>\n            : <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(true) }\n              title={ text.showCompleted }\n            >check_box_outline_blank</button>\n        }\n      </div>\n  );\n}\n\nexport default ProjectTitle;\n","import { text } from 'text';\nimport React, { useState } from 'react';\n\nfunction Subtask ({ extraClass, task, saveSubtasks }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [addSubtaskInput, setAddSubtaskInput] = useState(false);\n\n  function saveSubtask (e) {\n    e.preventDefault();\n    e.target[0].value = '';\n    setAddSubtaskInput(false);\n\n    task.subtasks = [\n      ...(task.subtasks || []),\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ];\n    saveSubtasks(task);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    saveSubtasks(task);\n  }\n\n  return (\n    <ul className={ 'list-unstyled flex-column ' + extraClass }>\n      {\n        (task.subtasks || []).map((sub) =>\n          <li key={ sub.id } title={ sub.timestamp.toISOString() } className=\"block\">\n            <label className=\"left\">\n              <input\n                type=\"checkbox\" checked={ sub.checked }\n                id={ sub.id } className=\"material-cb\"\n                onChange={ () => toggleSubtask(sub) }\n              />\n              <div/>\n            </label>\n            <span className=\"left\">{ sub.name }</span>\n          </li>\n        )\n      }\n      <li key=\"new-subtask\">\n        {\n          addSubtaskInput\n            ?\n            <form onSubmit={ saveSubtask }>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                autoFocus={ true }\n                className=\"input-field invisible\"\n              />\n            </form>\n            :\n            <button className=\"btn-flat subtle\" onClick={ () => setAddSubtaskInput(true) }>\n              <i className=\"material-icons left\">add</i>\n              { text.addSubtaskBtn }\n            </button>\n        }\n      </li>\n    </ul>\n  );\n}\n\nexport default Subtask;\n","import React, { useContext, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport Subtask from './Subtask';\nimport { text } from 'text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\nfunction Task ({ task }) {\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedTask, setExpandedTask] = useState(false);\n\n  const project = useContext(ProjectContext);\n\n  const completedSubtasks = subtasks.filter((s) => !!s.checked).length;\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    // after changing the state...\n    if (task.checked) {\n      // set all subtasks as checked, since the main task was marked as checked.\n      (task.subtasks || []).forEach((_task) => _task.checked = true);\n      task.expanded = false;\n    }\n    await taskService.toggleTask(project.id, task).then((a) => {\n      console.log('anotehuntoaheutnh',a);\n    })\n    // await taskService.updateTask(project.id, task);\n  }\n\n  /**\n   * If you want to say the toggle state, just update this function\n   */\n  async function toggleExpanded (isExpanded) {\n    //task.expanded = isExpanded;\n    // await taskService.updateTask(task);\n    setExpandedTask(isExpanded);\n  }\n\n  async function saveSubtasks (task) {\n    setSubtasks(task.subtasks);\n    await taskService.updateTask(project.id, task);\n  }\n\n  async function onDelete () {\n    if (window.confirm(text.deleteTask)) {\n\n      await taskService.deleteTask(project.id, task)\n    }\n  }\n\n  return (\n    <li className={ (task.checked ? 'done' : '') + ' parent-hover task' } title={ task.timestamp }>\n      <div className=\"task-content\">\n        <button\n          className={ 'toggle-expand subtle btn-invisible material-icons tiny left ' + (expandedTask && ' expanded') }\n          onClick={ () => toggleExpanded(!expandedTask) }\n        >chevron_right\n        </button>\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            className=\"material-cb\"\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <div/>\n        </label>\n        <button\n          className={ 'btn-invisible task-name ' + (task.checked ? '' : '') }\n          onClick={ () => setModalOpen(true) }>\n          { task.name }\n          <span className=\"subtle child-hover ml-5\" title={ text.subtaskStatus }\n          >({ completedSubtasks } / { subtasks.length - completedSubtasks })</span>\n        </button>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-subtle ml-5 material-icons right\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-subtle ml-5 material-icons right',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            task.description &&\n            <div className=\"ml-50\">\n              <p><span className=\"subtle\">{ text.notes }:</span> { task.description }</p>\n            </div>\n          }\n          <Subtask extraClass={ 'ml-50' } saveSubtasks={ saveSubtasks } subtasks={ subtasks } task={ task }/>\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { useEffect, useMemo, useState } from 'react';\nimport './_project.scss';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'text';\nimport projectRender from './Project-view';\nimport projectService from '../../../services/projectService';\n\nfunction Project ({ project, projectTasks }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [showCompleted, setShowCompleted] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [projectName, setProjectName] = useState(project.name || text.noListName);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = projectTasks.filter((task) => !task.checked);\n  const completed = projectTasks.filter((task) => !!task.checked);\n\n  // const inputElement = useRef(null);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted()\n  }, [ open.length ]);\n\n  let taskName = '';\n\n  useEffect(() => {\n    setProjectName(project.name);\n  }, [project.name])\n\n  async function submit (e) {\n    e.preventDefault();\n    setIsLoading('task');\n    // inputElement.current && (inputElement.current.target.value = '');\n\n    await taskService.addTask(project.id, createTaskObject({ name: taskName }));\n    e.target[0].value = '';\n    setIsLoading('');\n  }\n\n  function taskNameChange (e) {\n    taskName = e.target.value;\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    setIsLoading('name');\n    await projectService.saveListName({ ...project, name: projectName });\n    setEditListName(false);\n    setIsLoading('');\n  }\n\n  return projectRender({\n    open,\n    completed,\n    submit,\n    taskNameChange,\n    showCompleted,\n    setShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    isLoading,\n    project: {\n      projectName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setProjectName\n    }\n  });\n}\n\nexport default Project;\n","import React from 'react';\nimport { text } from 'text';\nimport TaskModal from 'components/Modal/TaskModal';\nimport ProjectTitle from './ProjectTitle/ProjectTitle';\nimport Task from './Task/Task';\n\n\nexport default function projectRender ({\n  submit, taskNameChange, completed, open, showCompleted, setShowCompleted, modalOpen, setModalOpen, allCompleted, project, isLoading\n}) {\n\n  return (\n    <>\n      <ProjectTitle\n        project={ project } showCompleted={ showCompleted } setShowCompleted={ setShowCompleted }\n        isLoading={ isLoading }\n      />\n\n      <ul className=\"list-unstyled\">\n        { open.length ?\n          open.map((task) =>\n            <Task\n              key={ task.id }\n              task={ task }\n            />)\n          : (completed.length ? <li><h5 className=\"subtle max-content\">{ allCompleted }</h5></li> : '')\n        }\n        { showCompleted && completed.map((task) =>\n          <Task\n            key={ task.id }\n            task={ task }\n          />) }\n\n        <li className=\"task\">\n          <form onSubmit={ submit }\n            className={ 'flex-row task-content form-inline' + (isLoading === 'task' ? ' loader-input' : '') }>\n            <i /* Just to give the right padding */ className=\"material-icons left v-hidden mr-11\">add</i>\n            <i className=\"material-icons left subtle\">add</i>\n            <div className=\"form-group\">\n              <div className=\"input-group mb-2\">\n                <input\n                  onChange={ taskNameChange } className=\"invisible f-100\"\n                  placeholder={ text.addPh } required\n                  autoComplete=\"off\" /*ref={ inputElement }*/\n                />\n              </div>\n            </div>\n          </form>\n        </li>\n      </ul>\n\n      <TaskModal\n        trigger={ {\n          className: 'btn-floating btn-large fixed-action-btn subtle-bg',\n          text: <i className=\"material-icons\">add</i>\n        } }\n        task={ {} }\n        modalOpen={ modalOpen }\n        setModalOpen={ setModalOpen }\n      />\n    </>\n  );\n}\n","function NoProject () {\n  return (\n    <>\n      <h6>Select a project or create a new one.</h6>\n    </>\n  )\n}\n\nexport default NoProject;\n","import React, { useState } from 'react';\n\nfunction ProjectListDropdown ({ project, onAction }) {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  return (\n    <>\n      <button className=\"btn-invisible child-hover ch-hidden left\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"tiny material-icons subtle\">more_horiz</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"pl-dropdown\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"pl-dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('delete', project) }>\n                <i className=\"tiny material-icons subtle\">delete</i> Delete Project\n              </button>\n            </li>\n            <li className=\"pl-dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('share', project) }>\n                <i className=\"tiny material-icons subtle\">people_outline</i> Share Project\n              </button>\n            </li>\n          </ul>\n          <div className=\"pl-backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default ProjectListDropdown;\n","import React, { useEffect, useState } from 'react';\nimport { text } from 'text';\nimport './_project-list.scss';\nimport projectService from 'services/projectService';\nimport ProjectListDropdown from './ProjectListDropdown/ProjectListDropdown';\nimport { LoggedInUserContext } from '../../../App';\nimport { authService } from '../../../services/authService';\n\nfunction validProjectId (projectId, projects) {\n  // If there's a project set in the URL and it's valid (it exists)\n  if (projectId && projects.filter((p) => p.id === projectId).length) {\n    return projectId;\n  }\n  return ''; // otherwise don't set any project.\n}\n\nfunction ProjectList ({ projectKey, setProjectKey }) {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [projects, setProjects] = useState([]);\n\n  const [newProjectName, setNewProjectName] = useState('');\n\n  const user = React.useContext(LoggedInUserContext);\n\n  useEffect(() => {\n    const unsubscribeProjects = projectService.getListOfProjects((_projects) => {\n      setProjectKey(validProjectId(projectKey, _projects)); // set the first project as selected...\n      setProjects(_projects);\n    });\n\n    return () => {\n      unsubscribeProjects && unsubscribeProjects();\n    };\n  }, [projectKey]);\n\n  function addNewProject (e) {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    projectService\n      .newProject({ name: newProjectName })\n      .then((snap) => {\n        setNewProjectName('');\n        setIsLoading(false);\n        setProjectKey(snap.id);\n      });\n  }\n\n  async function deleteProject (project) {\n    if (window.confirm(text.deleteProject)) {\n      // setIsLoading(true);\n      await projectService.deleteProject(project);\n      setProjectKey('');\n      // setIsLoading(false);\n    }\n  }\n\n  function setProject (project) {\n    if (project.id === projectKey) {\n      return; // can't change to itself... it also causes a re-render problem in the `useEffect`\n    }\n    setProjectKey(project.id);\n  }\n\n  async function onAction (actionName, project) {\n    switch (actionName) {\n      case 'delete':\n        await deleteProject(project);\n        break;\n      case 'share':\n        const userEmail = prompt('User Email to join?');\n        await projectService.getUserByEmail(userEmail).then(async (user) => {\n          await projectService.addUserToProject(project, user.username);\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <h5 className=\"center-align\">{ text.projects }</h5>\n      <ul className=\"projects-list flex-column\">\n        {\n          projects.map((proj) =>\n            <li\n              key={ proj.id } className={ (projectKey === proj.id ? 'selected' : '') + ' mb-5 parent-hover flex-row' }\n            >\n              <ProjectListDropdown project={ proj } onAction={ onAction }/>\n              <button className=\"btn-invisible left left-align\" onClick={ () => setProject(proj) }>\n                {\n                  proj.shared &&\n                  <i\n                    className=\"tiny material-icons subtle left mr-5\"\n                    title={ text.sharedProject }\n                  >people_outline</i>\n                }\n                { proj.name }\n                {/*( { proj.openTasks } <span className=\"subtle\">/ { proj.completedTasks }</span> )*/ }\n              </button>\n            </li>\n          )\n        }\n        <li key=\"new-project\" className=\"mb-5 parent-hover flex-row\">\n          <button className=\"btn-invisible child-hover ch-hidden left\">\n            <label htmlFor=\"new-project-input\" className=\"pointer\">\n              <i className=\"tiny material-icons subtle\">add</i>\n            </label>\n          </button>\n          <form onSubmit={ addNewProject } className={ 'add-project flex-row' + (isLoading ? ' loader-input' : '') }>\n            <input\n              className=\"invisible subtle left-align\"\n              onChange={ (e) => setNewProjectName(e.target.value) }\n              required minLength=\"3\"\n              value={ newProjectName }\n              id=\"new-project-input\"\n              placeholder={ text.addProjectPh }\n            />\n          </form>\n\n        </li>\n      </ul>\n      <small className=\"flex-row logout\">\n        <span className=\"left subtle\">{ text.loggedInAs(user.email) }</span>\n        <button className=\"btn-invisible right subtle\"\n          onClick={ authService.logout }>{ text.login.logout }</button>\n      </small>\n    </>\n  );\n}\n\n\nexport default ProjectList;\n","import React, { useEffect, useState } from 'react';\n\nimport taskService from 'services/taskService';\nimport projectService from 'services/projectService';\nimport Project from 'components/Project/Project/Project';\nimport NoProject from 'components/Project/NoProject/NoProject';\nimport ProjectList from 'components/Project/ProjectList/ProjectList';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { LoggedInUserContext } from 'App';\nimport { urls } from './urls';\n\nexport const ProjectContext = React.createContext({});\n\n\nfunction TodoApp () {\n  const history = useHistory();\n  const { projectKeyParam } = useParams();\n\n  const [projectKey, setProjectKey] = useState(projectKeyParam || '');\n  const [project, setProject] = useState({});\n  const [projectTasks, setProjectTasks] = useState([]);\n\n  useEffect(() => {\n\n    if (projectKey !== String(projectKeyParam)) {\n      history.push(urls.project(projectKey));\n    }\n\n    if (projectKey) {\n\n      const unsubscribeProject = projectService.getProject(projectKey, (project) => {\n        setProject(project);\n      });\n\n      const unsubscribeTasks = taskService.getTasksForProject(projectKey, (project) => {\n        setProjectTasks(project);\n      });\n\n      return () => {\n        unsubscribeProject && unsubscribeProject();\n        unsubscribeTasks && unsubscribeTasks();\n      };\n    }\n  }, [projectKey]);\n\n  if (!React.useContext(LoggedInUserContext)) {\n    history.push(urls.login);\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"row m0 w-100\">\n        <div className=\"col s3 projects-list-box\">\n          <ProjectList\n            projectKey={ projectKey }\n            setProjectKey={ setProjectKey }\n          />\n        </div>\n        <div className=\"col s9 tasks-list-box flex-column\">\n          <ProjectContext.Provider\n            value={ {\n              id: project.id,\n              name: project.name\n            } }\n          >\n            {\n              projectKey\n                ? <Project project={ project } projectTasks={ projectTasks }/>\n                : <NoProject/>\n            }\n          </ProjectContext.Provider>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TodoApp;\n","function Footer () {\n  return (\n    <>\n      <footer className=\"page-footer\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Footer Content</h5>\n              <p\n                className=\"grey-text text-lighten-4\"\n              >You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Links</h5>\n              <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2014 Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { LoggedInUserContext } from 'App';\nimport { text } from 'text';\nimport { urls } from 'urls';\nimport { Link } from 'react-router-dom';\nimport { authService } from 'services/authService';\n\nfunction Header ({ loaded }) {\n  const user = useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <nav>\n        <div className=\"nav-wrapper container\">\n          <Link to={ urls.app } className=\"brand-logo\">Todo List</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            {\n              user\n                ? loaded && <>\n                <li><Link to={ urls.app }>{ text.gotoApp }</Link></li>\n                <li><a\n                  href=\"#logout\" onClick={ authService.logout }\n                  className=\"btn-invisible\"\n                >{ text.login.logout }</a>\n                </li>\n              </>\n                : loaded && <>\n                <li><Link to={ urls.login }>{ text.login.login }</Link></li>\n                <li><Link to={ urls.signup }>{ text.login.signup }</Link></li>\n              </>\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\n\nfunction HomePage ({ loaded }) {\n\n\n  return (\n    <>\n      <Header loaded={ loaded }/>\n      <div\n        style={ {\n          height: '300px',\n          display: 'block'\n        } }\n      >\n        <h4 className=\"flex-center-self center-align\">Welcome to the best todo-app</h4>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport Signup from './login/Signup';\nimport Login from './login/Login';\nimport TodoApp from './TodoApp';\nimport { authService } from './services/authService';\nimport Loader from './components/Loader/Loader';\nimport HomePage from './components/HomePage/HomePage';\nimport { urls } from './urls';\n\nexport const LoggedInUserContext = React.createContext({});\n\nfunction App () {\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(false);\n\n  authService.authState((user) => {\n    console.info('User logged in: ', !!user);\n    setUser(user);\n    setLoaded(true);\n  });\n\n  return (\n    <>\n      <LoggedInUserContext.Provider value={ user }>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */ }\n          <Switch>\n            <Route path={ urls.home } exact={ true }>\n              <HomePage loaded={ loaded }/>\n            </Route>\n            { loaded\n              ?\n              <>\n                <Route path={ urls.signup } component={ Signup }/>\n                <Route path={ urls.login } component={ Login }/>\n                <Route path={ `${ urls.project(':projectKeyParam?') }` } component={ TodoApp }/>\n              </>\n              : <Loader/>\n            }\n          </Switch>\n        </Router>\n      </LoggedInUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\nimport 'assets/loader.svg';\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}