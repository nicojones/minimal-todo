{"version":3,"sources":["functions/screenSize.js","services/environment.js","services/firebase.js","services/authService.js","functions/sha1.js","config/text.js","config/urls.js","components/Loader/Loader.js","config/defaultToast.js","login/Signup.js","login/Login.js","services/handleError.js","functions/time.js","services/taskService.js","services/projectService.js","functions/createTaskObject.js","components/Modal/Modal.js","components/Modal/TaskModal.js","components/Project/Project/ProjectTitle/ProjectTitle.js","components/Project/Project/Task/Subtask.js","components/Project/Project/Task/Task.js","components/Project/Project/Project.js","components/Project/Project/Project-view.js","components/Project/NoProject/NoProject.js","components/Project/ProjectList/ProjectListDropdown/ProjectListDropdown.js","components/Project/ProjectList/ProjectList.js","TodoApp.js","components/HomePage/Footer.js","components/HomePage/Header.js","components/HomePage/HomePage.js","App.js","index.js"],"names":["window","isSmallScreen","onresize","innerWidth","environment","url","firebase","initializeApp","apiKey","databaseURL","projectId","analytics","debounceAuth","auth","db","firestore","sha1","str","a","buffer","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","x","toString","padStart","join","authService","authState","done","onIdTokenChanged","user","clearTimeout","setTimeout","signup","signupData","password","then","sha1Password","axios","method","data","response","login","email","loginData","userCredential","signInWithEmailAndPassword","localStorage","setItem","JSON","stringify","uid","currentUser","getIdToken","authToken","logout","e","preventDefault","signOut","cogoToast","success","position","validateSignup","username","name","length","confirm","text","gotoApp","loading","noListName","Date","toISOString","slice","addPh","addSubtaskPh","addSubtaskBtn","subtasks","sharedProject","subtaskStatus","deleteTask","allTasksCompleted","incomplete","Math","floor","random","completed","completedNo","showCompleted","hideCompleted","saveTask","discardTask","notes","notesPh","projects","addProject","addProjectPh","deleteProject","noProjSelected","loggedInAs","noAccount","yesAccount","error","signupSuccess","urls","home","app","project","id","Loader","className","defaultToast","Signup","history","useHistory","useState","getItem","isLoggedIn","setIsLoggedIn","setSignup","setLoading","signupError","setSignupError","_signupError","errors","Object","values","responseData","catch","React","useContext","LoggedInUserContext","push","to","onSubmit","value","onChange","target","placeholder","type","required","autoFocus","Login","setLogin","code","console","info","handleError","errorText","indexOf","split","pop","removeItem","location","hash","time","timeStr","m","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","taskService","headers","authorization","updateTask","projectKey","task","message","addTask","getTasksForProject","collection","orderBy","onSnapshot","tasksDoc","tasks","forEach","taskData","t","timestamp","toggleTask","doc","update","checked","projectService","getProject","getListOfProjects","where","projectsDoc","projectData","completedTasks","filter","openTasks","shared","saveListName","result","newProject","getUserByEmail","userEmail","addUserToProject","createTaskObject","description","Modal","children","modalOpen","okButton","cancelButton","onAccept","onCancel","onClick","dangerouslySetInnerHTML","__html","TaskModal","trigger","setModalOpen","subtaskName","setSubtaskName","setSubtasks","newSubtasks","setNewSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","ProjectContext","keepOpen","reference","submit","useEffect","minLength","sub","title","subtask","disabled","ProjectTitle","setShowCompleted","isLoading","editListName","projectName","setProjectName","setEditListName","Subtask","extraClass","saveSubtasks","addSubtaskInput","setAddSubtaskInput","Task","expandedTask","setExpandedTask","completedSubtasks","s","_task","expanded","log","isExpanded","toggleExpanded","toggleCompleted","onDelete","Project","p","projectTasks","setIsLoading","open","allCompleted","useMemo","taskNameChange","autoComplete","NoProject","setShowSidebar","ProjectListDropdown","onAction","dropdownShown","setDropdownShown","ProjectList","setProjectKey","setProjects","newProjectName","setNewProjectName","actionName","prompt","unsubscribeProjects","_projects","validProjectId","proj","htmlFor","snap","createContext","TodoApp","projectKeyParam","useParams","setProject","setProjectTasks","showSidebar","String","unsubscribeProject","unsubscribeTasks","href","Provider","Footer","Header","loaded","HomePage","style","height","display","App","setLoaded","setUser","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.270c2d5f.chunk.js","sourcesContent":["const smallWindow = 800; // smaller than this, and it's considered small.\n\nwindow.isSmallScreen = false;\n\nwindow.onresize = function () {\n  window.isSmallScreen = (window.innerWidth < smallWindow);\n}\nwindow.onresize();\n\n","const environment = {\n  url: 'https://us-central1-todo-list-react-33431.cloudfunctions.net/api',\n  // url: 'http://localhost:5000/todo-list-react-33431/us-central1/api',\n};\n\nexport default environment;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ\",\n  databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n  projectId: \"todo-list-react-33431\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const analytics = firebase.analytics;\nexport const auth = firebase.auth;\nexport const db = firebase.firestore;\n","import axios from 'axios';\nimport environment from './environment';\nimport cogoToast from 'cogo-toast';\nimport { auth } from './firebase';\nimport { sha1 } from 'functions/sha1';\n\nlet debounceAuth;\n\nexport const authService = {\n\n  authState: (done) => {\n    auth().onIdTokenChanged((user) => {\n      clearTimeout(debounceAuth);\n      debounceAuth = setTimeout(() => {\n        done(user);\n      }, 200);\n    });\n  },\n\n  signup: (signupData) => {\n    return sha1(signupData.password)\n      .then((sha1Password) => {\n        return axios({\n          url: `${ environment.url }/signup`,\n          method: 'POST',\n          data: {\n            ...signupData,\n            password: sha1Password\n          }\n        });\n      })\n      .then((response) => {\n        return authService.login({\n          email: signupData.email,\n          password: signupData.password\n        });\n      });\n  },\n\n  login: (loginData) => {\n    let userCredential;\n    return sha1(loginData.password)\n      .then((sha1Password) => {\n        return auth().signInWithEmailAndPassword(loginData.email, sha1Password);\n      })\n      .then((response) => {\n        localStorage.setItem('uid', JSON.stringify(response.user.uid));\n        userCredential = response;\n        return auth().currentUser.getIdToken();\n      })\n      .then((authToken) => {\n        localStorage.setItem('AuthToken', authToken);\n        return userCredential;\n      });\n  },\n\n  logout: (e) => {\n    e.preventDefault();\n\n    auth().signOut().then(() => {\n      cogoToast.success('You\\'ve been signed out of the app', { position: 'bottom-center' });\n    });\n  },\n\n  validateSignup: (signupData) => {\n    if (!signupData.username) {\n      return { username: 'Must enter a valid username' };\n    }\n    if (!signupData.name || signupData.name.length <= 5) {\n      return { name: 'Must enter a valid name' };\n    }\n    if (!signupData.email || signupData.email.length <= 5) {\n      return { email: 'Invalid email' };\n    }\n    if (!signupData.password || !signupData.confirm) {\n      return { password: 'Password can\\'t be empty' };\n    }\n    if (signupData.password !== signupData.confirm) {\n      return { password: 'Passwords don\\'t match' };\n    }\n    return {};\n  }\n};\n","export async function sha1( str ) {\n  const buffer = new TextEncoder('utf-8').encode( str );\n  const digest = await crypto.subtle.digest('SHA-1', buffer);\n\n  // Convert digest to hex string\n  return Array.from(new Uint8Array(digest)).map( x => x.toString(16).padStart(2,'0') ).join('');\n}\n","const dateToday = new Date().toISOString().slice(0, 10);\n\nexport const text = {\n  gotoApp: 'Open app',\n  loading: 'Loading app...',\n  noListName: 'New Project ' + dateToday,\n  addPh: 'Quick-add a task...',\n  addSubtaskPh: 'Add subtasks to this task',\n  addSubtaskBtn: 'Add a subtask',\n  subtasks: 'Subtasks',\n  sharedProject: 'This project is shared',\n  subtaskStatus: '( Completed / Pending )',\n  deleteTask: 'Delete task and its subtasks? Can\\'t be undone',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappuccino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎',\n      'Make a Todolist: Done ✅',\n      'I am Finnish 🇫🇮 with all tasks.'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  saveTask: 'Save',\n  discardTask: 'Cancel changes',\n\n  notes: 'Notes',\n  notesPh: 'An optional description always helps',\n\n  projects: 'Projects',\n  addProject: 'Add a new project',\n  addProjectPh: 'Enter a name for a new project',\n  deleteProject: 'Delete this project and all the tasks? (cannot be undone)',\n  noProjSelected: 'Select a project or create a new one.',\n\n  loggedInAs: (name) => `Logged in as ${ name }.`,\n\n  login: {\n    login: 'Log in',\n    signup: 'Sign up',\n    logout: 'Log out',\n    noAccount: 'Don\\'t have an account?',\n    yesAccount: 'Already a user?',\n    error: 'Invalid credentials',\n    success: 'Welcome Back!',\n    signupSuccess: 'Account created! Logging you in...'\n  },\n\n};\n","export const urls = {\n  home: '/',\n  app: '/app',\n  project: (id) => `${ urls.app }/${ id }`,\n  login: '/login',\n  signup: '/signup'\n}\n","import 'assets/loader.svg';\nimport './_app-loader.scss';\n\nimport React from 'react';\n\nfunction Loader () {\n\n  return (\n    <span className=\"app-loader\">\n      <span className=\"loader-img\"/>\n    </span>\n  )\n}\n\nexport default Loader;\n","export const defaultToast = { position: 'bottom-center' };\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from '../App';\nimport Loader from 'components/Loader/Loader';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from 'config/defaultToast';\n\nfunction Signup () {\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n  const [signup, setSignup] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [signupError, setSignupError] = useState({});\n\n\n  async function onSubmit (e) {\n    e.preventDefault();\n\n    const _signupError = authService.validateSignup(signup);\n    const errors = Object.values(_signupError);\n    if (!errors.length) {\n      setLoading(true);\n      authService.signup(signup).then((responseData) => {\n        setLoading(false);\n        if (responseData.user) {\n          cogoToast.success(text.login.signupSuccess, defaultToast);\n          setSignup({});\n          setIsLoggedIn(true);\n        }\n      }).catch(({ response }) => {\n        setSignupError(response.data);\n        const errors = Object.values(response.data);\n        errors.length && cogoToast.error(errors[0], defaultToast);\n        setLoading(false);\n      });\n    } else {\n      setSignupError(_signupError)\n      errors.length && cogoToast.error(errors[0], defaultToast);\n    }\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <>\n            { loading && <Loader/> }\n            <div className=\"row\">\n              <form onSubmit={ onSubmit } className=\"flex-center-self center-block\">\n                <input\n                  value={ signup.email || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" required autoFocus\n                />\n                { signupError.email && <small>{ signupError.email }</small>}\n                <input\n                  value={ signup.name || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  name: e.target.value\n                }) } placeholder=\"name\" required\n                />\n                { signupError.name && <small>{ signupError.name }</small>}\n                <input\n                  value={ signup.username || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  username: e.target.value\n                }) } placeholder=\"username\" required\n                />\n                { signupError.username && <small>{ signupError.username }</small>}\n                <input\n                  value={ signup.password || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" required\n                />\n                { signupError.password && <small>{ signupError.password }</small>}\n                <input\n                  value={ signup.confirm || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  confirm: e.target.value\n                }) } placeholder=\"confirm\" type=\"password\" required\n                />\n                { signupError.password && <small>{ signupError.password }</small>}\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.signup }</button>\n                  <Link to={ urls.login } className=\"btn-flat\">{ text.login.yesAccount } { text.login.login }</Link>\n                </div>\n              </form>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { urls } from 'config/urls';\nimport { text } from 'config/text';\nimport { LoggedInUserContext } from 'App';\nimport cogoToast from 'cogo-toast';\n\nfunction Login () {\n\n  const history = useHistory();\n  const [login, setLogin] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    authService.login(login).then((responseData) => {\n      if (responseData.user) {\n        setLogin({});\n        setIsLoggedIn(true);\n        cogoToast.success(text.login.success, { position: 'bottom-center' });\n      } else {\n        if (responseData.error.code === 400) {\n          cogoToast.error(text.login.error, { position: 'bottom-center' })\n        }\n        console.info(responseData);\n      }\n    });\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to={ urls.app }/>\n          :\n          <>\n            <div className=\"row\">\n              <form onSubmit={ onSubmit } className=\"flex-center-self center-block\">\n                <input\n                  value={ login.email || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" autoFocus\n                />\n                <input\n                  value={ login.password || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\"\n                />\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.login }</button>\n                  <Link to={ urls.signup } className=\"btn-flat right\">{ text.login.noAccount } { text.login.signup }</Link>\n                </div>\n              </form>\n            </div>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Login;\n","import { urls } from 'config/urls';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from '../config/defaultToast';\n\nexport const handleError = (errorText, error) => {\n  cogoToast.error(errorText, defaultToast);\n\n  console.error(errorText, error);\n  if (['401', '403'].indexOf(error.toString().split(' ').pop()) >= 0) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('AuthToken');\n    window.location.hash = urls.login;\n  }\n}\n","export function time (timeStr) {\n  const m = new Date(timeStr);\n  return m.getUTCFullYear() + '/' + (m.getUTCMonth() + 1) + '/' + m.getUTCDate()\n    + ' ' + m.getUTCHours() + ':' + m.getUTCMinutes() + ':' + m.getUTCSeconds();\n}\n","import { db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from '../config/defaultToast';\nimport { time } from 'functions/time';\n\nconst taskService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  updateTask: async (projectKey, task) => {\n    console.info('Updating task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'PUT',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from PUT', response);\n        cogoToast.success(response.data.message, defaultToast);\n      });\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  addTask: async (projectKey, task) => {\n    console.info('Adding task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task`,\n        method: 'POST',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from POST', response);\n        cogoToast.success(response.data.message, defaultToast);\n      });\n      // return await db.ref(`${ taskService.path }/tasks`).push(task);\n    } catch (e) {\n      handleError('Error on save task: ', e);\n    }\n  },\n\n  deleteTask: async (projectKey, task) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ projectKey }/task/${ task.id }`,\n        method: 'DELETE',\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from DELETE', response);\n        cogoToast.success(response.data.message, defaultToast);\n      });\n    } catch (e) {\n      handleError('Error on delete task: ', e);\n    }\n  },\n\n  getTasksForProject: (projectKey, done) => {\n    try {\n      return taskService.db\n        .collection(`/projects/${ projectKey }/tasks`)\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((tasksDoc) => {\n          const tasks = [];\n          tasksDoc.forEach((task) => {\n            const taskData = task.data();\n\n            if (taskData.subtasks.length) {\n              taskData.subtasks.forEach((t) => t.timestamp = time(t.timestamp));\n            }\n            tasks.push({\n              id: task.id,\n              ...taskData,\n              timestamp: time(taskData.timestamp)\n            });\n          });\n          done(tasks);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  toggleTask: (projectId, task) => {\n    try {\n      return taskService.db\n        .doc(`/projects/${ projectId }/tasks/${ task.id }`)\n        .update({\n          checked: task.checked,\n          subtasks: task.subtasks\n        });\n    } catch (e) {\n      handleError('Error on updating \"checked\" task: ', e);\n    }\n  }\n\n};\n\nexport default taskService;\n","import { db, auth } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { defaultToast } from '../config/defaultToast';\n\nconst projectService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getProject: (projectKey, done) => {\n    try {\n      return projectService.db\n        .doc(`/projects/${ projectKey }`)\n        .onSnapshot((doc) => {\n          const project = doc.data();\n          project.id = doc.id;\n\n          console.info(`Changed to project \"${ project.name }\"`);\n\n          done(project);\n        });\n    } catch (e) {\n      handleError('Error on fetching Project: ', e);\n    }\n  },\n\n  getListOfProjects: (done) => {\n    try {\n      return projectService.db\n        .collection(`/projects`)\n        .where('uids', 'array-contains', auth().currentUser.uid)\n        // .orderBy('timestamp', 'desc')\n        .onSnapshot((projectsDoc) => {\n\n          const projects = [];\n          projectsDoc.forEach((doc) => {\n            const projectData = doc.data();\n            const tasks = Object.values(projectData.tasks || '' /* empty object actually... */);\n            const completedTasks = tasks.filter((t) => t.checked).length;\n            const openTasks = tasks.length - completedTasks;\n            projects.push({\n              id: doc.id,\n              name: projectData.name,\n              shared: projectData.shared,\n              openTasks,\n              completedTasks\n            });\n          });\n\n          done(projects);\n\n          console.info('Lists loaded: ', projects.length);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  saveListName: async (project) => {\n    console.info('Updating project ', project);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'PUT',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info('result from Edit Project PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save project name: ', e);\n    }\n  },\n\n  newProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project`,\n        method: 'POST',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info(result);\n        return result.data.project;\n      });\n    } catch (e) {\n      handleError('Error on create project: ', e);\n    }\n  },\n\n  deleteProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info('result from project DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project: ', e);\n    }\n  },\n\n  getUserByEmail: async (userEmail) => {\n    try {\n      return await axios({\n        url: environment.url + `/user/search/`,\n        method: 'POST',\n        data: { email: userEmail },\n        headers: projectService.headers(),\n      }).then((result) => {\n        return result.data.user;\n      });\n    } catch (e) {\n      handleError('Error on searching email: ', e);\n    }\n  },\n\n  addUserToProject: async (project, username) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/join`,\n        method: 'POST',\n        headers: projectService.headers(),\n        data: { username: username }\n      }).then((result) => {\n        cogoToast.success(result.data.message, defaultToast);\n        console.info('result from joining Project', result);\n      });\n    } catch (e) {\n      handleError('Error on joining project: ', e);\n    }\n  }\n};\n\nexport default projectService;\n","function createTaskObject (task) {\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    id: task.id || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    subtasks: task.subtasks || [], // will not be saved in the DB. here just for reference...\n    description: task.description || ''\n  }\n}\n\nexport default createTaskObject;\n","import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n          <div className={ 'z-depth-5 modal open' }>\n            <div className=\"modal-content\">\n              { children }\n            </div>\n            <div className=\"modal-footer\">\n              {\n                okButton &&\n                <button\n                  onClick={ onAccept }\n                  className=\"modal-close waves-effect waves-green btn-flat btn\"\n                  dangerouslySetInnerHTML={ { __html: okButton } }\n                />\n              }\n              {\n                cancelButton &&\n                <button\n                  onClick={ onCancel }\n                  className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                  dangerouslySetInnerHTML={ { __html: cancelButton } }\n                />\n              }\n            </div>\n          </div>\n          <div className=\"backdrop\" onClick={ onCancel }/>\n        </>\n        : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\nimport React, { useContext, useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [newSubtasks, setNewSubtasks] = useState([]);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  const project = useContext(ProjectContext);\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (task, keepOpen) {\n    if (task.id) {\n      await taskService.updateTask(project.id, task);\n    } else {\n      taskService.addTask(project.id, createTaskObject(task)).then((reference) => {\n        task.id = reference.id;\n      });\n    }\n    setModalOpen(!!keepOpen);\n  }\n\n  async function submit (e) {\n    e.preventDefault();\n\n    task.name = taskName;\n    task.description = taskDesc;\n    task.subtasks = [...subtasks, ...newSubtasks];\n\n    await saveTask(task, false);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    setSubtasks([...task?.subtasks]);\n  }\n\n  function saveSubtask (e) {\n    e.preventDefault();\n\n    setNewSubtasks([\n      ...newSubtasks,\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ]);\n    setSubtaskName('');\n\n    e.target[0].value = '';\n  }\n\n  async function onAccept (e) {\n    await submit(e);\n    setModalOpen(false);\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        onAccept={ onAccept }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.saveTask + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.discardTask + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <h6 className=\"subtle mb-15 mt-5\">{ project.name }</h6>\n        <form onSubmit={ submit }>\n          <div>\n            <label>Task Name</label>\n            <input\n              value={ taskName } required minLength={ 3 }\n              placeholder=\"Enter a name for the task\"\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.notes }</label>\n            <textarea\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            (subtasks || []).map((sub) =>\n              <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.id }\n                    className=\"material-cb\"\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <div/>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          {\n            newSubtasks.map((sub) =>\n              <li key={ sub.id } className=\"block\">\n                <label className=\"left\">\n                  <input type=\"checkbox\" className=\"material-cb\" disabled/>\n                  <div/>\n                </label>\n                <span className=\"left subtle\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                className=\"input-field\"\n                required minLength={3}\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import React from 'react';\nimport { text } from 'config/text';\n\nfunction ProjectTitle ({ project, showCompleted, setShowCompleted, isLoading }) {\n\n  return (\n    project.editListName\n      ? <form onSubmit={ project.saveListName } className={ ( isLoading === 'name' ? ' loader-input' : '' ) }>\n        <input\n          className=\"as-title m0 invisible h5\" autoFocus /*onBlur={ project.saveListName }*/\n          value={ project.projectName }\n          onChange={ (e) => project.setProjectName(e.target.value) }\n        />\n      </form>\n      : <div className=\"flex-row\">\n        <h5 className=\"max-content m0\" onClick={ () => project.setEditListName(true) }>{ project.projectName }</h5>\n        {\n          showCompleted\n            ? <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(false) }\n              title={ text.hideCompleted }\n            >check_box</button>\n            : <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle\"\n              onClick={ () => setShowCompleted(true) }\n              title={ text.showCompleted }\n            >check_box_outline_blank</button>\n        }\n      </div>\n  );\n}\n\nexport default ProjectTitle;\n","import { text } from 'config/text';\nimport React, { useState } from 'react';\n\nfunction Subtask ({ extraClass, task, saveSubtasks }) {\n\n  const [subtaskName, setSubtaskName] = useState('');\n  const [addSubtaskInput, setAddSubtaskInput] = useState(false);\n\n  function saveSubtask (e) {\n    e.preventDefault();\n    e.target[0].value = '';\n    setAddSubtaskInput(false);\n\n    task.subtasks = [\n      ...(task.subtasks || []),\n      {\n        id: Math.random(),\n        timestamp: new Date(),\n        name: subtaskName,\n        checked: false\n      }\n    ];\n    saveSubtasks(task);\n  }\n\n  function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    saveSubtasks(task);\n  }\n\n  return (\n    <ul className={ 'list-unstyled flex-column pt-5 ' + extraClass }>\n      {\n        (task.subtasks || []).map((sub) =>\n          <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n            <label className=\"left\">\n              <input\n                type=\"checkbox\" checked={ sub.checked }\n                id={ sub.id } className=\"material-cb\"\n                onChange={ () => toggleSubtask(sub) }\n              />\n              <div/>\n            </label>\n            <span className=\"left\">{ sub.name }</span>\n          </li>\n        )\n      }\n      <li key=\"new-subtask\">\n        {\n          addSubtaskInput\n            ?\n            <form onSubmit={ saveSubtask }>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.addSubtaskPh }\n                autoFocus={ true }\n                className=\"input-field invisible\"\n              />\n            </form>\n            :\n            <button className=\"btn-flat subtle p0\" onClick={ () => setAddSubtaskInput(true) }>\n              <i className=\"material-icons left\">add</i>\n              { text.addSubtaskBtn }\n            </button>\n        }\n      </li>\n    </ul>\n  );\n}\n\nexport default Subtask;\n","import React, { useContext, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport Subtask from './Subtask';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\nfunction Task ({ task }) {\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedTask, setExpandedTask] = useState(false);\n\n  const project = useContext(ProjectContext);\n\n  const completedSubtasks = subtasks.filter((s) => !!s.checked).length;\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    // after changing the state...\n    if (task.checked) {\n      // set all subtasks as checked, since the main task was marked as checked.\n      (task.subtasks || []).forEach((_task) => _task.checked = true);\n      task.expanded = false;\n    }\n    await taskService.toggleTask(project.id, task).then((a) => {\n      console.log('anotehuntoaheutnh',a);\n    })\n    // await taskService.updateTask(project.id, task);\n  }\n\n  /**\n   * If you want to say the toggle state, just update this function\n   */\n  async function toggleExpanded (isExpanded) {\n    //task.expanded = isExpanded;\n    // await taskService.updateTask(task);\n    setExpandedTask(isExpanded);\n  }\n\n  async function saveSubtasks (task) {\n    setSubtasks(task.subtasks);\n    await taskService.updateTask(project.id, task);\n  }\n\n  async function onDelete () {\n    if (window.confirm(text.deleteTask)) {\n\n      await taskService.deleteTask(project.id, task)\n    }\n  }\n\n  return (\n    <li className={ (task.checked ? 'done' : '') + ' parent-hover task' } title={ task.timestamp }>\n      <div className=\"task-content\">\n        <button\n          className={ 'toggle-expand subtle btn-invisible material-icons tiny left ' + (expandedTask && ' expanded') }\n          onClick={ () => toggleExpanded(!expandedTask) }\n        >chevron_right\n        </button>\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            className=\"material-cb\"\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <div/>\n        </label>\n        <button\n          className={ 'btn-invisible task-name ' + (task.checked ? '' : '') }\n          onClick={ () => setModalOpen(true) }>\n          { task.name }\n          <span className=\"subtle child-hover ml-5\" title={ text.subtaskStatus }\n          >({ completedSubtasks } / { subtasks.length - completedSubtasks })</span>\n        </button>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-subtle ml-5 material-icons right\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-subtle ml-5 material-icons right',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            task.description &&\n            <div className=\"ml-50\">\n              <p><span className=\"subtle\">{ text.notes }:</span> { task.description }</p>\n            </div>\n          }\n          <Subtask extraClass={ 'ml-50' } saveSubtasks={ saveSubtasks } subtasks={ subtasks } task={ task }/>\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { useEffect, useMemo, useState } from 'react';\nimport './_project.scss';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport projectRender from './Project-view';\nimport projectService from '../../../services/projectService';\n\nfunction Project ({ project, projectTasks }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [showCompleted, setShowCompleted] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [projectName, setProjectName] = useState(project.name || text.noListName);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = projectTasks.filter((task) => !task.checked);\n  const completed = projectTasks.filter((task) => !!task.checked);\n\n  // const inputElement = useRef(null);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted()\n  }, [ open.length ]);\n\n  let taskName = '';\n\n  useEffect(() => {\n    setProjectName(project.name);\n  }, [project.name])\n\n  async function submit (e) {\n    e.preventDefault();\n    setIsLoading('task');\n    // inputElement.current && (inputElement.current.target.value = '');\n\n    await taskService.addTask(project.id, createTaskObject({ name: taskName }));\n    e.target[0].value = '';\n    setIsLoading('');\n  }\n\n  function taskNameChange (e) {\n    taskName = e.target.value;\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    setIsLoading('name');\n    await projectService.saveListName({ ...project, name: projectName });\n    setEditListName(false);\n    setIsLoading('');\n  }\n\n  return projectRender({\n    open,\n    completed,\n    submit,\n    taskNameChange,\n    showCompleted,\n    setShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    isLoading,\n    project: {\n      projectName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setProjectName\n    }\n  });\n}\n\nexport default Project;\n","import React from 'react';\nimport { text } from 'config/text';\nimport TaskModal from 'components/Modal/TaskModal';\nimport ProjectTitle from './ProjectTitle/ProjectTitle';\nimport Task from './Task/Task';\n\n\nexport default function projectRender (p) {\n\n  return (\n    <>\n      <ProjectTitle\n        project={ p.project } showCompleted={ p.showCompleted } setShowCompleted={ p.setShowCompleted }\n        isLoading={ p.isLoading }\n      />\n\n      <ul className=\"list-unstyled\">\n        { p.open.length ?\n          p.open.map((task) =>\n            <Task\n              key={ task.id }\n              task={ task }\n            />)\n          : (p.completed.length ? <li><h5 className=\"subtle max-content\">{ p.allCompleted }</h5></li> : '')\n        }\n        { p.showCompleted && p.completed.map((task) =>\n          <Task\n            key={ task.id }\n            task={ task }\n          />) }\n\n        <li className=\"task\">\n          <form onSubmit={ p.submit }\n            className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }>\n            <i /* Just to give the right padding */ className=\"material-icons left v-hidden mr-11\">add</i>\n            <i className=\"material-icons left subtle\">add</i>\n            <div className=\"form-group\">\n              <div className=\"input-group mb-2\">\n                <input\n                  onChange={ p.taskNameChange } className=\"invisible f-100\"\n                  placeholder={ text.addPh } required\n                  autoComplete=\"off\" /*ref={ inputElement }*/\n                />\n              </div>\n            </div>\n          </form>\n        </li>\n      </ul>\n\n      <TaskModal\n        trigger={ {\n          className: 'btn-floating btn-large new-task fixed-action-btn subtle-bg',\n          text: <i className=\"material-icons\">add</i>\n        } }\n        task={ {} }\n        modalOpen={ p.modalOpen }\n        setModalOpen={ p.setModalOpen }\n      />\n    </>\n  );\n}\n","import { text } from 'config/text';\n\nfunction NoProject ({ setShowSidebar }) {\n  return (\n    <>\n      <button className=\"btn-invisible left-align\" onClick={ () => setShowSidebar(true) }>{ text.noProjSelected }</button>\n    </>\n  )\n}\n\nexport default NoProject;\n","import React, { useState } from 'react';\n\nfunction ProjectListDropdown ({ project, onAction }) {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  return (\n    <>\n      <button className=\"btn-invisible child-hover ch-hidden left\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"tiny material-icons subtle\">more_horiz</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"pl-dropdown\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"pl-dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('delete', project) }>\n                <i className=\"tiny material-icons subtle\">delete</i> Delete Project\n              </button>\n            </li>\n            <li className=\"pl-dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('share', project) }>\n                <i className=\"tiny material-icons subtle\">people_outline</i> Share Project\n              </button>\n            </li>\n          </ul>\n          <div className=\"pl-backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default ProjectListDropdown;\n","import React, { useEffect, useState } from 'react';\nimport { text } from 'config/text';\nimport './_project-list.scss';\nimport projectService from 'services/projectService';\nimport ProjectListDropdown from './ProjectListDropdown/ProjectListDropdown';\nimport { LoggedInUserContext } from '../../../App';\nimport { authService } from '../../../services/authService';\n\nfunction validProjectId (projectId, projects) {\n  // If there's a project set in the URL and it's valid (it exists)\n  if (projectId && projects.filter((p) => p.id === projectId).length) {\n    return projectId;\n  }\n  return ''; // otherwise don't set any project.\n}\n\nfunction ProjectList ({ projectKey, setProjectKey }) {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [projects, setProjects] = useState([]);\n\n  const [newProjectName, setNewProjectName] = useState('');\n\n  const user = React.useContext(LoggedInUserContext);\n\n  useEffect(() => {\n    const unsubscribeProjects = projectService.getListOfProjects((_projects) => {\n      setProjectKey(validProjectId(projectKey, _projects)); // set the first project as selected...\n      setProjects(_projects);\n    });\n\n    return () => {\n      unsubscribeProjects && unsubscribeProjects();\n    };\n  }, [projectKey]);\n\n  function addNewProject (e) {\n    e.preventDefault();\n\n    setIsLoading(true);\n\n    projectService\n      .newProject({ name: newProjectName })\n      .then((snap) => {\n        setNewProjectName('');\n        setIsLoading(false);\n        setProjectKey(snap.id);\n      });\n  }\n\n  async function deleteProject (project) {\n    if (window.confirm(text.deleteProject)) {\n      // setIsLoading(true);\n      await projectService.deleteProject(project);\n      setProjectKey('');\n      // setIsLoading(false);\n    }\n  }\n\n  function setProject (project) {\n    if (project.id === projectKey) {\n      return; // can't change to itself... it also causes a re-render problem in the `useEffect`\n    }\n    setProjectKey(project.id);\n  }\n\n  async function onAction (actionName, project) {\n    switch (actionName) {\n      case 'delete':\n        await deleteProject(project);\n        break;\n      case 'share':\n        const userEmail = prompt('User Email to join?');\n        await projectService.getUserByEmail(userEmail).then(async (user) => {\n          await projectService.addUserToProject(project, user.username);\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <h5 className=\"center-align\">{ text.projects }</h5>\n      <ul className=\"projects-list flex-column\">\n        {\n          projects.map((proj) =>\n            <li\n              key={ proj.id } className={ (projectKey === proj.id ? 'selected' : '') + ' mb-5 parent-hover flex-row' }\n            >\n              <ProjectListDropdown project={ proj } onAction={ onAction }/>\n              <button className=\"btn-invisible left left-align\" onClick={ () => setProject(proj) }>\n                {\n                  proj.shared &&\n                  <i\n                    className=\"tiny material-icons subtle left mr-5\"\n                    title={ text.sharedProject }\n                  >people_outline</i>\n                }\n                { proj.name }\n                {/*( { proj.openTasks } <span className=\"subtle\">/ { proj.completedTasks }</span> )*/ }\n              </button>\n            </li>\n          )\n        }\n        <li key=\"new-project\" className=\"mb-5 parent-hover flex-row\">\n          <button className=\"btn-invisible child-hover ch-hidden left\">\n            <label htmlFor=\"new-project-input\" className=\"pointer\">\n              <i className=\"tiny material-icons subtle\">add</i>\n            </label>\n          </button>\n          <form onSubmit={ addNewProject } className={ 'add-project flex-row' + (isLoading ? ' loader-input' : '') }>\n            <input\n              className=\"invisible subtle left-align\"\n              onChange={ (e) => setNewProjectName(e.target.value) }\n              required minLength=\"3\"\n              value={ newProjectName }\n              id=\"new-project-input\"\n              placeholder={ text.addProjectPh }\n            />\n          </form>\n\n        </li>\n      </ul>\n      <small className=\"flex-row logout\">\n        <span className=\"left subtle\">{ text.loggedInAs(user.email) }</span>\n        <button className=\"btn-invisible right subtle\"\n          onClick={ authService.logout }>{ text.login.logout }</button>\n      </small>\n    </>\n  );\n}\n\n\nexport default ProjectList;\n","import React, { useEffect, useState } from 'react';\n\nimport taskService from 'services/taskService';\nimport projectService from 'services/projectService';\nimport Project from 'components/Project/Project/Project';\nimport NoProject from 'components/Project/NoProject/NoProject';\nimport ProjectList from 'components/Project/ProjectList/ProjectList';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { LoggedInUserContext } from 'App';\nimport { urls } from 'config/urls';\n\nexport const ProjectContext = React.createContext({});\n\n\nfunction TodoApp () {\n  const history = useHistory();\n  const { projectKeyParam } = useParams();\n\n  const [projectKey, setProjectKey] = useState(projectKeyParam || '');\n  const [project, setProject] = useState({});\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(!window.isSmallScreen);\n\n  useEffect(() => {\n\n    if (projectKey !== String(projectKeyParam)) {\n      history.push(urls.project(projectKey));\n    }\n\n    if (projectKey) {\n\n      const unsubscribeProject = projectService.getProject(projectKey, (project) => {\n        setProject(project);\n      });\n\n      const unsubscribeTasks = taskService.getTasksForProject(projectKey, (project) => {\n        setProjectTasks(project);\n      });\n\n      return () => {\n        unsubscribeProject && unsubscribeProject();\n        unsubscribeTasks && unsubscribeTasks();\n      };\n    }\n  }, [projectKey]);\n\n  if (!React.useContext(LoggedInUserContext)) {\n    history.push(urls.login);\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"navbar-fixed\">\n        <nav className=\"grey\">\n          <div className=\"nav-wrapper\">\n            <a className=\"sidenav-triggert btn-subtle\" onClick={ () => setShowSidebar(!showSidebar) }>\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <ul className=\"right hide-on-med-and-down\">\n              <li><a href=\"sass.html\">Sass</a></li>\n              <li><a href=\"badges.html\">Components</a></li>\n              <li><a href=\"collapsible.html\">Javascript</a></li>\n              <li><a href=\"mobile.html\">Mobile</a></li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      <div id=\"todo-app\" className={ (showSidebar ? '' : ' hidden-bar') }>\n        <div className={ 'projects-list-box' }>\n          <div className={ 'projects-list-box-inner' }>\n            <ProjectList\n              projectKey={ projectKey }\n              setProjectKey={ setProjectKey }\n            />\n          </div>\n        </div>\n        <div className=\"tasks-list-box flex-column\">\n          <ProjectContext.Provider\n            value={ {\n              id: project.id,\n              name: project.name\n            } }\n          >\n            {\n              projectKey\n                ? <Project project={ project } projectTasks={ projectTasks }/>\n                : <NoProject setShowSidebar={ setShowSidebar }/>\n            }\n          </ProjectContext.Provider>\n        </div>\n        <i/> { /* Thanks to this, we have three elements. Space-between works like a charm */ }\n      </div>\n    </>\n  );\n}\n\nexport default TodoApp;\n","function Footer () {\n  return (\n    <>\n      <footer className=\"page-footer grey\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Footer Content</h5>\n              <p\n                className=\"grey-text text-lighten-4\"\n              >You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Links</h5>\n              <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2014 Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { LoggedInUserContext } from 'App';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { Link } from 'react-router-dom';\nimport { authService } from 'services/authService';\n\nfunction Header ({ loaded }) {\n  const user = useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <nav className=\"grey\">\n        <div className=\"nav-wrapper container\">\n          <Link to={ urls.app } className=\"brand-logo\">Todo List</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            {\n              user\n                ? loaded && <>\n                <li><Link to={ urls.app }>{ text.gotoApp }</Link></li>\n                <li><a\n                  href=\"#logout\" onClick={ authService.logout }\n                  className=\"btn-invisible\"\n                >{ text.login.logout }</a>\n                </li>\n              </>\n                : loaded && <>\n                <li><Link to={ urls.login }>{ text.login.login }</Link></li>\n                <li><Link to={ urls.signup }>{ text.login.signup }</Link></li>\n              </>\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\n\nfunction HomePage ({ loaded }) {\n\n\n  return (\n    <>\n      <Header loaded={ loaded }/>\n      <div\n        style={ {\n          height: '300px',\n          display: 'block'\n        } }\n      >\n        <h4 className=\"flex-center-self center-align\">Welcome to the best todo-app</h4>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport Signup from './login/Signup';\nimport Login from './login/Login';\nimport TodoApp from './TodoApp';\nimport { authService } from './services/authService';\nimport Loader from './components/Loader/Loader';\nimport HomePage from './components/HomePage/HomePage';\nimport { urls } from 'config/urls';\n\nexport const LoggedInUserContext = React.createContext({});\n\nfunction App () {\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(false);\n\n  authService.authState((user) => {\n    console.info('User logged in: ', !!user);\n    setUser(user);\n    setLoaded(true);\n  });\n\n  return (\n    <>\n      <LoggedInUserContext.Provider value={ user }>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */ }\n          <Switch>\n            <Route path={ urls.home } exact={ true }>\n              <HomePage loaded={ loaded }/>\n            </Route>\n            { loaded\n              ?\n              <>\n                <Route path={ urls.signup } component={ Signup }/>\n                <Route path={ urls.login } component={ Login }/>\n                <Route path={ `${ urls.project(':projectKeyParam?') }` } component={ TodoApp }/>\n              </>\n              : <Loader/>\n            }\n          </Switch>\n        </Router>\n      </LoggedInUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\nimport 'assets/loader.svg';\nimport 'functions/screenSize'; // must be imported here.\n\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}