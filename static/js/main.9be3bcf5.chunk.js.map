{"version":3,"sources":["functions/screenSize.js","services/environment.js","services/firebase.js","functions/sha1.js","config/text.js","services/authService.js","config/constants.js","config/urls.js","login/LoginBox.js","login/Signup.js","login/Login.js","services/handleError.js","functions/time.js","services/taskService.js","components/Navbar/UserSettingsDropdown.js","components/Navbar/Navbar.js","services/projectService.js","functions/createTaskObject.js","components/Project/Project/ProjectTitle/ProjectTitle.js","components/Modal/Modal.js","components/Modal/TaskModal.js","components/Project/Project/Task/Task.js","components/Project/Project/Project.js","components/Project/Project/Project-view.js","components/Project/NoProject/NoProject.js","components/Project/ProjectList/ProjectListDropdown/ProjectListDropdown.js","components/ColorPicker/ColorPicker.js","components/Project/ProjectList/ProjectList.js","services/drawerService.js","functions/reservedKey.js","components/Drawer/Drawer.js","TodoApp.js","components/Loader/Loader.js","components/HomePage/Footer.js","components/HomePage/Header.js","components/HomePage/HomePage.js","App.js","index.js"],"names":["window","isSmallScreen","onresize","innerWidth","environment","production","firebase","apiKey","databaseURL","projectId","authDomain","storageBucket","messagingSenderId","appId","measurementId","url","initializeApp","analytics","auth","db","firestore","sha1","str","a","buffer","TextEncoder","encode","crypto","subtle","digest","Array","from","Uint8Array","map","x","toString","padStart","join","useEmulator","debounceAuth","text","gotoApp","loading","noListName","Date","toISOString","slice","task","name","delete","addTaskPh","phs","Math","floor","random","length","addSubtaskPh","save","discard","notes","notesPh","drawer","inbox","_","invalidDrawer","sharedProject","subtaskStatus","allTasksCompleted","incomplete","completed","completedNo","showCompleted","hideCompleted","project","s","noSelected","share","long","add","ph","genericError","loggedInAs","login","signup","logout","noAccount","yesAccount","error","success","signupSuccess","invalidPass","invalidUser","constants","position","authService","setToken","token","localStorage","setItem","authState","done","onIdTokenChanged","user","clearTimeout","setTimeout","getIdToken","then","signupData","password","sha1Password","axios","method","data","response","email","loginData","userCredential","signInWithEmailAndPassword","JSON","stringify","uid","currentUser","authToken","loginCatch","reason","console","log","code","cogoToast","message","e","preventDefault","signOut","validateSignup","username","confirm","urls","home","app","id","inboxUrl","LoginBox","children","title","className","Signup","history","useHistory","useState","getItem","isLoggedIn","setIsLoggedIn","setSignup","setLoading","signupError","setSignupError","_signupError","errors","Object","values","responseData","catch","React","useContext","LoggedInUserContext","push","to","onSubmit","value","onChange","target","placeholder","type","required","autoFocus","autoComplete","Login","setLogin","info","handleError","errorText","lastError","indexOf","split","pop","removeItem","location","hash","time","timeStr","m","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","taskService","headers","authorization","updateTask","addTask","taskId","deleteTask","getTasksForProject","projectKey","collection","orderBy","onSnapshot","tasksDoc","tasks","forEach","taskDoc","parentId","timestamp","seconds","subtasks","toggleTask","doc","update","checked","expanded","UserSettingsDropdown","dropdownShown","setDropdownShown","onClick","Navbar","setShowSidebar","showSidebar","projectService","getProject","getListOfProjects","where","projectsDoc","projects","projectData","shared","color","updateProject","result","newProject","deleteProject","getUserByEmail","userEmail","addUserToProject","createTaskObject","level","description","ProjectTitle","projectFunctions","toggleShowCompleted","isLoading","ProjectContext","editListName","saveListName","projectName","disabled","onBlur","setEditListName","setProjectName","Modal","modalOpen","okButton","cancelButton","onAccept","onCancel","dangerouslySetInnerHTML","__html","TaskModal","trigger","setModalOpen","subtaskName","setSubtaskName","setSubtasks","taskName","setTaskName","taskDesc","setTaskDesc","saveTask","subtask","useEffect","minLength","addPh","sub","toggleSubtask","Task","expandedTask","setExpandedTask","openLength","filter","doneClass","showExpanderClass","isExpanded","toggleExpanded","toggleCompleted","onDelete","aria-details","t","Project","p","setProject","projectTasks","setProjectTasks","setIsLoading","setShowCompleted","open","allCompleted","useMemo","hexColor","projectPartial","unsubscribeProject","unsubscribeTasks","taskNameChange","changeColor","NoProject","ProjectListDropdown","onAction","ColorPicker","onChangeComplete","showColorPicker","setShowColorPicker","style","backgroundColor","colorChoice","hex","ProjectList","setProjectKey","setProjects","newProjectName","setNewProjectName","actionName","prompt","unsubscribeProjects","_projects","_projectKey","validProjectId","proj","htmlFor","snap","drawerService","getDrawer","drawerKey","query","taskCollection","collectionGroup","taskData","reservedKey","Drawer","drawerTasks","setDrawerTasks","createContext","TodoApp","projectKeyParam","useParams","String","Provider","Loader","Footer","href","Header","loaded","HomePage","height","display","App","setLoaded","setUser","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"qGAEAA,OAAOC,eAAgB,EAEvBD,OAAOE,SAAW,WAChBF,OAAOC,cAAiBD,OAAOG,WALb,KAOpBH,OAAOE,Y,yRCYQE,EAnBK,CAClBC,YAAY,EAEZC,SAAU,CACRC,OAAQ,0CACRC,YAAa,+CACbC,UAAW,wBACXC,WAAY,wCACZC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAGjBC,IAAK,oE,qCCPPT,IAASU,cAAcZ,EAAYE,UAE5B,IAAMW,EAAYX,IAASW,UACrBC,EAAOZ,IAASY,KAChBC,EAAKb,IAASc,UCXpB,SAAeC,EAAtB,kC,4CAAO,WAAqBC,GAArB,iBAAAC,EAAA,6DACCC,EAAS,IAAIC,YAAY,SAASC,OAAQJ,GAD3C,SAEgBK,OAAOC,OAAOC,OAAO,QAASL,GAF9C,cAECK,EAFD,yBAKEC,MAAMC,KAAK,IAAIC,WAAWH,IAASI,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SAAS,IAAIC,SAAS,EAAE,QAAOC,KAAK,KALrF,4C,sBDaHjC,EAAYC,WACdY,KAGAE,IAAKmB,YAAY,YAAa,MAC9BpB,IAAOoB,YAAY,2BElBrB,ICQIC,EDNSC,EAAO,CAClBC,QAAS,WACTC,QAAS,iBACTC,WAAY,gBALI,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IAOlDC,KAAM,CACJC,KAAM,mBACNC,OAAQ,gDACRC,UAAW,WACT,IAAMC,EAAM,CACV,mBACA,sCACA,wBACA,qBACA,oBACA,mBACA,2BAEF,OAAOA,EAAIC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,UAE5CC,aAAc,4BACdC,KAAM,OACNC,QAAS,iBACTC,MAAO,QACPC,QAAS,wCAGXC,OAAQ,CACNC,MAAO,CACLC,EAAG,SAELC,cAAe,uCAIjBC,cAAe,yBACfC,cAAe,0BAIfC,kBAAmB,WACjB,IAAMC,EAAa,CACjB,oCACA,mDACA,+BACA,4CACA,gDACA,4CACA,+BACA,yDAEF,OAAOA,EAAWhB,KAAKC,MAAMD,KAAKE,SAAWc,EAAWb,UAE1Dc,UAAW,YACXC,YAAa,qBACbC,cAAe,uBACfC,cAAe,uBAEfC,QAAS,CACPC,EAAG,WACHC,WAAY,wCACZC,MAAO,gBACP3B,OAAQ,CACNc,EAAG,iBACHc,KAAM,6DAERC,IAAK,CAEHC,GAAI,mCAIRC,aAAc,oDAEdC,WAAY,SAACjC,GAAD,6BAA2BA,EAA3B,MAEZkC,MAAO,CACLA,MAAO,SACPC,OAAQ,UACRC,OAAQ,UACRC,UAAW,yBACXC,WAAY,kBACZC,MAAO,sBACPC,QAAS,gBACTC,cAAe,qCACfC,YAAa,4BACbC,YAAa,kCExFJC,EACU,OADVA,EAEJ,CAAEC,SAAU,iBAFRD,EAGD,EDOCE,EAAc,CAEzBC,SAAU,SAACC,GACTC,aAAaC,QAAQ,YAAaF,IAGpCG,UAAW,SAACC,GACVlF,IAAOmF,kBAAiB,SAACC,GACvBC,aAAahE,GACbA,EAAeiE,YAAW,WACxBF,GAAQA,EAAKG,YAAW,GAAMC,MAAK,SAACV,GAClCF,EAAYC,SAASC,MAGvBI,EAAKE,KACJ,SAIPnB,OAAQ,SAACwB,GACP,OAAOtF,EAAKsF,EAAWC,UACpBF,MAAK,SAACG,GACL,OAAOC,IAAM,CACX/F,IAAI,GAAD,OAAMX,EAAYW,IAAlB,WACHgG,OAAQ,OACRC,KAAK,2BACAL,GADD,IAEFC,SAAUC,SAIfH,MAAK,SAACO,GACL,OAAOnB,EAAYZ,MAAM,CACvBgC,MAAOP,EAAWO,MAClBN,SAAUD,EAAWC,eAK7B1B,MAAO,SAACiC,GACN,IAAIC,EAEJ,OAAO/F,EAAK8F,EAAUP,UACnBF,MAAK,SAACG,GACL,OAAO3F,IAAOmG,2BAA2BF,EAAUD,MAAOL,MAE3DH,MAAK,SAACO,GAGL,OAFAhB,aAAaC,QAAQ,MAAOoB,KAAKC,UAAUN,EAASX,KAAKkB,MACzDJ,EAAiBH,EACV/F,IAAOuG,YAAYhB,gBAE3BC,MAAK,SAACgB,GAEL,OADA5B,EAAYC,SAAS2B,GACdN,MAIbO,WAAY,SAACC,GACXC,QAAQC,IAAIF,EAAQA,EAAOG,KAAsB,wBAAhBH,EAAOG,MACpB,wBAAhBH,EAAOG,KACTC,IAAUzC,MAAM/C,EAAK0C,MAAMQ,YAAaE,GACf,wBAAhBgC,EAAOG,KAChBC,IAAUzC,MAAM/C,EAAK0C,MAAMS,YAAaC,GAExCoC,IAAUzC,MAAMqC,EAAOK,QAASrC,IAIpCR,OAAQ,SAAC8C,GACPA,EAAEC,iBAEFjH,IAAOkH,UAAU1B,MAAK,WACpBsB,IAAUxC,QAAQ,oCAAsC,CAAEK,SAAU,sBAIxEwC,eAAgB,SAAC1B,GACf,OAAKA,EAAW2B,UAGX3B,EAAW3D,MAAQ2D,EAAW3D,KAAKO,QAAU,EACzC,CAAEP,KAAM,6BAEZ2D,EAAWO,OAASP,EAAWO,MAAM3D,QAAU,EAC3C,CAAE2D,MAAO,iBAEbP,EAAWC,UAAaD,EAAW4B,QAGpC5B,EAAWC,WAAaD,EAAW4B,QAC9B,CAAE3B,SAAU,yBAEd,GALE,CAAEA,SAAU,2BATZ,CAAE0B,SAAU,iCExFZE,EAAO,CAClBC,KAAM,IACNC,IAAK,OACLjE,QAAS,SAACkE,GAAD,gBAAYH,EAAKE,IAAjB,YAA0BC,IACnCzD,MAAO,SACPC,OAAQ,UAERyD,SAAU,S,OCSGC,MAbf,YAAkD,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAOrG,EAAW,EAAXA,QACpC,OACE,mCACE,qBAAKsG,UAAY,mCAAsCtG,EAAU,sBAAwB,IAAzF,SACE,sBAAKsG,UAAU,YAAf,UACID,GAAS,oBAAIC,UAAU,OAAd,SAAuBD,IAChCD,UCyGGG,MAxGf,WAEE,IAAMC,EAAUC,cAFC,EAGmBC,qBAAWnD,aAAaoD,QAAQ,SAHnD,mBAGVC,EAHU,KAGEC,EAHF,OAIWH,mBAAS,IAJpB,mBAIVjE,EAJU,KAIFqE,EAJE,OAKaJ,oBAAS,GALtB,mBAKV1G,EALU,KAKD+G,EALC,OAMqBL,mBAAS,IAN9B,mBAMVM,EANU,KAMGC,EANH,iDASjB,WAAyBzB,GAAzB,iBAAA3G,EAAA,sDACE2G,EAAEC,iBAEIyB,EAAe9D,EAAYuC,eAAelD,IAC1C0E,EAASC,OAAOC,OAAOH,IACjBrG,QAuBVoG,EAAeC,GACfC,EAAOtG,QAAUyE,IAAUzC,MAAMsE,EAAO,GAAIjE,KAvB5C6D,GAAW,GACX3D,EACGX,OAAOA,GACPuB,MAAK,SAACsD,GACLP,GAAW,GACPO,EAAa1D,OACf0B,IAAUxC,QAAQhD,EAAK0C,MAAMO,cAAeG,GAC5C4D,EAAU,IACVD,GAAc,OAGjBU,OAAM,YAAoB,IAAjBhD,EAAgB,EAAhBA,SACR,GAAIA,EAASD,MAAQC,EAASD,KAAKe,KACjCjC,EAAY6B,WAAWV,EAASD,UAC3B,CACL2C,EAAe1C,EAASD,MACxB,IAAM6C,EAASC,OAAOC,OAAO9C,EAASD,MACtC6C,EAAOtG,QAAUyE,IAAUzC,MAAMsE,EAAO,GAAIjE,GAE9C6D,GAAW,OAzBnB,4CATiB,sBA2CjB,OAAIS,IAAMC,WAAWC,KACnBlB,EAAQmB,KAAK7B,EAAKE,KACX,MAIP,mCAEIY,EACI,cAAC,IAAD,CAAUgB,GAAG,SAEf,mCACE,cAAC,EAAD,CAAUvB,MAAQvG,EAAK0C,MAAMC,OAASzC,QAAUA,EAAhD,SACE,uBAAM6H,SAxDD,4CAwDuBvB,UAAU,mBAAtC,UACE,uBACEwB,MAAQrF,EAAO+B,OAAS,GAAKuD,SAAW,SAACvC,GAAD,OAAOsB,EAAU,2BACtDrE,GADqD,IAExD+B,MAAOgB,EAAEwC,OAAOF,UACbG,YAAY,QAAQC,KAAK,QAAQC,UAAQ,EAACC,WAAS,EAACC,aAAa,QAEpErB,EAAYxC,OAAS,gCAASwC,EAAYxC,QAC5C,uBACEsD,MAAQrF,EAAOnC,MAAQ,GAAKyH,SAAW,SAACvC,GAAD,OAAOsB,EAAU,2BACrDrE,GADoD,IAEvDnC,KAAMkF,EAAEwC,OAAOF,UACZG,YAAY,OAAOE,UAAQ,EAACE,aAAa,QAE5CrB,EAAY1G,MAAQ,gCAAS0G,EAAY1G,OAC3C,uBACEwH,MAAQrF,EAAOmD,UAAY,GAAKmC,SAAW,SAACvC,GAAD,OAAOsB,EAAU,2BACzDrE,GADwD,IAE3DmD,SAAUJ,EAAEwC,OAAOF,UAChBG,YAAY,WAAWE,UAAQ,EAACE,aAAa,QAEhDrB,EAAYpB,UAAY,gCAASoB,EAAYpB,WAC/C,uBACEkC,MAAQrF,EAAOyB,UAAY,GAAK6D,SAAW,SAACvC,GAAD,OAAOsB,EAAU,2BACzDrE,GADwD,IAE3DyB,SAAUsB,EAAEwC,OAAOF,UAChBG,YAAY,WAAWC,KAAK,WAAWC,UAAQ,EAACE,aAAa,QAEhErB,EAAY9C,UAAY,gCAAS8C,EAAY9C,WAC/C,uBACE4D,MAAQrF,EAAOoD,SAAW,GAAKkC,SAAW,SAACvC,GAAD,OAAOsB,EAAU,2BACxDrE,GADuD,IAE1DoD,QAASL,EAAEwC,OAAOF,UACfG,YAAY,UAAUC,KAAK,WAAWC,UAAQ,EAACE,aAAa,QAE/DrB,EAAY9C,UAAY,gCAAS8C,EAAY9C,WAC/C,sBAAKoC,UAAU,WAAf,UACE,wBAAQ4B,KAAK,SAAS5B,UAAU,gBAAhC,SAAkDxG,EAAK0C,MAAMC,SAC7D,eAAC,IAAD,CAAMmF,GAAK9B,EAAKtD,MAAQ8D,UAAU,WAAlC,UAA+CxG,EAAK0C,MAAMI,WAA1D,IAAyE9C,EAAK0C,MAAMA,sBCnBvF8F,MA3Ef,WAEE,IAAM9B,EAAUC,cAFA,EAGcC,oBAAS,GAHvB,mBAGT1G,EAHS,KAGA+G,EAHA,OAIUL,mBAAS,IAJnB,mBAITlE,EAJS,KAIF+F,EAJE,OAKoB7B,qBAAWnD,aAAaoD,QAAQ,SALpD,mBAKTC,EALS,KAKGC,EALH,KAmChB,OAAIW,IAAMC,WAAWC,KACnBlB,EAAQmB,KAAK7B,EAAKE,KACX,MAIP,mCAEIY,EACI,cAAC,IAAD,CAAUgB,GAAK9B,EAAKE,MAEtB,mCACE,cAAC,EAAD,CAAUK,MAAQvG,EAAK0C,MAAMA,MAAQxC,QAAUA,EAA/C,SACE,uBAAM6H,SAzClB,SAAmBrC,GACjBA,EAAEC,iBAEFsB,GAAW,GAEX3D,EACGZ,MAAMA,GACNwB,MAAK,SAACsD,GAELP,GAAW,GAEPO,EAAa1D,MAEfiD,GAAc,GACdvB,IAAUxC,QAAQhD,EAAK0C,MAAMM,QAASI,KAEN,MAA5BoE,EAAazE,MAAMwC,MACrBC,IAAUzC,MAAM/C,EAAK0C,MAAMK,MAAOK,GAEpCiC,QAAQqD,KAAKlB,OAGhBC,OAAM,SAACrC,GACN6B,GAAW,GACX3D,EAAY6B,WAAWC,OAiBWoB,UAAU,mBAAtC,UACE,uBACEwB,MAAQtF,EAAMgC,OAAS,GAAKuD,SAAW,SAACvC,GAAD,OAAO+C,EAAS,2BACpD/F,GADmD,IAEtDgC,MAAOgB,EAAEwC,OAAOF,UACbG,YAAY,QAAQC,KAAK,QAAQE,WAAS,EAACD,UAAQ,IAExD,uBACEL,MAAQtF,EAAM0B,UAAY,GAAK6D,SAAW,SAACvC,GAAD,OAAO+C,EAAS,2BACvD/F,GADsD,IAEzD0B,SAAUsB,EAAEwC,OAAOF,UAChBG,YAAY,WAAWC,KAAK,WAAWG,aAAa,MAAMF,UAAQ,IAEvE,sBAAK7B,UAAU,WAAf,UACE,wBAAQ4B,KAAK,SAAS5B,UAAU,gBAAhC,SAAkDxG,EAAK0C,MAAMA,QAC7D,eAAC,IAAD,CACEoF,GAAK9B,EAAKrD,OAAS6D,UAAU,iBAD/B,UAEGxG,EAAK0C,MAAMG,UAFd,IAE4B7C,EAAK0C,MAAMC,uBCvE5CgG,EAAc,SAACC,EAAW7F,GACrCvF,OAAOqL,UAAY9F,EACnByC,IAAUzC,MAAM6F,EAAWxF,GAE3BiC,QAAQtC,MAAM6F,EAAW7F,GACrB,CAAC,MAAO,OAAO+F,QAAQ/F,EAAMpD,WAAWoJ,MAAM,KAAKC,QAAU,IAC/DvF,aAAawF,WAAW,QACxBxF,aAAawF,WAAW,aACxBzL,OAAO0L,SAASC,KAAOnD,EAAKtD,QCZzB,SAAS0G,EAAMC,GACpB,IAAMC,EAAI,IAAIlJ,KAAKiJ,GACnB,OAAOC,EAAEC,iBAAmB,KAAOD,EAAEE,cAAgB,GAAK,IAAMF,EAAEG,aAC9D,IAAMH,EAAEI,cAAgB,IAAMJ,EAAEK,gBAAkB,IAAML,EAAEM,gBCKhE,IAAMC,EAAc,CAElBlL,GAAIA,IAEJmL,QAAS,WACP,MAAO,CAAEC,cAAetG,aAAaoD,QAAQ,eAG/CmD,WAAW,WAAD,4BAAE,WAAOzJ,GAAP,SAAAxB,EAAA,6DACVsG,QAAQqD,KAAK,iBAAkBnI,EAAKC,MAD1B,kBAIK8D,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,mBAA+BgC,EAAKtC,UAApC,iBAAwDsC,EAAK4F,IAClE5B,OAAQ,MACRC,KAAMjE,EACNuJ,QAASD,EAAYC,YACpB5F,MAAK,SAACO,GACPY,QAAQqD,KAAK,kBAAmBjE,GAChCe,IAAUxC,QAAQyB,EAASD,KAAKiB,QAASrC,MAXnC,wEAcRuF,EAAY,yBAA2B,KAAElE,SAASD,KAAKiB,QAA5C,MAdH,yDAAF,mDAAC,GAkBXwE,QAAQ,WAAD,4BAAE,WAAO1J,GAAP,SAAAxB,EAAA,6DACPsG,QAAQqD,KAAK,eAAgBnI,EAAKC,MAD3B,kBAIQ8D,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,mBAA+BgC,EAAKtC,UAApC,SACLsG,OAAQ,OACRC,KAAMjE,EACNuJ,QAASD,EAAYC,YACpB5F,MAAK,SAACO,GAGP,OAFAY,QAAQqD,KAAK,mBAAoBjE,GACjCe,IAAUxC,QAAQyB,EAASD,KAAKiB,QAASrC,GAClCqB,EAASD,KAAK0F,UAZlB,wEAeLvB,EAAY,uBAAyB,KAAElE,SAASD,KAAKiB,QAA1C,MAfN,yDAAF,mDAAC,GAmBR0E,WAAW,WAAD,4BAAE,WAAO5J,GAAP,SAAAxB,EAAA,+EAEKuF,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,mBAA+BgC,EAAKtC,UAApC,iBAAwDsC,EAAK4F,IAClE5B,OAAQ,SACRuF,QAASD,EAAYC,YACpB5F,MAAK,SAACO,GACPY,QAAQqD,KAAK,qBAAsBjE,GACnCe,IAAUxC,QAAQyB,EAASD,KAAKiB,QAASrC,MARnC,wEAWRuF,EAAY,yBAA2B,KAAElE,SAASD,KAAKiB,QAA5C,MAXH,wDAAF,mDAAC,GAeX2E,mBAAoB,SAACC,EAAYzG,GAC/B,IACE,OAAOiG,EAAYlL,GAChB2L,WADI,oBACqBD,EADrB,WAEJE,QAAQ,QAAS,QACjBA,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAMC,EAAQ,GACdD,EAASE,SAAQ,SAACC,GAChB,IAAMzE,EAAKyE,EAAQzE,GACb5F,EAAOqK,EAAQpG,OACfqG,EAAWtK,EAAKsK,UAAY,YAElCH,EAAMG,GAAYH,EAAMG,IAAa,GACrCH,EAAMG,GAAUhD,KAAhB,yBACE1B,MACG5F,GAFL,IAGEtC,UAAWoM,EACXS,UAAW1B,EAA8B,IAAzB7I,EAAKuK,UAAUC,SAC/BC,SAAUN,EAAMvE,IAAO,aAElBuE,EAAMvE,MAEfvC,EAAK8G,EAAK,WAAiB,OAE/B,MAAOhF,GACPiD,EAAY,4BAA6BjD,KAI7CuF,WAAY,SAAC1K,GACX,IACE,OAAOsJ,EAAYlL,GAChBuM,IADI,oBACc3K,EAAKtC,UADnB,kBACwCsC,EAAK4F,KACjDgF,OAAO,CACNC,QAAS7K,EAAK6K,QACdC,SAAU9K,EAAK8K,WAEnB,MAAO3F,GACPiD,EAAY,qCAAsCjD,MAMzCmE,IC3EAyB,MAjCf,WAAkC,IAAD,EAEW1E,oBAAS,GAFpB,mBAExB2E,EAFwB,KAETC,EAFS,KAIzB1H,EAAO4D,IAAMC,WAAWC,IAE9B,OACE,qCACE,wBAAQpB,UAAU,gBAAgBiF,QAAU,kBAAMD,GAAiB,IAAnE,SACE,mBAAGhF,UAAU,iBAAb,wBAGA+E,GACA,qCACE,qBAAI/E,UAAU,0BAA0BiF,QAAU,kBAAMD,GAAiB,IAAzE,UACE,oBAAIhF,UAAU,gBAAd,SACE,sBAAMA,UAAU,mBAAhB,SAAqCxG,EAAKyC,WAAWqB,EAAKY,WAE5D,oBAAI8B,UAAU,gBAAd,SACE,wBAAQA,UAAU,sCAAsCiF,QAAUnI,EAAYV,OAA9E,SAGI5C,EAAK0C,MAAME,cAInB,qBAAK4D,UAAU,WAAWiF,QAAU,kBAAMD,GAAiB,aCAtDE,MA5Bf,YAAmD,IAAhCC,EAA+B,EAA/BA,eAAgBC,EAAe,EAAfA,YAEjC,OACE,mCACE,qBAAKpF,UAAU,eAAf,SACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,yBAAyBiF,QAAU,kBAAME,GAAiBC,IAAvE,SACE,mBAAGpF,UAAU,iBAAb,oBAEF,oBAAIA,UAAU,QAAd,SACE,6BACE,cAAC,EAAD,kBCNVqF,EAAiB,CAErBlN,GAAIA,IAEJmL,QAAS,WACP,MAAO,CAAEC,cAAetG,aAAaoD,QAAQ,eAG/CiF,WAAY,SAACzB,EAAYzG,GACvB,IACE,OAAOiI,EAAelN,GACnBuM,IADI,oBACcb,IAClBG,YAAW,SAACU,GACX,IAAMjJ,EAAUiJ,EAAI1G,OACpBvC,EAAQkE,GAAK+E,EAAI/E,GAEjBd,QAAQqD,KAAR,8BAAqCzG,EAAQzB,KAA7C,MAEAoD,EAAK3B,MAET,MAAOyD,GACPiD,EAAY,8BAA+BjD,KAI/CqG,kBAAmB,SAACnI,GAClB,IACE,OAAOiI,EAAelN,GACnB2L,WADI,aAEJ0B,MAAM,QAAS,iBAAkBtN,IAAOuG,YAAYD,KAEpDwF,YAAW,SAACyB,GAEX,IAAMC,EAAW,GACjBD,EAAYtB,SAAQ,SAACO,GACnB,IAAMiB,EAAcjB,EAAI1G,OACxB0H,EAASrE,KAAK,CACZ1B,GAAI+E,EAAI/E,GACR3F,KAAM2L,EAAY3L,KAClB4L,OAAQD,EAAYC,OACpBrK,cAAeoK,EAAYpK,cAC3BsK,MAAOF,EAAYE,WAKvBzI,EAAKsI,GAEL7G,QAAQqD,KAAK,iBAAkBwD,EAASnL,WAE5C,MAAO2E,GACPiD,EAAY,4BAA6BjD,KAI7C4G,cAAc,WAAD,4BAAE,WAAOrK,GAAP,SAAAlD,EAAA,6DACbsG,QAAQqD,KAAK,oBAAqBzG,GADrB,kBAIEqC,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,mBAA+B0D,EAAQkE,IAC5C5B,OAAQ,MACRC,KAAMvC,EACN6H,QAAS+B,EAAe/B,YACvB5F,MAAK,SAACqI,GACP/G,IAAUxC,QAAQuJ,EAAO/H,KAAKiB,QAASrC,GACvCiC,QAAQqD,KAAK,+BAAgC6D,MAXpC,wEAcX5D,EAAY,+BAAD,MAdA,yDAAF,mDAAC,GAkBd6D,WAAW,WAAD,4BAAE,WAAOvK,GAAP,SAAAlD,EAAA,+EAEKuF,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,WACLgG,OAAQ,OACRC,KAAMvC,EACN6H,QAAS+B,EAAe/B,YACvB5F,MAAK,SAACqI,GAEP,OADA/G,IAAUxC,QAAQuJ,EAAO/H,KAAKiB,QAASrC,GAChCmJ,EAAO/H,KAAKvC,WATb,wEAYR0G,EAAY,4BAAD,MAZH,wDAAF,mDAAC,GAgBX8D,cAAc,WAAD,4BAAE,WAAOxK,GAAP,SAAAlD,EAAA,+EAEEuF,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,mBAA+B0D,EAAQkE,IAC5C5B,OAAQ,SACRuF,QAAS+B,EAAe/B,YACvB5F,MAAK,SAACqI,GACP/G,IAAUxC,QAAQuJ,EAAO/H,KAAKiB,QAASrC,GACvCiC,QAAQqD,KAAK,6BAA8B6D,MARlC,wEAWX5D,EAAY,4BAAD,MAXA,wDAAF,mDAAC,GAed+D,eAAe,WAAD,4BAAE,WAAOC,GAAP,SAAA5N,EAAA,+EAECuF,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,gBACLgG,OAAQ,OACRC,KAAM,CAAEE,MAAOiI,GACf7C,QAAS+B,EAAe/B,YACvB5F,MAAK,SAACqI,GACP,OAAOA,EAAO/H,KAAKV,QART,wEAWZ6E,EAAY,6BAAD,MAXC,wDAAF,mDAAC,GAefiE,iBAAiB,WAAD,4BAAE,WAAO3K,EAAS6D,GAAhB,SAAA/G,EAAA,+EAEDuF,IAAM,CACjB/F,IAAKX,EAAYW,IAAZ,mBAA+B0D,EAAQkE,GAAvC,SACL5B,OAAQ,OACRuF,QAAS+B,EAAe/B,UACxBtF,KAAM,CAAEsB,SAAUA,KACjB5B,MAAK,SAACqI,GACP/G,IAAUxC,QAAQuJ,EAAO/H,KAAKiB,QAASrC,GACvCiC,QAAQqD,KAAK,8BAA+B6D,MAThC,wEAYd5D,EAAY,6BAAD,MAZG,wDAAF,qDAAC,IAiBJkD,I,OC7HAgB,MAjBf,SAA2BtM,GAKzB,OAJKA,EAAKtC,YACRuH,IAAUzC,MAAM,iBAAkBK,GAClCiC,QAAQC,IAAI/E,IAEP,CACLC,KAAMD,EAAKC,MAAQ,GACnB4K,QAAS7K,EAAK6K,UAAW,EACzBjF,GAAI5F,EAAK4F,IAAM,KACf2E,UAAWvK,EAAKuK,WAAa,IAAI1K,KACjC0M,MAAOvM,EAAKuM,OAAS,EACrBjC,SAAUtK,EAAKsK,UAAY,KAC3BkC,YAAaxM,EAAKwM,aAAe,GACjC9O,UAAWsC,EAAKtC,YCsBL+O,MAlCf,YAA8E,IAArDC,EAAoD,EAApDA,iBAAkBC,EAAkC,EAAlCA,oBAAqBC,EAAa,EAAbA,UAExDlL,EAAU0F,qBAAWyF,IAE3B,OACEH,EAAiBI,aACb,sBAAMtF,SAAWkF,EAAiBK,aAAe9G,UAA4B,SAAd2G,EAAuB,gBAAkB,GAAxG,SACA,uBACE3G,UAAU,2BAA2B8B,WAAS,EAC9CN,MAAQiF,EAAiBM,YACzBC,SAAyB,SAAdL,EACXM,OAAS,kBAAMR,EAAiBS,iBAAgB,IAChDzF,SAAW,SAACvC,GAAD,OAAOuH,EAAiBU,eAAejI,EAAEwC,OAAOF,YAG7D,sBAAKxB,UAAU,WAAf,UACA,oBAAIA,UAAU,iBAAiBiF,QAAU,kBAAMwB,EAAiBS,iBAAgB,IAAhF,SAA0FT,EAAiBM,cAEzGtL,EAAQF,cACJ,wBACAyE,UAAU,gEACViF,QAAU,kBAAMyB,GAAoB,IACpC3G,MAAQvG,EAAKgC,cAHb,uBAKA,wBACAwE,UAAU,gEACViF,QAAU,kBAAMyB,GAAoB,IACpC3G,MAAQvG,EAAK+B,cAHb,yC,OCaC6L,MAvCf,YAA+F,IAA7EtH,EAA4E,EAA5EA,SAAUuH,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAU/N,EAAW,EAAXA,QAEjF,OACE,mCAEI2N,EAAY,qCACR,qBAAKrH,UAAY,kBAAjB,SACE,sBAAKA,UAAatG,EAAU,sBAAwB,GAApD,UACE,qBAAKsG,UAAU,gBAAf,SACIF,IAEJ,sBAAKE,UAAU,eAAf,UAEIsH,GACA,wBACErC,QAAUuC,EACVxH,UAAU,oDACV0H,wBAA0B,CAAEC,OAAQL,KAItCC,GACA,wBACEtC,QAAUwC,EACVzH,UAAU,uDACV0H,wBAA0B,CAAEC,OAAQJ,aAM9C,qBAAKvH,UAAU,WAAWiF,QAAUwC,OAEpC,MCkFGG,MA7Gf,YAAiE,IAA3CC,EAA0C,EAA1CA,QAAS9N,EAAiC,EAAjCA,KAAMsN,EAA2B,EAA3BA,UAAWS,EAAgB,EAAhBA,aAAgB,EAEhC1H,oBAAS,GAFuB,mBAEvD1G,EAFuD,KAE9C+G,EAF8C,OAGxBL,mBAAS,IAHe,mBAGvD2H,EAHuD,KAG1CC,EAH0C,OAI9B5H,mBAASrG,EAAKyK,UAAY,IAJI,mBAIvDA,EAJuD,KAI7CyD,EAJ6C,OAK9B7H,mBAASrG,EAAKC,MAAQ,IALQ,mBAKvDkO,EALuD,KAK7CC,EAL6C,OAM9B/H,mBAASrG,EAAKwM,aAAe,IANC,mBAMvD6B,EANuD,KAM7CC,EAN6C,KAQxD5M,EAAU0F,qBAAWyF,IARmC,SAgB/C0B,EAhB+C,8EAgB9D,WAAyBpJ,GAAzB,SAAA3G,EAAA,6DACE2G,EAAEC,iBAEFsB,GAAW,GAHb,SAKQ4C,EAAYG,WAAZ,2BAA4BzJ,GAA5B,IAAkCC,KAAMkO,EAAU3B,YAAa6B,KALvE,OAOE3H,GAAW,GAEXqH,GAAa,GATf,4CAhB8D,kEA4B9D,WAA8BS,GAA9B,SAAAhQ,EAAA,6DACEgQ,EAAQ3D,SAAW2D,EAAQ3D,QAD7B,SAEQvB,EAAYoB,WAAW8D,GAF/B,4CA5B8D,kEAiC9D,WAA4BrJ,GAA5B,SAAA3G,EAAA,6DACE2G,EAAEC,iBADJ,SAGQkE,EAAYI,QAAQ4C,EAAiB,CACzCrM,KAAM+N,EAAa1D,SAAUtK,EAAK4F,GAAI2G,MAAOvM,EAAKuM,MAAQ,EAAG7O,UAAWgE,EAAQkE,MAJpF,OAOET,EAAEwC,OAAO,GAAGF,MAAQ,GAPtB,4CAjC8D,sBA2C9D,OAjCAgH,qBAAU,WACRL,EAAYpO,EAAKC,MAAQ,IACzBiO,EAAYlO,EAAKyK,UAAY,IAC7B6D,EAAYtO,EAAKwM,aAAe,MAC/B,CAACxM,IA8BF,qCACE,wBAAQiG,UAAY6H,EAAQ7H,UAAYiF,QAAU,kBAAM6C,GAAa,IAArE,SAA+ED,EAAQrO,OACvF,eAAC,EAAD,CACE6N,UAAYA,EACZ3N,QAAUA,EACV8N,SAAWc,EACXb,SAAW,kBAAMK,GAAa,IAC9BR,SAAW9N,EAAKO,KAAKU,KAAO,4CAC5B8M,aAAe/N,EAAKO,KAAKW,QAAU,8CANrC,UAQE,oBAAIsF,UAAU,oBAAd,SAAoCvE,EAAQzB,OAC5C,uBAAMuH,SAAW+G,EAAjB,UACE,gCACE,gCAAS9O,EAAKO,KAAKC,OACnB,uBACEwH,MAAQ0G,EAAWrG,UAAQ,EAAC4G,UAAY,EACxC9G,YAAcnI,EAAKO,KAAK2O,MACxBjH,SAAW,SAACvC,GAAD,OAAOiJ,EAAYjJ,EAAEwC,OAAOF,aAG3C,gCACE,gCAAShI,EAAKO,KAAKY,QACnB,uBACE6G,MAAQ4G,EACRpI,UAAU,uBACV2B,YAAcnI,EAAKO,KAAKa,QACxB6G,SAAW,SAACvC,GAAD,OAAOmJ,EAAYnJ,EAAEwC,OAAOF,gBAK7C,qBAAIxB,UAAU,4BAAd,WAEKwE,GAAY,IAAIvL,KAAI,SAAC0P,GAAD,OACnB,qBAAmB5I,MAAQ4I,EAAIrE,UAAYtE,UAAU,QAArD,UACE,wBAAOA,UAAU,OAAjB,UACE,uBACE4B,KAAK,WAAWgD,QAAU+D,EAAI/D,QAC9BjF,GAAKgJ,EAAIhJ,GACTK,UAAU,cACVyB,SAAW,kBApFiC,2CAoF3BmH,CAAcD,MAEjC,2BAEF,sBAAM3I,UAAU,OAAhB,SAAyB2I,EAAI3O,SAVrB2O,EAAIhJ,OAclB,6BACE,uBAAM4B,SA7F8C,4CA6FpD,UACE,gCAAS/H,EAAKgL,WACd,uBACE/C,SAAW,SAACvC,GAAD,OAAO8I,EAAe9I,EAAEwC,OAAOF,QAC1CG,YAAcnI,EAAKO,KAAKS,aACxBwF,UAAU,cACV6B,UAAQ,EAAC4G,UAAY,QAPnB,yBCuBHI,MAnHf,SAASA,EAAT,GAAiC,IAAhB9O,EAAe,EAAfA,KAAMuM,EAAS,EAATA,MAAS,EAEElG,mBAASrG,EAAKyK,UAAY,IAF5B,mBAEvBA,EAFuB,KAEbyD,EAFa,OAGI7H,oBAAS,GAHb,mBAGvBiH,EAHuB,KAGZS,EAHY,OAIU1H,mBAASrG,EAAK8K,WAAY,GAJpC,mBAIvBiE,EAJuB,KAITC,EAJS,KAMxBtN,EAAU0F,qBAAWyF,IAErBoC,EAAaxE,EAASyE,QAAO,SAACvN,GAAD,OAAQA,EAAEkJ,WAASrK,QAAU,EAE1D2O,EAAanP,EAAK6K,QAAWnJ,EAAQF,cAAgB,OAAS,SAAY,GAE1E4N,GAAsB1N,EAAQF,cAAgBiJ,EAASjK,OAASyO,GAAc,GAAK,YAZ3D,4CAkB9B,WAAgCjP,GAAhC,SAAAxB,EAAA,6DACEwB,EAAK6K,SAAW7K,EAAK6K,QAEjB7K,EAAK6K,UAGP7K,EAAK8K,UAAW,GANpB,SAQQxB,EAAYoB,WAAW1K,GAR/B,4CAlB8B,kEAiC9B,WAA+BqP,GAA/B,SAAA7Q,EAAA,sDAGEwQ,EAAgBK,GAHlB,4CAjC8B,kEAuC9B,sBAAA7Q,EAAA,0DACMvB,OAAOuI,QAAQ/F,EAAKO,KAAKE,QAD/B,gCAGUoJ,EAAYM,WAAW5J,GAHjC,4CAvC8B,sBA8C9B,OAhCAyO,qBAAU,WACRP,EAAYlO,EAAKyK,UAAY,MAC5B,CAACzK,EAAKyK,WA+BP,qBAAIxE,UAAYkJ,EAAY,QAAUnJ,MAAQhG,EAAKuK,UAAnD,UACE,sBAAKtE,UAAU,4BAAf,UACE,wBACEA,UAAY,gEAAkE8I,EAAe,YAAc,IAAMK,EACjHlE,QAAU,kBAnDY,2CAmDNoE,EAAgBP,IAFlC,2BAMA,wBAAO9I,UAAU,OAAjB,UACE,uBACE4B,KAAK,WACL5B,UAAU,cACV4E,QAAU7K,EAAK6K,QACfnD,SAAW,kBA5DS,2CA4DH6H,CAAgBvP,MAEnC,2BAEF,yBACEiG,UAAY,kBAAoBjG,EAAK6K,QAAU,IAC/CK,QAAU,kBAAM6C,GAAa,IAF/B,UAIE,sBAAM9H,UAAU,YAAhB,SAA8BjG,EAAKC,OACjCwK,EAASjK,OAAS,GAAK,wBACvByF,UAAU,0BAA0BD,MAAQvG,EAAK0B,cAD1B,cAErB8N,EAFqB,MAEJxE,EAASjK,OAASyO,EAFd,OAGvBjP,EAAKwM,aAAe,uBAAOvG,UAAU,cAAjB,SAAiCjG,EAAKwM,iBAG9D,uBAAMvG,UAAU,QAAhB,UACE,wBACEA,UAAU,6DACViF,QAAU,kBA9EU,0CA8EJsE,CAASxP,IAF3B,oBAKA,cAAC,EAAD,CACE8N,QAAU,CACR7H,UAAW,6DACXxG,KAAM,QACJO,KAAI,eAAQA,GAChBsN,UAAYA,EACZS,aAAeA,UAKnBgB,GACA,mCAEK/O,EAAKuM,MAAQ1J,GAAuB,mCACnC,oBAAIoD,UAAU,WAAWwJ,eAAelD,EAAxC,SAEI9B,EAASvL,KAAI,SAACwQ,GAAD,OACX,cAACZ,EAAD,CAEE9O,KAAO0P,EACPnD,MAAQA,EAAQ,GAFVmD,EAAE9J,iBCKf+J,MAzGf,YAAwD,ICHjBC,EDGnBlO,EAAmC,EAAnCA,QAASoI,EAA0B,EAA1BA,WAAY+F,EAAc,EAAdA,WAAc,EAEbxJ,mBAAS,IAFI,mBAE9CyJ,EAF8C,KAEhCC,EAFgC,OAGnB1J,mBAAS,IAHU,mBAG9CuG,EAH8C,KAGnCoD,EAHmC,OAIX3J,mBAAS3E,EAAQF,eAJN,mBAI9CA,EAJ8C,KAI/ByO,EAJ+B,OAKnB5J,oBAAS,GALU,mBAK9CiH,EAL8C,KAKnCS,EALmC,OAMf1H,mBAAS3E,EAAQzB,MAAQR,EAAKG,YANf,mBAM9CoN,EAN8C,KAMjCI,EANiC,OAOb/G,oBAAS,GAPI,mBAO9CyG,EAP8C,KAOhCK,EAPgC,KAS/C+C,EAAOJ,EAAaZ,QAAO,SAAClP,GAAD,OAAWA,EAAK6K,WAC3CvJ,EAAYwO,EAAaZ,QAAO,SAAClP,GAAD,QAAYA,EAAK6K,WAIjDsF,EAAeC,mBAAQ,WAC3B,OAAO3Q,EAAK2B,sBACX,CAAC8O,EAAK1P,SAEHL,EAAYiQ,mBAAQ,WAExB,OADAH,EAAiBvO,EAAQF,eAClB/B,EAAKO,KAAKG,cAChB,CAACuB,EAAQkE,KAERuI,EAAW,GAvBsC,4CAuCrD,WAAwBhJ,GAAxB,SAAA3G,EAAA,6DACE2G,EAAEC,iBACF4K,EAAa,QACblL,QAAQC,IAAIuH,EAAiB,CAC3BrM,KAAMkO,EACNzQ,UAAWgE,EAAQkE,MALvB,SASuB0D,EAAYI,QAAQ4C,EAAiB,CACxDrM,KAAMkO,EACNzQ,UAAWgE,EAAQkE,MAXvB,cAaET,EAAEwC,OAAO,GAAGF,MAAQ,GACpBuI,EAAa,IAdf,4CAvCqD,kEA4DrD,WAAoCxO,GAApC,SAAAhD,EAAA,6DACEyR,EAAiBzO,GADnB,SAEQoJ,EAAO,CAAEpJ,kBAFjB,4CA5DqD,kEAiErD,WAA4B6O,GAA5B,SAAA7R,EAAA,sEACQoM,EAAO,CAAEkB,MAAOuE,IADxB,4CAjEqD,kEAqErD,WAA6BlL,GAA7B,SAAA3G,EAAA,6DACE2G,EAAEC,iBAEF4K,EAAa,QAHf,SAIQpF,EAAO,CAAE3K,KAAM+M,IAJvB,OAKEG,GAAgB,GAChB6C,EAAa,IANf,4CArEqD,+BA8EtCpF,EA9EsC,8EA8ErD,WAAuB0F,GAAvB,SAAA9R,EAAA,sEACe8M,EAAeS,cAAf,2BAAkCrK,GAAY4O,IAD7D,oFA9EqD,sBAkFrD,OAzDA7B,qBAAU,WACRrB,EAAe1L,EAAQzB,QACtB,CAACyB,EAAQzB,OAEZwO,qBAAU,WACR,IAAM8B,EAAqBjF,EAAeC,WAAWzB,EAAY+F,GAC3DW,EAAmBlH,EAAYO,mBAAmBC,EAAYiG,GAEpE,OAAO,WACLQ,GAAsBA,IACtBC,GAAoBA,OAErB,CAAC1G,ICxCiC8F,EDqFhB,CACnBM,OACA5O,YACAoI,QArFmD,4CAsFnD+G,eA9BF,SAAyBtL,GACvBgJ,EAAWhJ,EAAEwC,OAAOF,OA8BpBjG,gBACAmL,oBAxFmD,4CAyFnDW,YACA6C,eACApC,eACAnB,YACAzM,YACAuB,QAAS,CACPsL,cACAD,aAhGiD,4CAiGjDD,eACAK,kBACAC,iBACAsD,YApGiD,8CCAnD,qCACE,cAAC,EAAD,CACEhE,iBAAmBkD,EAAElO,QAAUiL,oBAAsBiD,EAAEjD,oBACvDC,UAAYgD,EAAEhD,YAGhB,+BACIgD,EAAEM,KAAK1P,OACPoP,EAAEM,KAAKhR,KAAI,SAACc,GAAD,OACT,cAAC,EAAD,CAEEA,KAAOA,EACPuM,MAAQ,GAFFvM,EAAK4F,OAIZgK,EAAEtO,UAAUd,OAAS,6BAAI,oBAAIyF,UAAU,2BAAd,SAA2C2J,EAAEO,iBAA2B,GAEpGP,EAAEpO,eAAiBoO,EAAEtO,UAAUpC,KAAI,SAACc,GAAD,OACnC,cAAC,EAAD,CAEEA,KAAOA,GADDA,EAAK4F,OAIf,oBAAIK,UAAU,OAAd,SACE,uBAAMuB,SAAWoI,EAAElG,QACjBzD,UAAY,qCAAuD,SAAhB2J,EAAEhD,UAAuB,gBAAkB,IADhG,UAGE,mBAAwC3G,UAAU,qCAAlD,iBACA,mBAAGA,UAAU,6BAAb,iBACA,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,uBACEyB,SAAWkI,EAAEa,eAAiBxK,UAAU,kBACxC2B,YAAcgI,EAAEzP,UAAY2H,UAAQ,EACpCmF,SAA2B,SAAhB2C,EAAEhD,UACb5E,aAAa,wBC9BhB2I,MAVf,YAAyC,IAAnBvF,EAAkB,EAAlBA,eACpB,OACE,mCACE,qBAAKnF,UAAU,qBAAf,SACE,wBAAQA,UAAU,4CAA4CiF,QAAU,kBAAME,GAAe,IAA7F,SAAuG3L,EAAKiC,QAAQE,kB,OC4B7GgP,MA/Bf,YAAsD,IAAtBlP,EAAqB,EAArBA,QAASmP,EAAY,EAAZA,SAAY,EAETxK,oBAAS,GAFA,mBAE5C2E,EAF4C,KAE7BC,EAF6B,KAInD,OACE,qCACE,wBAAQhF,UAAU,2CAA2CiF,QAAU,kBAAMD,GAAiB,IAA9F,SACE,mBAAGhF,UAAU,6BAAb,0BAGA+E,GACA,qCACE,qBAAI/E,UAAU,oBAAoBiF,QAAU,kBAAMD,GAAiB,IAAnE,UACE,oBAAIhF,UAAU,gBAAd,SACE,yBAAQA,UAAU,sCAAsCiF,QAAU,kBAAM2F,EAAS,SAAUnP,IAA3F,UACE,mBAAGuE,UAAU,6BAAb,oBADF,IACwDxG,EAAKiC,QAAQxB,OAAOc,OAG9E,oBAAIiF,UAAU,gBAAd,SACE,yBAAQA,UAAU,sCAAsCiF,QAAU,kBAAM2F,EAAS,QAASnP,IAA1F,UACE,mBAAGuE,UAAU,6BAAb,4BADF,IACgExG,EAAKiC,QAAQG,cAIjF,qBAAKoE,UAAU,WAAWiF,QAAU,kBAAMD,GAAiB,a,SCMtD6F,MA9Bf,YAAoD,IAA5BC,EAA2B,EAA3BA,iBAAkBjF,EAAS,EAATA,MAAS,EAEHzF,oBAAS,GAFN,mBAE1C2K,EAF0C,KAEzBC,EAFyB,KASjD,OACE,mCACE,uBAAMhL,UAAU,WAAhB,UACE,wBAAQA,UAAU,sBAAsBiF,QAAU,kBAAM+F,GAAmB,IAA3E,SACE,sBAAMhL,UAAU,kBAAkBiL,MAAQ,CAAEC,gBAAiBrF,OAE7DkF,EACA,sBAAK/K,UAAU,cAAf,UACE,qBAAKA,UAAU,WAAWiF,QAAU,kBAAM+F,GAAmB,MAC7D,cAAC,IAAD,CACEnF,MAAQA,EACRiF,iBAhBZ,SAAkBK,GAChBH,GAAmB,GACnBF,EAAiBK,EAAYC,WAiBrB,SCgIGC,MAxIf,YAAsD,IAA9BxH,EAA6B,EAA7BA,WAAYyH,EAAiB,EAAjBA,cAAiB,EAEjBlL,mBAAS,IAFQ,mBAE5CuG,EAF4C,KAEjCoD,EAFiC,OAGnB3J,mBAAS,IAHU,mBAG5CsF,EAH4C,KAGlC6F,EAHkC,OAKPnL,mBAAS,IALF,mBAK5CoL,EAL4C,KAK5BC,EAL4B,cAiCpCxF,EAjCoC,8EAiCnD,WAA8BxK,GAA9B,SAAAlD,EAAA,0DACMvB,OAAOuI,QAAQ/F,EAAKiC,QAAQxB,OAAO4B,MADzC,uBAEIkO,EAAatO,EAAQkE,IAFzB,SAGU0F,EAAeY,cAAcxK,GAHvC,OAII6P,EAAc,IACdvB,EAAa,IALjB,4CAjCmD,sBA0CnD,SAASH,EAAYnS,GACfA,IAAcoM,GAGlByH,EAAc7T,GA9CmC,4CAiDnD,WAA4BgE,EAAS2O,GAArC,eAAA7R,EAAA,sEACuB8M,EAAeS,cAAf,2BAChBrK,GADgB,IAEnBoK,MAAOuE,KAHX,OACQrE,EADR,OAKElH,QAAQC,IAAI,SAAUiH,GALxB,4CAjDmD,+BAyDpC6E,EAzDoC,gFAyDnD,WAAyBc,EAAYjQ,GAArC,iBAAAlD,EAAA,2DACUmT,EADV,OAES,WAFT,OAKS,UALT,uCAGYzF,EAAcxK,GAH1B,iDAMY0K,EAAYwF,OAAO,uBAN/B,SAOyBtG,EAAea,eAAeC,GAPvD,UAOY7I,EAPZ,+BASQ0B,IAAUzC,MAAM/C,EAAKwC,cACrB6C,QAAQtC,MAAM,UAAWe,GAVjC,4CAaY+H,EAAee,iBAAiB3K,EAAS6B,EAAKgC,UAb1D,yFAzDmD,sBA6EnD,OAtEAkJ,qBAAU,WACR,IAAMoD,EAAsBvG,EAAeE,mBAAkB,SAACsG,GAC5D,IAAMC,EAjBZ,SAAyBrU,EAAWiO,GAElC,OAAIjO,GAAaiO,EAASuD,QAAO,SAACU,GAAD,OAAOA,EAAEhK,KAAOlI,KAAW8C,OACnD9C,EAEF,GAYiBsU,CAAelI,EAAYgI,GAC/CC,GAAeR,EAAcQ,GAC7BP,EAAYM,MAGd,OAAO,WACLD,GAAuBA,OAExB,IA6DD,qCACE,oBAAI5L,UAAU,eAAd,SAA+BxG,EAAKiC,QAAQC,IAC5C,qBAAIsE,UAAU,4BAAd,UACE,qBAA0BA,UAAY,8BAAgC6D,IAAerE,EAAKI,SAAW,YAAc,IAAnH,iCAEE,wBAAQI,UAAU,qCAAqCiF,QAAU,kBAAM2E,EAAWpK,EAAKI,WAAvF,SAAqGpG,EAAKqB,OAAOC,MAAMC,MAF/GyE,EAAKI,UAKb8F,EAASzM,KAAI,SAAC+S,GAAD,OACX,qBAEEhM,UAAY,8BAAgC6D,IAAemI,EAAKrM,GAAK,YAAc,KAAOgH,IAAcqF,EAAKrM,GAAK,gBAAkB,IAFtI,UAIE,cAAC,EAAD,CAAqBlE,QAAUuQ,EAAOpB,SAAWA,IACjD,cAAC,EAAD,CAAa/E,MAAQmG,EAAKnG,MAAQiF,iBAAmB,SAAC5L,GAAD,OA5Fd,6CA4FqBuL,CAAYuB,EAAM9M,MAC9E,yBAAQc,UAAU,qCAAqCiF,QAAU,kBAAM2E,EAAWoC,EAAKrM,KAAvF,UACIqM,EAAKhS,KAELgS,EAAKpG,QACL,mBACE5F,UAAU,uCACVD,MAAQvG,EAAKyB,cAFf,iCATE+Q,EAAKrM,OAmBjB,qBAAsBK,UAAU,6BAAhC,UACE,wBAAQA,UAAU,2CAAlB,SACE,uBAAOiM,QAAQ,oBAAoBjM,UAAU,UAA7C,SACE,mBAAGA,UAAU,6BAAb,qBAGJ,sBACEuB,SA/FV,SAAwBrC,GACtBA,EAAEC,iBAEF4K,EAAa,OAEb1E,EACGW,WAAW,CAAEhM,KAAMwR,EAAgB3F,MAAOjJ,IAC1Cc,MAAK,SAACwO,GACLT,EAAkB,IAClB1B,EAAa,IACbuB,EAAcY,EAAKvM,QAsFfK,UAAY,wBAAwC,QAAd2G,EAAsB,gBAAkB,IAFhF,SAIE,uBACE3G,UAAU,uBACVyB,SAAW,SAACvC,GAAD,OAAOuM,EAAkBvM,EAAEwC,OAAOF,QAC7CK,UAAQ,EAAC4G,UAAU,IACnBzB,SAAyB,QAAdL,EACX5E,aAAa,MACbP,MAAQgK,EACR7L,GAAG,oBACHgC,YAAcnI,EAAKiC,QAAQK,IAAIC,SAlB7B,sBCvHVoQ,GAAgB,CAEpBhU,GAAIA,IAEJmL,QAAS,WACP,MAAO,CAAEC,cAAetG,aAAaoD,QAAQ,eAG/C+L,UAAW,SAACC,EAAWjP,GACrB,IACE,IACIkP,EADEC,EAAiBJ,GAAchU,GAAGqU,gBAAgB,SAExD,OAAQH,GACN,KAAK7M,EAAKI,SACR0M,EAAQC,EACL/G,MAAM,UAAW,MAAM,GACvBzB,QAAQ,YAAa,QACxB,MACF,QAGE,OAFA/E,IAAUzC,MAAM/C,EAAKwB,eACrBoC,EAAK,IACE,aAGX,GAAIkP,EAEF,OAAOA,EAAMtI,YAAW,SAACC,GAEvB,IAAMC,EAAQ,GACdD,EAASE,SAAQ,SAACO,GAChB,IAAM+H,EAAW/H,EAAI1G,OAErBkG,EAAM7C,KAAN,aACE1B,GAAI+E,EAAI/E,IACL8M,OAIPrP,EAAK8G,GAELrF,QAAQqD,KAAK,mBAAoBgC,EAAM3J,WAG3C,MAAO2E,GACPiD,EAAY,6BAA8BjD,MAKjCiN,MCjDAO,OAJf,SAAsB7I,GACpB,MAAO,CAACrE,EAAKI,UAAU0C,QAAQuB,IAAe,GC+CjC8I,OA5Cf,YAAkC,IAAf9I,EAAc,EAAdA,WAAc,EAEDzD,oBAAS,GAFR,mBAEfK,GAFe,aAGOL,mBAAS,IAHhB,mBAGxBwM,EAHwB,KAGXC,EAHW,KAKzB3C,EAAeC,mBAAQ,WAC3B,OAAO3Q,EAAK2B,sBACX,IAiBH,OAfAqN,qBAAU,WACR,GAAIkE,GAAY7I,GAAa,CAE3B,IAAMyG,EAAqB6B,GAAcC,UAAUvI,GAAY,SAACK,GAC9D2I,EAAe3I,GACfzD,GAAW,MAGb,OAAO,WACL6J,GAAsBA,QAIzB,CAACzG,IAGF,qCACE,qBAAK7D,UAAU,WAAf,SACE,oBAAIA,UAAU,iBAAd,SAAiCxG,EAAKqB,OAAOC,MAAMC,MAErD,6BAEI6R,EAAYrS,OACVqS,EAAY3T,KAAI,SAACwQ,GAEjB,OADA5K,QAAQC,IAAI,YAAa2K,GAClB,cAAC,EAAD,CAAmB1P,KAAO0P,EAAInD,MAAQ,GAA1BmD,EAAE9J,OAErB,6BAAI,oBAAIK,UAAU,2BAAd,SAA2CkK,YCzB9CtD,GAAiB1F,IAAM4L,cAAc,IAsDnCC,OAnDf,WACE,IAAM7M,EAAUC,cACR6M,EAAoBC,cAApBD,gBAFU,EAIkB5M,mBAAS4M,GAAmB,IAJ9C,mBAIXnJ,EAJW,KAICyH,EAJD,OAKYlL,mBAAS,IALrB,mBAKX3E,EALW,KAKFmO,EALE,OAMoBxJ,oBAAUpJ,OAAOC,eANrC,mBAMXmO,EANW,KAMED,EANF,KAelB,OAPAqD,qBAAU,WACJ3E,IAAeqJ,OAAOF,IACxB9M,EAAQmB,KAAK7B,EAAK/D,QAAQoI,MAE3B,CAAEA,IAGA3C,IAAMC,WAAWC,IAMpB,qCACE,cAAC,EAAD,CAAQ+D,eAAiBA,EAAiBC,YAAcA,IACxD,sBAAKzF,GAAG,WAAWK,UAAaoF,EAAc,GAAK,cAAnD,UACE,qBAAKpF,UAAY,oBAAjB,SACE,qBAAKA,UAAY,0BAAjB,SACE,cAAC,EAAD,CACE6D,WAAaA,EACbyH,cAAgBA,QAItB,qBAAKtL,UAAU,6BAAf,SACE,cAAC4G,GAAeuG,SAAhB,CAAyB3L,MAAQ/F,EAAjC,SAEIoI,EAEI6I,GAAY7I,GACR,cAAC,GAAD,CAAQA,WAAaA,IACrB,cAAC,EAAD,CAASA,WAAaA,EAAapI,QAAUA,EAAUmO,WAAaA,IAExE,cAAC,EAAD,CAAWzE,eAAiBA,QAItC,sBAtBF,WAPFjF,EAAQmB,KAAK7B,EAAKtD,OACX,O,OCvBIkR,OATf,WAEE,OACE,sBAAMpN,UAAU,aAAhB,SACE,sBAAMA,UAAU,kBCyBPqN,OAlCf,WACE,OACE,mCACE,yBAAQrN,UAAU,mBAAlB,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,aAAd,4BACA,mBACEA,UAAU,2BADZ,mFAIF,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,+BACE,6BAAI,mBAAGA,UAAU,2BAA2BsN,KAAK,KAA7C,sBACJ,6BAAI,mBAAGtN,UAAU,2BAA2BsN,KAAK,KAA7C,sBACJ,6BAAI,mBAAGtN,UAAU,2BAA2BsN,KAAK,KAA7C,sBACJ,6BAAI,mBAAGtN,UAAU,2BAA2BsN,KAAK,KAA7C,iCAKZ,qBAAKtN,UAAU,mBAAf,SACE,sBAAKA,UAAU,YAAf,qCAEE,mBAAGA,UAAU,iCAAiCsN,KAAK,KAAnD,mCCYGC,OA/Bf,YAA8B,IAAXC,EAAU,EAAVA,OACXlQ,EAAO6D,qBAAWC,IAExB,OACE,mCACE,qBAAKpB,UAAU,OAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,IAAD,CAAMsB,GAAK9B,EAAKE,IAAMM,UAAU,aAAhC,uBACA,oBAAIL,GAAG,aAAaK,UAAU,6BAA9B,SAEI1C,EACIkQ,GAAU,qCACZ,6BAAI,cAAC,IAAD,CAAMlM,GAAK9B,EAAKE,IAAhB,SAAwBlG,EAAKC,YACjC,6BAAI,mBACF6T,KAAK,UAAUrI,QAAUnI,EAAYV,OACrC4D,UAAU,gBAFR,SAGDxG,EAAK0C,MAAME,cAGZoR,GAAU,qCACZ,6BAAI,cAAC,IAAD,CAAMlM,GAAK9B,EAAKtD,MAAhB,SAA0B1C,EAAK0C,MAAMA,UACzC,6BAAI,cAAC,IAAD,CAAMoF,GAAK9B,EAAKrD,OAAhB,SAA2B3C,EAAK0C,MAAMC,wBCJ3CsR,OAnBf,YAAgC,IAAXD,EAAU,EAAVA,OAGnB,OACE,qCACE,cAAC,GAAD,CAAQA,OAASA,IACjB,qBACEvC,MAAQ,CACNyC,OAAQ,QACRC,QAAS,SAHb,SAME,oBAAI3N,UAAU,gCAAd,4CAEF,cAAC,GAAD,QCTOoB,GAAsBF,IAAM4L,cAAc,IAuCxCc,OArCf,WAAiB,IAAD,EAEcxN,oBAAS,GAFvB,mBAEPoN,EAFO,KAECK,EAFD,OAGUzN,oBAAS,GAHnB,mBAGP9C,EAHO,KAGDwQ,EAHC,KAWd,OANAhR,EAAYK,WAAU,SAACG,GACrBuB,QAAQqD,KAAK,qBAAsB5E,GACnCwQ,EAAQxQ,GACRuQ,GAAU,MAIV,mCACE,cAACzM,GAAoB+L,SAArB,CAA8B3L,MAAQlE,EAAtC,SACE,cAAC,IAAD,UAGE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyQ,KAAOvO,EAAKC,KAAOuO,OAAQ,EAAlC,SACE,cAAC,GAAD,CAAUR,OAASA,MAEnBA,EAEA,qCACE,cAAC,IAAD,CAAOO,KAAOvO,EAAKrD,OAAS8R,UAAYhO,IACxC,cAAC,IAAD,CAAO8N,KAAOvO,EAAKtD,MAAQ+R,UAAYjM,IACvC,cAAC,IAAD,CAAO+L,KAAI,UAAOvO,EAAK/D,QAAQ,sBAA0BwS,UAAYlB,QAErE,cAAC,GAAD,cC7BhBmB,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9be3bcf5.chunk.js","sourcesContent":["const smallWindow = 800; // smaller than this, and it's considered small.\n\nwindow.isSmallScreen = false;\n\nwindow.onresize = function () {\n  window.isSmallScreen = (window.innerWidth < smallWindow);\n}\nwindow.onresize();\n\n","const environment = {\n  production: true,\n\n  firebase: {\n    apiKey: 'AIzaSyDxmJzv3ccl0_ouKB9oVSzWIsn6uysYMLQ',\n    databaseURL: \"https://todo-list-react-33431.firebaseio.com\",\n    projectId: 'todo-list-react-33431',\n    authDomain: \"todo-list-react-33431.firebaseapp.com\",\n    storageBucket: \"todo-list-react-33431.appspot.com\",\n    messagingSenderId: \"153291173882\",\n    appId: \"1:153291173882:web:4eb5673b9a70ce5828fe43\",\n    measurementId: \"G-BCMCPMQHDB\"\n  },\n\n  url: 'https://us-central1-todo-list-react-33431.cloudfunctions.net/api',\n};\n\n// environment.production = false; environment.url = 'http://localhost:5000/todo-list-react-33431/us-central1/api';\n\nexport default environment;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/analytics';\nimport 'firebase/firestore';\nimport environment from './environment';\n\n\nfirebase.initializeApp(environment.firebase);\n\nexport const analytics = firebase.analytics;\nexport const auth = firebase.auth;\nexport const db = firebase.firestore;\n\nif (environment.production) {\n  analytics();\n} else {\n  // IS DEV\n  db().useEmulator('localhost', 8080);\n  auth().useEmulator('http://localhost:9099/');\n}\n","export async function sha1( str ) {\n  const buffer = new TextEncoder('utf-8').encode( str );\n  const digest = await crypto.subtle.digest('SHA-1', buffer);\n\n  // Convert digest to hex string\n  return Array.from(new Uint8Array(digest)).map( x => x.toString(16).padStart(2,'0') ).join('');\n}\n","const dateToday = new Date().toISOString().slice(0, 10);\n\nexport const text = {\n  gotoApp: 'Open app',\n  loading: 'Loading app...',\n  noListName: 'New Project ' + dateToday,\n\n  task: {\n    name: 'Name of the task',\n    delete: 'Delete task and its subtasks? Can\\'t be undone',\n    addTaskPh: () => {\n      const phs = [\n        'e.g. Buy carrots',\n        'e.g. Clean apartment in the morning',\n        'e.g. Do some exercise',\n        'Add a new task ...',\n        'Create a task ...',\n        'e.g. Call family',\n        'e.g. Schedule interview'\n      ];\n      return phs[Math.floor(Math.random() * phs.length)];\n    },\n    addSubtaskPh: 'Add subtasks to this task',\n    save: 'Save',\n    discard: 'Cancel changes',\n    notes: 'Notes',\n    notesPh: 'An optional description always helps'\n  },\n\n  drawer: {\n    inbox: {\n      _: 'Inbox'\n    },\n    invalidDrawer: 'Invalid URL (not an actual project)'\n  },\n  // addSubtaskBtn: 'Add a subtask',\n  // subtasks: 'Subtasks',\n  sharedProject: 'This project is shared',\n  subtaskStatus: '( Pending / Completed )',\n  // btn: 'Add task',\n  // title: 'MyTodo List',\n  // uncompleted: 'My tasks',\n  allTasksCompleted: () => {\n    const incomplete = [\n      '😁 All tasks completed!',\n      'Now that\\'s what I call a clean list 🥳',\n      'Wow, such empty 👏',\n      'Finitto? Go for a cappuccino ☕️',\n      'All tasks done, time for a break 🏖',\n      'So productive. I\\'m impressed 😎',\n      'Make a Todolist: Done ✅',\n      'I am Finnish 🇫🇮 with all tasks.'\n    ];\n    return incomplete[Math.floor(Math.random() * incomplete.length)];\n  },\n  completed: 'Completed',\n  completedNo: 'No completed tasks',\n  showCompleted: 'Show completed tasks',\n  hideCompleted: 'Hide completed tasks',\n\n  project: {\n    s: 'Projects',\n    noSelected: 'Select a project or create a new one.',\n    share: 'Share Project',\n    delete: {\n      _: 'Delete Project',\n      long: 'Delete this project and all the tasks? (cannot be undone)'\n    },\n    add: {\n      // _: 'Add a new project',\n      ph: 'Enter a name for a new project'\n    }\n  },\n\n  genericError: 'An error occurred. Please see console for details',\n\n  loggedInAs: (name) => `Logged in as ${ name }.`,\n\n  login: {\n    login: 'Log in',\n    signup: 'Sign up',\n    logout: 'Log out',\n    noAccount: 'Don\\'t have an account?',\n    yesAccount: 'Already a user?',\n    error: 'Invalid credentials',\n    success: 'Welcome Back!',\n    signupSuccess: 'Account created! Logging you in...',\n    invalidPass: 'Invalid login credentials',\n    invalidUser: 'No user exists for this email'\n  },\n\n};\n","import axios from 'axios';\nimport environment from './environment';\nimport cogoToast from 'cogo-toast';\nimport { auth } from './firebase';\nimport { sha1 } from 'functions/sha1';\nimport { text } from 'config/text';\nimport { constants } from 'config/constants';\n\nlet debounceAuth;\n\nexport const authService = {\n\n  setToken: (token) => {\n    localStorage.setItem('AuthToken', token);\n  },\n\n  authState: (done) => {\n    auth().onIdTokenChanged((user) => {\n      clearTimeout(debounceAuth);\n      debounceAuth = setTimeout(() => {\n        user && user.getIdToken(true).then((token) => {\n          authService.setToken(token);\n        });\n\n        done(user);\n      }, 300);\n    });\n  },\n\n  signup: (signupData) => {\n    return sha1(signupData.password)\n      .then((sha1Password) => {\n        return axios({\n          url: `${ environment.url }/signup`,\n          method: 'POST',\n          data: {\n            ...signupData,\n            password: sha1Password\n          }\n        });\n      })\n      .then((response) => {\n        return authService.login({\n          email: signupData.email,\n          password: signupData.password\n        });\n      });\n  },\n\n  login: (loginData) => {\n    let userCredential;\n\n    return sha1(loginData.password)\n      .then((sha1Password) => {\n        return auth().signInWithEmailAndPassword(loginData.email, sha1Password);\n      })\n      .then((response) => {\n        localStorage.setItem('uid', JSON.stringify(response.user.uid));\n        userCredential = response;\n        return auth().currentUser.getIdToken();\n      })\n      .then((authToken) => {\n        authService.setToken(authToken);\n        return userCredential;\n      });\n  },\n\n  loginCatch: (reason) => {\n    console.log(reason, reason.code, reason.code === 'auth/user-not-found');\n    if (reason.code === 'auth/wrong-password') {\n      cogoToast.error(text.login.invalidPass, constants.toast);\n    } else if (reason.code === 'auth/user-not-found') {\n      cogoToast.error(text.login.invalidUser, constants.toast);\n    } else {\n      cogoToast.error(reason.message, constants.toast);\n    }\n  },\n\n  logout: (e) => {\n    e.preventDefault();\n\n    auth().signOut().then(() => {\n      cogoToast.success('You\\'ve been signed out of the app', { position: 'bottom-center' });\n    });\n  },\n\n  validateSignup: (signupData) => {\n    if (!signupData.username) {\n      return { username: 'Must enter a valid username' };\n    }\n    if (!signupData.name || signupData.name.length <= 2) {\n      return { name: 'Must enter a longer name' };\n    }\n    if (!signupData.email || signupData.email.length <= 5) {\n      return { email: 'Invalid email' };\n    }\n    if (!signupData.password || !signupData.confirm) {\n      return { password: 'Password can\\'t be empty' };\n    }\n    if (signupData.password !== signupData.confirm) {\n      return { password: 'Passwords don\\'t match' };\n    }\n    return {};\n  }\n};\n","export const constants = {\n  defaultProjectColor: '#aaa',\n  toast: { position: 'bottom-center' },\n  maxDepth: 3\n};\n","export const urls = {\n  home: '/',\n  app: '/app',\n  project: (id) => `${ urls.app }/${ id }`,\n  login: '/login',\n  signup: '/signup',\n\n  inboxUrl: 'inbox',\n}\n","import React from 'react';\nimport './_login-box.scss';\n\nfunction LoginBox ({ children, title, loading }) {\n  return (\n    <>\n      <div className={ 'flex-column vh-100 place-center' + ( loading ? ' loader-input cover' : '' ) }>\n        <div className=\"login-box\">\n          { title && <h5 className=\"mt-5\">{ title }</h5> }\n          { children }\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginBox;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from '../App';\nimport cogoToast from 'cogo-toast';\nimport LoginBox from './LoginBox';\nimport { constants } from 'config/constants';\n\nfunction Signup () {\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n  const [signup, setSignup] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [signupError, setSignupError] = useState({});\n\n\n  async function onSubmit (e) {\n    e.preventDefault();\n\n    const _signupError = authService.validateSignup(signup);\n    const errors = Object.values(_signupError);\n    if (!errors.length) {\n      setLoading(true);\n      authService\n        .signup(signup)\n        .then((responseData) => {\n          setLoading(false);\n          if (responseData.user) {\n            cogoToast.success(text.login.signupSuccess, constants.toast);\n            setSignup({});\n            setIsLoggedIn(true);\n          }\n        })\n        .catch(({ response } ) => {\n          if (response.data && response.data.code) {\n            authService.loginCatch(response.data);\n          } else {\n            setSignupError(response.data);\n            const errors = Object.values(response.data);\n            errors.length && cogoToast.error(errors[0], constants.toast);\n          }\n          setLoading(false);\n        });\n    } else {\n      setSignupError(_signupError);\n      errors.length && cogoToast.error(errors[0], constants.toast);\n    }\n  }\n\n  // If the user is logged in already, redirect to the app!\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to=\"/app\"/>\n          :\n          <>\n            <LoginBox title={ text.login.signup } loading={ loading }>\n              <form onSubmit={ onSubmit } className=\"flex-center-self\">\n                <input\n                  value={ signup.email || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" required autoFocus autoComplete=\"off\"\n                />\n                { signupError.email && <small>{ signupError.email }</small> }\n                <input\n                  value={ signup.name || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  name: e.target.value\n                }) } placeholder=\"name\" required autoComplete=\"off\"\n                />\n                { signupError.name && <small>{ signupError.name }</small> }\n                <input\n                  value={ signup.username || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  username: e.target.value\n                }) } placeholder=\"username\" required autoComplete=\"off\"\n                />\n                { signupError.username && <small>{ signupError.username }</small> }\n                <input\n                  value={ signup.password || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" required autoComplete=\"off\"\n                />\n                { signupError.password && <small>{ signupError.password }</small> }\n                <input\n                  value={ signup.confirm || '' } onChange={ (e) => setSignup({\n                  ...signup,\n                  confirm: e.target.value\n                }) } placeholder=\"confirm\" type=\"password\" required autoComplete=\"off\"\n                />\n                { signupError.password && <small>{ signupError.password }</small> }\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.signup }</button>\n                  <Link to={ urls.login } className=\"btn-flat\">{ text.login.yesAccount } { text.login.login }</Link>\n                </div>\n              </form>\n            </LoginBox>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from 'react';\nimport { authService } from 'services/authService';\nimport { Redirect, Link, useHistory } from 'react-router-dom';\nimport { urls } from 'config/urls';\nimport { text } from 'config/text';\nimport { constants } from 'config/constants';\nimport { LoggedInUserContext } from 'App';\nimport cogoToast from 'cogo-toast';\nimport LoginBox from './LoginBox';\n\nfunction Login () {\n\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [login, setLogin] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('user'));\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    authService\n      .login(login)\n      .then((responseData /* Returns {user, error}! */) => {\n\n        setLoading(false);\n\n        if (responseData.user) {\n          // setLogin({});\n          setIsLoggedIn(true);\n          cogoToast.success(text.login.success, constants.toast);\n        } else {\n          if (responseData.error.code === 400) {\n            cogoToast.error(text.login.error, constants.toast);\n          }\n          console.info(responseData);\n        }\n      })\n      .catch((reason) => {\n        setLoading(false);\n        authService.loginCatch(reason);\n      });\n  }\n\n  if (React.useContext(LoggedInUserContext)) {\n    history.push(urls.app);\n    return null;\n  }\n\n  return (\n    <>\n      {\n        isLoggedIn\n          ? <Redirect to={ urls.app }/>\n          :\n          <>\n            <LoginBox title={ text.login.login } loading={ loading }>\n              <form onSubmit={ onSubmit } className=\"flex-center-self\">\n                <input\n                  value={ login.email || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  email: e.target.value\n                }) } placeholder=\"email\" type=\"email\" autoFocus required\n                />\n                <input\n                  value={ login.password || '' } onChange={ (e) => setLogin({\n                  ...login,\n                  password: e.target.value\n                }) } placeholder=\"password\" type=\"password\" autoComplete=\"off\" required\n                />\n                <div className=\"flex-row\">\n                  <button type=\"submit\" className=\"btn btn-block\">{ text.login.login }</button>\n                  <Link\n                    to={ urls.signup } className=\"btn-flat right\"\n                  >{ text.login.noAccount } { text.login.signup }</Link>\n                </div>\n              </form>\n            </LoginBox>\n          </>\n      }\n    </>\n  );\n}\n\nexport default Login;\n","import { urls } from 'config/urls';\nimport cogoToast from 'cogo-toast';\nimport { constants } from 'config/constants';\n\nexport const handleError = (errorText, error) => {\n  window.lastError = error;\n  cogoToast.error(errorText, constants.toast);\n\n  console.error(errorText, error);\n  if (['401', '403'].indexOf(error.toString().split(' ').pop()) >= 0) {\n    localStorage.removeItem('user');\n    localStorage.removeItem('AuthToken');\n    window.location.hash = urls.login;\n  }\n}\n","export function time (timeStr) {\n  const m = new Date(timeStr);\n  return m.getUTCFullYear() + '/' + (m.getUTCMonth() + 1) + '/' + m.getUTCDate()\n    + ' ' + m.getUTCHours() + ':' + m.getUTCMinutes() + ':' + m.getUTCSeconds();\n}\n","import { db } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { time } from 'functions/time';\nimport { constants } from 'config/constants';\n\nconst taskService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  updateTask: async (task) => {\n    console.info('Updating task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ task.projectId }/task/${ task.id }`,\n        method: 'PUT',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from PUT', response);\n        cogoToast.success(response.data.message, constants.toast);\n      });\n    } catch (e) {\n      handleError('Error on update task: ' + e.response.data.message, e);\n    }\n  },\n\n  addTask: async (task) => {\n    console.info('Adding task ', task.name);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ task.projectId }/task`,\n        method: 'POST',\n        data: task,\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from POST', response);\n        cogoToast.success(response.data.message, constants.toast);\n        return response.data.taskId;\n      });\n    } catch (e) {\n      handleError('Error on save task: ' + e.response.data.message, e);\n    }\n  },\n\n  deleteTask: async (task) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ task.projectId }/task/${ task.id }`,\n        method: 'DELETE',\n        headers: taskService.headers()\n      }).then((response) => {\n        console.info('result from DELETE', response);\n        cogoToast.success(response.data.message, constants.toast);\n      });\n    } catch (e) {\n      handleError('Error on delete task: ' + e.response.data.message, e);\n    }\n  },\n\n  getTasksForProject: (projectKey, done) => {\n    try {\n      return taskService.db\n        .collection(`/projects/${ projectKey }/tasks`)\n        .orderBy('level', 'desc')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((tasksDoc) => {\n          const tasks = {};\n          tasksDoc.forEach((taskDoc) => {\n            const id = taskDoc.id;\n            const task = taskDoc.data();\n            const parentId = task.parentId || 'root_task';\n\n            tasks[parentId] = tasks[parentId] || [];\n            tasks[parentId].push({\n              id,\n              ...task,\n              projectId: projectKey,\n              timestamp: time(task.timestamp.seconds * 1000),\n              subtasks: tasks[id] || []\n            });\n            delete tasks[id];\n          });\n          done(tasks['root_task'] || []);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  toggleTask: (task) => {\n    try {\n      return taskService.db\n        .doc(`/projects/${ task.projectId }/tasks/${ task.id }`)\n        .update({\n          checked: task.checked,\n          expanded: task.expanded\n        });\n    } catch (e) {\n      handleError('Error on updating \"checked\" task: ', e);\n    }\n  }\n\n};\n\nexport default taskService;\n","import React, { useState } from 'react';\nimport { text } from '../../config/text';\nimport { LoggedInUserContext } from '../../App';\nimport { authService } from '../../services/authService';\n\nfunction UserSettingsDropdown () {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  const user = React.useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <button className=\"btn-invisible\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"material-icons\">settings</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"dropdown dd-left dd-big\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"dropdown-item\">\n              <span className=\"left subtle ps-6\">{ text.loggedInAs(user.email) }</span>\n            </li>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ authService.logout }>\n                {/*<i className=\"material-icons subtle left\">exit_to_app</i>*/}\n                {/*<span className=\"left\">{ text.login.logout }</span>*/}\n                { text.login.logout }\n              </button>\n            </li>\n          </ul>\n          <div className=\"backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default UserSettingsDropdown;\n","import React from 'react';\nimport UserSettingsDropdown from './UserSettingsDropdown';\n\nfunction Navbar ({ setShowSidebar, showSidebar }) {\n\n  return (\n    <>\n      <div className=\"navbar-fixed\">\n        <nav className=\"grey\">\n          <div className=\"nav-wrapper\">\n            <a className=\"sidenav-btn btn-subtle\" onClick={ () => setShowSidebar(! showSidebar ) }>\n              <i className=\"material-icons\">menu</i>\n            </a>\n            <ul className=\"right\">\n              <li>\n                <UserSettingsDropdown/>\n              </li>\n            </ul>\n            {/*<ul className=\"right hide-on-med-and-down\">*/}\n            {/*  <li><a href=\"sass.html\">Sass</a></li>*/}\n            {/*  <li><a href=\"badges.html\">Components</a></li>*/}\n            {/*  <li><a href=\"collapsible.html\">Javascript</a></li>*/}\n            {/*  <li><a href=\"mobile.html\">Mobile</a></li>*/}\n            {/*</ul>*/}\n          </div>\n        </nav>\n      </div>\n    </>\n  )\n}\n\nexport default Navbar;\n","import { db, auth } from './firebase';\nimport axios from 'axios';\nimport environment from './environment';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { constants } from '../config/constants';\nimport { urls } from '../config/urls';\nimport { text } from '../config/text';\n\nconst projectService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getProject: (projectKey, done) => {\n    try {\n      return projectService.db\n        .doc(`/projects/${ projectKey }`)\n        .onSnapshot((doc) => {\n          const project = doc.data();\n          project.id = doc.id;\n\n          console.info(`Changed to project \"${ project.name }\"`);\n\n          done(project);\n        });\n    } catch (e) {\n      handleError('Error on fetching Project: ', e);\n    }\n  },\n\n  getListOfProjects: (done) => {\n    try {\n      return projectService.db\n        .collection(`/projects`)\n        .where('_uids', 'array-contains', auth().currentUser.uid)\n        // .orderBy('timestamp', 'desc')\n        .onSnapshot((projectsDoc) => {\n\n          const projects = [];\n          projectsDoc.forEach((doc) => {\n            const projectData = doc.data();\n            projects.push({\n              id: doc.id,\n              name: projectData.name,\n              shared: projectData.shared,\n              showCompleted: projectData.showCompleted,\n              color: projectData.color\n            });\n          });\n\n          // done([...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects, ...projects]);\n          done(projects);\n\n          console.info('Lists loaded: ', projects.length);\n        });\n    } catch (e) {\n      handleError('Error on fetching tasks: ', e);\n    }\n  },\n\n  updateProject: async (project) => {\n    console.info('Updating project ', project);\n\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'PUT',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        console.info('result from Edit Project PUT', result);\n      });\n    } catch (e) {\n      handleError('Error on save project name: ', e);\n    }\n  },\n\n  newProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project`,\n        method: 'POST',\n        data: project,\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        return result.data.project;\n      });\n    } catch (e) {\n      handleError('Error on create project: ', e);\n    }\n  },\n\n  deleteProject: async (project) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }`,\n        method: 'DELETE',\n        headers: projectService.headers()\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        console.info('result from project DELETE', result);\n      });\n    } catch (e) {\n      handleError('Error on delete project: ', e);\n    }\n  },\n\n  getUserByEmail: async (userEmail) => {\n    try {\n      return await axios({\n        url: environment.url + `/user/search/`,\n        method: 'POST',\n        data: { email: userEmail },\n        headers: projectService.headers(),\n      }).then((result) => {\n        return result.data.user;\n      });\n    } catch (e) {\n      handleError('Error on searching email: ', e);\n    }\n  },\n\n  addUserToProject: async (project, username) => {\n    try {\n      return await axios({\n        url: environment.url + `/project/${ project.id }/join`,\n        method: 'POST',\n        headers: projectService.headers(),\n        data: { username: username }\n      }).then((result) => {\n        cogoToast.success(result.data.message, constants.toast);\n        console.info('result from joining Project', result);\n      });\n    } catch (e) {\n      handleError('Error on joining project: ', e);\n    }\n  }\n};\n\nexport default projectService;\n","import cogoToast from 'cogo-toast';\nimport { constants } from '../config/constants';\n\nfunction createTaskObject (task) {\n  if (!task.projectId) {\n    cogoToast.error('no project id!', constants.toast);\n    console.log(task);\n  }\n  return {\n    name: task.name || '',\n    checked: task.checked || false,\n    id: task.id || null, // set it to null or a valid value. Else it will fail\n    timestamp: task.timestamp || new Date(),\n    level: task.level || 0,\n    parentId: task.parentId || null,\n    description: task.description || '',\n    projectId: task.projectId\n  }\n}\n\nexport default createTaskObject;\n","import React, { useContext } from 'react';\nimport { text } from 'config/text';\nimport { ProjectContext } from 'TodoApp';\n\nfunction ProjectTitle ({ projectFunctions, toggleShowCompleted, isLoading }) {\n\n  const project = useContext(ProjectContext);\n\n  return (\n    projectFunctions.editListName\n      ? <form onSubmit={ projectFunctions.saveListName } className={ ( isLoading === 'name' ? ' loader-input' : '' ) }>\n        <input\n          className=\"as-title m0 invisible h5\" autoFocus /*onBlur={ project.saveListName }*/\n          value={ projectFunctions.projectName }\n          disabled={ isLoading === 'name' }\n          onBlur={ () => projectFunctions.setEditListName(false) }\n          onChange={ (e) => projectFunctions.setProjectName(e.target.value) }\n        />\n      </form>\n      : <div className=\"flex-row\">\n        <h5 className=\"max-content m0\" onClick={ () => projectFunctions.setEditListName(true) }>{ projectFunctions.projectName }</h5>\n        {\n          project.showCompleted\n            ? <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle o-3\"\n              onClick={ () => toggleShowCompleted(false) }\n              title={ text.hideCompleted }\n            >check_box</button>\n            : <button\n              className=\"material-icons ml-5 toggle-completed btn-invisible subtle o-3\"\n              onClick={ () => toggleShowCompleted(true) }\n              title={ text.showCompleted }\n            >check_box_outline_blank</button>\n        }\n      </div>\n  );\n}\n\nexport default ProjectTitle;\n","import React from 'react';\n\nfunction Modal ({ children, modalOpen, okButton, cancelButton, onAccept, onCancel, loading }) {\n\n  return (\n    <>\n      {\n        modalOpen ? <>\n            <div className={ 'z-depth-5 modal' }>\n              <div className={ (loading ? ' loader-input cover' : '') }>\n                <div className=\"modal-content\">\n                  { children }\n                </div>\n                <div className=\"modal-footer\">\n                  {\n                    okButton &&\n                    <button\n                      onClick={ onAccept }\n                      className=\"modal-close waves-effect waves-green btn-flat btn\"\n                      dangerouslySetInnerHTML={ { __html: okButton } }\n                    />\n                  }\n                  {\n                    cancelButton &&\n                    <button\n                      onClick={ onCancel }\n                      className=\"modal-close waves-effect waves-red btn-flat btn left\"\n                      dangerouslySetInnerHTML={ { __html: cancelButton } }\n                    />\n                  }\n                </div>\n              </div>\n            </div>\n            <div className=\"backdrop\" onClick={ onCancel }/>\n          </>\n          : ''\n      }\n    </>\n  );\n}\n\nexport default Modal;\n","import Modal from './Modal';\nimport React, { useContext, useEffect, useState } from 'react';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\n\n\nfunction TaskModal ({ trigger, task, modalOpen, setModalOpen }) {\n\n  const [loading, setLoading] = useState(false);\n  const [subtaskName, setSubtaskName] = useState('');\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [taskName, setTaskName] = useState(task.name || '');\n  const [taskDesc, setTaskDesc] = useState(task.description || '');\n\n  const project = useContext(ProjectContext);\n\n  useEffect(() => {\n    setTaskName(task.name || '');\n    setSubtasks(task.subtasks || []);\n    setTaskDesc(task.description || '');\n  }, [task]);\n\n  async function saveTask (e) {\n    e.preventDefault();\n\n    setLoading(true);\n\n    await taskService.updateTask({ ...task, name: taskName, description: taskDesc });\n\n    setLoading(false);\n\n    setModalOpen(false);\n  }\n\n  async function toggleSubtask (subtask) {\n    subtask.checked = !subtask.checked;\n    await taskService.toggleTask(subtask);\n  }\n\n  async function saveSubtask (e) {\n    e.preventDefault();\n\n    await taskService.addTask(createTaskObject({\n      name: subtaskName, parentId: task.id, level: task.level + 1, projectId: project.id\n    }));\n\n    e.target[0].value = '';\n  }\n\n  return (\n    <>\n      <button className={ trigger.className } onClick={ () => setModalOpen(true) }>{ trigger.text }</button>\n      <Modal\n        modalOpen={ modalOpen }\n        loading={ loading }\n        onAccept={ saveTask }\n        onCancel={ () => setModalOpen(false) }\n        okButton={ text.task.save + ' <i class=\"material-icons right\">save</i>' }\n        cancelButton={ text.task.discard + ' <i class=\"material-icons right\">cancel</i>' }\n      >\n        <h6 className=\"subtle mb-15 mt-5\">{ project.name }</h6>\n        <form onSubmit={ saveTask }>\n          <div>\n            <label>{ text.task.name }</label>\n            <input\n              value={ taskName } required minLength={ 3 }\n              placeholder={ text.task.addPh }\n              onChange={ (e) => setTaskName(e.target.value) }\n            />\n          </div>\n          <div>\n            <label>{ text.task.notes }</label>\n            <input\n              value={ taskDesc }\n              className=\"materialize-textarea\"\n              placeholder={ text.task.notesPh }\n              onChange={ (e) => setTaskDesc(e.target.value) }\n            />\n          </div>\n        </form>\n\n        <ul className=\"list-unstyled flex-column\">\n          {\n            (subtasks || []).map((sub) =>\n              <li key={ sub.id } title={ sub.timestamp } className=\"block\">\n                <label className=\"left\">\n                  <input\n                    type=\"checkbox\" checked={ sub.checked }\n                    id={ sub.id }\n                    className=\"material-cb\"\n                    onChange={ () => toggleSubtask(sub) }\n                  />\n                  <div/>\n                </label>\n                <span className=\"left\">{ sub.name }</span>\n              </li>\n            )\n          }\n          <li key=\"new-subtask\">\n            <form onSubmit={ saveSubtask }>\n              <label>{ text.subtasks }</label>\n              <input\n                onChange={ (e) => setSubtaskName(e.target.value) }\n                placeholder={ text.task.addSubtaskPh }\n                className=\"input-field\"\n                required minLength={ 3 }\n              />\n            </form>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TaskModal;\n","import React, { useContext, useEffect, useState } from 'react';\nimport './_task.scss';\nimport TaskModal from 'components/Modal/TaskModal';\nimport { text } from 'config/text';\nimport taskService from 'services/taskService';\nimport { ProjectContext } from 'TodoApp';\nimport { constants } from 'config/constants';\n\nfunction Task ({ task, level }) {\n\n  const [subtasks, setSubtasks] = useState(task.subtasks || []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [expandedTask, setExpandedTask] = useState(task.expanded || false);\n\n  const project = useContext(ProjectContext);\n\n  const openLength = subtasks.filter((s) => !s.checked).length || 0;\n\n  const doneClass = (task.checked ? (project.showCompleted ? 'done' : 'hidden') : '');\n\n  const showExpanderClass = ((project.showCompleted ? subtasks.length : openLength) ? '' : ' v-hidden')\n\n  useEffect(() => {\n    setSubtasks(task.subtasks || []);\n  }, [task.subtasks]);\n\n  async function toggleCompleted (task) {\n    task.checked = !task.checked;\n    // after changing the state...\n    if (task.checked) {\n      // set all subtasks as checked, since the main task was marked as checked.\n      // (task.subtasks || []).forEach((_task) => _task.checked = true);\n      task.expanded = false;\n    }\n    await taskService.toggleTask(task);\n    // await taskService.updateTask(project.id, task);\n  }\n\n  /**\n   * If you want to say the toggle state, just update this function\n   */\n  async function toggleExpanded (isExpanded) {\n    // task.expanded = isExpanded;\n    // await taskService.updateTask(task);\n    setExpandedTask(isExpanded);\n  }\n\n  async function onDelete () {\n    if (window.confirm(text.task.delete)) {\n\n      await taskService.deleteTask(task);\n    }\n  }\n\n  return (\n    <li className={ doneClass + ' task' } title={ task.timestamp }>\n      <div className=\"task-content parent-hover\">\n        <button\n          className={ 'toggle-expand subtle btn-invisible material-icons tiny left ' + (expandedTask ? ' expanded' : '') + showExpanderClass }\n          onClick={ () => toggleExpanded(!expandedTask) }\n        >chevron_right\n        </button>\n\n        <label className=\"left\">\n          <input\n            type=\"checkbox\"\n            className=\"material-cb\"\n            checked={ task.checked }\n            onChange={ () => toggleCompleted(task) }\n          />\n          <div/>\n        </label>\n        <button\n          className={ 'btn-invisible ' + (task.checked ? '' : '') }\n          onClick={ () => setModalOpen(true) }\n        >\n          <span className=\"task-name\">{ task.name }</span>\n          { subtasks.length > 0 && <small\n            className=\"subtle child-hover ml-5\" title={ text.subtaskStatus }\n          >({ openLength } / { subtasks.length - openLength })</small> }\n          { task.description && <small className=\"subtle ml-5\">{ task.description }</small> }\n        </button>\n\n        <span className=\"right\">\n          <button\n            className=\"child-hover btn-invisible ml-5 material-icons right subtle\"\n            onClick={ () => onDelete(task) }\n          >delete\n          </button>\n          <TaskModal\n            trigger={ {\n              className: 'child-hover btn-invisible ml-5 material-icons right subtle',\n              text: 'edit'\n            } } task={ { ...task } }\n            modalOpen={ modalOpen }\n            setModalOpen={ setModalOpen }\n          />\n        </span>\n      </div>\n      {\n        expandedTask &&\n        <>\n          {\n            (task.level < constants.maxDepth) && <>\n              <ul className=\"subtasks\" aria-details={ level }>\n                {\n                  subtasks.map((t) =>\n                    <Task\n                      key={ t.id }\n                      task={ t }\n                      level={ level + 1 }\n                    />\n                  )\n                }\n              </ul>\n            </>\n          }\n        </>\n      }\n    </li>\n  );\n}\n\nexport default Task;\n","import { useEffect, useMemo, useState } from 'react';\nimport './_project.scss';\nimport taskService from 'services/taskService';\nimport createTaskObject from 'functions/createTaskObject';\nimport { text } from 'config/text';\nimport projectRender from './Project-view';\nimport projectService from 'services/projectService';\n\nfunction Project ({ project, projectKey, setProject }) {\n\n  const [projectTasks, setProjectTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState('');\n  const [showCompleted, setShowCompleted] = useState(project.showCompleted);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [projectName, setProjectName] = useState(project.name || text.noListName);\n  const [editListName, setEditListName] = useState(false);\n\n  const open = projectTasks.filter((task) => !task.checked);\n  const completed = projectTasks.filter((task) => !!task.checked);\n\n  // const inputElement = useRef(null);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted();\n  }, [open.length]);\n\n  const addTaskPh = useMemo(() => {\n    setShowCompleted(project.showCompleted);\n    return text.task.addTaskPh();\n  }, [project.id]);\n\n  let taskName = '';\n\n  useEffect(() => {\n    setProjectName(project.name);\n  }, [project.name]);\n\n  useEffect(() => {\n    const unsubscribeProject = projectService.getProject(projectKey, setProject);\n    const unsubscribeTasks = taskService.getTasksForProject(projectKey, setProjectTasks);\n\n    return () => {\n      unsubscribeProject && unsubscribeProject();\n      unsubscribeTasks && unsubscribeTasks();\n    };\n  }, [projectKey]);\n\n  async function addTask (e) {\n    e.preventDefault();\n    setIsLoading('task');\n    console.log(createTaskObject({\n      name: taskName,\n      projectId: project.id\n    }))\n    // inputElement.current && (inputElement.current.target.value = '');\n\n    const taskId = await taskService.addTask(createTaskObject({\n      name: taskName,\n      projectId: project.id\n    }));\n    e.target[0].value = '';\n    setIsLoading('');\n  }\n\n  function taskNameChange (e) {\n    taskName = e.target.value;\n  }\n\n  async function toggleShowCompleted (showCompleted) {\n    setShowCompleted(showCompleted);\n    await update({ showCompleted });\n  }\n\n  async function changeColor (hexColor) {\n    await update({ color: hexColor });\n  }\n\n  async function saveListName (e) {\n    e.preventDefault();\n\n    setIsLoading('name');\n    await update({ name: projectName });\n    setEditListName(false);\n    setIsLoading('');\n  }\n\n  async function update (projectPartial) {\n    return await projectService.updateProject({ ...project, ...projectPartial });\n  }\n\n  return projectRender({\n    open,\n    completed,\n    addTask,\n    taskNameChange,\n    showCompleted,\n    toggleShowCompleted,\n    modalOpen,\n    allCompleted,\n    setModalOpen,\n    isLoading,\n    addTaskPh,\n    project: {\n      projectName,\n      saveListName,\n      editListName,\n      setEditListName,\n      setProjectName,\n      changeColor,\n    }\n  });\n}\n\nexport default Project;\n","import React from 'react';\nimport ProjectTitle from './ProjectTitle/ProjectTitle';\nimport Task from './Task/Task';\n\n\nexport default function projectRender (p) {\n\n  return (\n    <>\n      <ProjectTitle\n        projectFunctions={ p.project } toggleShowCompleted={ p.toggleShowCompleted }\n        isLoading={ p.isLoading }\n      />\n\n      <ul>\n        { p.open.length ?\n          p.open.map((task) =>\n            <Task\n              key={ task.id }\n              task={ task }\n              level={ 0 }\n            />)\n          : (p.completed.length ? <li><h5 className=\"subtle max-content ml-50\">{ p.allCompleted }</h5></li> : '')\n        }\n        { p.showCompleted && p.completed.map((task) =>\n          <Task\n            key={ task.id }\n            task={ task }\n          />) }\n\n        <li className=\"task\">\n          <form onSubmit={ p.addTask }\n            className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }>\n            {/*className={ 'flex-row task-content form-inline' + (p.isLoading === 'task' ? ' loader-input' : '') }>*/}\n            <i /* Just to give the right padding */ className=\"material-icons left v-hidden mr-11\">add</i>\n            <i className=\"material-icons left subtle\">add</i>\n            <div className=\"form-group\">\n              <div className=\"input-group mb-2\">\n                <input\n                  onChange={ p.taskNameChange } className=\"invisible f-100\"\n                  placeholder={ p.addTaskPh } required\n                  disabled={ p.isLoading === 'task' }\n                  autoComplete=\"off\" /*ref={ inputElement }*/\n                />\n              </div>\n            </div>\n          </form>\n        </li>\n      </ul>\n\n      {\n        // <TaskModal\n        //   trigger={ {\n        //     className: 'btn-floating btn-large new-task fixed-action-btn subtle-bg',\n        //     text: <i className=\"material-icons\">add</i>\n        //   } }\n        //   task={ {} }\n        //   modalOpen={ p.modalOpen }\n        //   setModalOpen={ p.setModalOpen }\n        // />\n      }\n    </>\n  );\n}\n","import { text } from 'config/text';\n\nfunction NoProject ({ setShowSidebar }) {\n  return (\n    <>\n      <div className=\"h-100 place-center\">\n        <button className=\"btn-invisible left-align flex-center-self\" onClick={ () => setShowSidebar(true) }>{ text.project.noSelected }</button>\n      </div>\n    </>\n  )\n}\n\nexport default NoProject;\n","import React, { useState } from 'react';\nimport { text } from 'config/text';\n\nfunction ProjectListDropdown ({ project, onAction }) {\n\n  const [dropdownShown, setDropdownShown] = useState(false);\n\n  return (\n    <>\n      <button className=\"btn-invisible child-hover ch-hidden left\" onClick={ () => setDropdownShown(true) }>\n        <i className=\"tiny material-icons subtle\">more_horiz</i>\n      </button>\n      {\n        dropdownShown &&\n        <>\n          <ul className=\"dropdown dd-right\" onClick={ () => setDropdownShown(false) }>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('delete', project) }>\n                <i className=\"tiny material-icons subtle\">delete</i> {text.project.delete._}\n              </button>\n            </li>\n            <li className=\"dropdown-item\">\n              <button className=\"btn-invisible left left-align w-100\" onClick={ () => onAction('share', project) }>\n                <i className=\"tiny material-icons subtle\">people_outline</i> {text.project.share}\n              </button>\n            </li>\n          </ul>\n          <div className=\"backdrop\" onClick={ () => setDropdownShown(false) }/>\n        </>\n      }\n    </>\n  );\n}\n\nexport default ProjectListDropdown;\n","import { TwitterPicker } from 'react-color';\nimport React, { useState } from 'react';\n\nfunction ColorPicker ({ onChangeComplete, color }) {\n\n  const [showColorPicker, setShowColorPicker] = useState(false);\n\n  function setColor(colorChoice) {\n    setShowColorPicker(false);\n    onChangeComplete(colorChoice.hex);\n  }\n\n  return (\n    <>\n      <span className=\"relative\">\n        <button className=\"btn-invisible h-100\" onClick={ () => setShowColorPicker(true) }>\n          <span className=\"btn-colorpicker\" style={ { backgroundColor: color } }/>\n        </button>\n        { showColorPicker ?\n          <div className=\"colorpicker\">\n            <div className=\"backdrop\" onClick={ () => setShowColorPicker(false) }/>\n            <TwitterPicker\n              color={ color }\n              onChangeComplete={ setColor }\n            />\n          </div>\n          : ''\n        }\n              </span>\n    </>\n  );\n}\n\nexport default ColorPicker;\n","import React, { useEffect, useState } from 'react';\nimport { text } from 'config/text';\nimport './_project-list.scss';\nimport projectService from 'services/projectService';\nimport ProjectListDropdown from './ProjectListDropdown/ProjectListDropdown';\nimport cogoToast from 'cogo-toast';\nimport ColorPicker from 'components/ColorPicker/ColorPicker';\nimport { constants } from 'config/constants';\nimport { urls } from '../../../config/urls';\n\nfunction validProjectId (projectId, projects) {\n  // If there's a project set in the URL and it's valid (it exists)\n  if (projectId && projects.filter((p) => p.id === projectId).length) {\n    return projectId;\n  }\n  return ''; // otherwise don't set any project.\n}\n\nfunction ProjectList ({ projectKey, setProjectKey }) {\n\n  const [isLoading, setIsLoading] = useState('');\n  const [projects, setProjects] = useState([]);\n\n  const [newProjectName, setNewProjectName] = useState('');\n\n  useEffect(() => {\n    const unsubscribeProjects = projectService.getListOfProjects((_projects) => {\n      const _projectKey = validProjectId(projectKey, _projects);\n      _projectKey && setProjectKey(_projectKey);\n      setProjects(_projects);\n    });\n\n    return () => {\n      unsubscribeProjects && unsubscribeProjects();\n    };\n  }, [ ]);\n\n  function addNewProject (e) {\n    e.preventDefault();\n\n    setIsLoading('new');\n\n    projectService\n      .newProject({ name: newProjectName, color: constants.defaultProjectColor })\n      .then((snap) => {\n        setNewProjectName('');\n        setIsLoading('');\n        setProjectKey(snap.id);\n      });\n  }\n\n  async function deleteProject (project) {\n    if (window.confirm(text.project.delete.long)) {\n      setIsLoading(project.id);\n      await projectService.deleteProject(project);\n      setProjectKey('');\n      setIsLoading('');\n    }\n  }\n\n  function setProject (projectId) {\n    if (projectId === projectKey) {\n      return; // can't change to itself... it also causes a re-render problem in the `useEffect`\n    }\n    setProjectKey(projectId);\n  }\n\n  async function changeColor (project, hexColor) {\n    const result = await projectService.updateProject({\n      ...project,\n      color: hexColor\n    });\n    console.log('RESULT', result);\n  }\n\n  async function onAction (actionName, project) {\n    switch (actionName) {\n      case 'delete':\n        await deleteProject(project);\n        break;\n      case 'share':\n        const userEmail = prompt('User Email to join?');\n        const user = await projectService.getUserByEmail(userEmail);\n        if (!user) {\n          cogoToast.error(text.genericError);\n          console.error('error: ', user);\n          return;\n        }\n        await projectService.addUserToProject(project, user.username);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return (\n    <>\n      <h5 className=\"center-align\">{ text.project.s }</h5>\n      <ul className=\"projects-list flex-column\">\n        <li key={ urls.inboxUrl } className={ 'mb-5 parent-hover flex-row' + (projectKey === urls.inboxUrl ? ' selected' : '') }>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          <button className=\"btn-invisible left left-align ps-6\" onClick={ () => setProject(urls.inboxUrl) }>{ text.drawer.inbox._ }</button>\n        </li>\n        {\n          projects.map((proj) =>\n            <li\n              key={ proj.id }\n              className={ 'mb-5 parent-hover flex-row' + (projectKey === proj.id ? ' selected' : '') + (isLoading === proj.id ? ' loader-input' : '') }\n            >\n              <ProjectListDropdown project={ proj } onAction={ onAction }/>\n              <ColorPicker color={ proj.color } onChangeComplete={ (e) => changeColor(proj, e) } />\n              <button className=\"btn-invisible left left-align ps-6\" onClick={ () => setProject(proj.id) }>\n                { proj.name }\n                {\n                  proj.shared &&\n                  <i\n                    className=\"tiny material-icons subtle left mr-5\"\n                    title={ text.sharedProject }\n                  >people_outline</i>\n                }\n                {/*( { proj.openTasks } <span className=\"subtle\">/ { proj.completedTasks }</span> )*/ }\n              </button>\n            </li>\n          )\n        }\n        <li key=\"new-project\" className=\"mb-5 parent-hover flex-row\">\n          <button className=\"btn-invisible child-hover ch-hidden left\">\n            <label htmlFor=\"new-project-input\" className=\"pointer\">\n              <i className=\"tiny material-icons subtle\">add</i>\n            </label>\n          </button>\n          <form\n            onSubmit={ addNewProject }\n            className={ 'add-project flex-row' + (isLoading === 'new' ? ' loader-input' : '') }\n          >\n            <input\n              className=\"invisible left-align\"\n              onChange={ (e) => setNewProjectName(e.target.value) }\n              required minLength=\"3\"\n              disabled={ isLoading === 'new' }\n              autoComplete=\"off\"\n              value={ newProjectName }\n              id=\"new-project-input\"\n              placeholder={ text.project.add.ph }\n            />\n          </form>\n\n        </li>\n      </ul>\n    </>\n  );\n}\n\n\nexport default ProjectList;\n","import { auth, db } from './firebase';\nimport { handleError } from './handleError';\nimport cogoToast from 'cogo-toast';\nimport { urls } from '../config/urls';\nimport { text } from '../config/text';\n\nconst drawerService = {\n\n  db: db(),\n\n  headers: () => {\n    return { authorization: localStorage.getItem('AuthToken') };\n  },\n\n  getDrawer: (drawerKey, done) => {\n    try {\n      const taskCollection = drawerService.db.collectionGroup('tasks');\n      let query;\n      switch (drawerKey) {\n        case urls.inboxUrl:\n          query = taskCollection\n            .where('checked', '==', false)\n            .orderBy('timestamp', 'desc');\n          break;\n        default:\n          cogoToast.error(text.invalidDrawer);\n          done([]);\n          return () => {};\n      }\n      //\n      if (query) {\n\n        return query.onSnapshot((tasksDoc) => {\n\n          const tasks = [];\n          tasksDoc.forEach((doc) => {\n            const taskData = doc.data();\n\n            tasks.push({\n              id: doc.id,\n              ...taskData\n            });\n          });\n\n          done(tasks);\n\n          console.info('Tasks in inbox: ', tasks.length);\n        });\n      }\n    } catch (e) {\n      handleError('Error on fetching drawer: ', e);\n    }\n  },\n};\n\nexport default drawerService;\n","import { urls } from 'config/urls';\n\nfunction reservedKey (projectKey) {\n  return [urls.inboxUrl].indexOf(projectKey) >= 0;\n}\n\nexport default reservedKey;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport reservedKey from 'functions/reservedKey';\nimport drawerService from 'services/drawerService';\nimport Task from 'components/Project/Project/Task/Task';\nimport { text } from 'config/text';\n\nfunction Drawer ({ projectKey }) {\n\n  const [loading, setLoading] = useState(true);\n  const [drawerTasks, setDrawerTasks] = useState([]);\n\n  const allCompleted = useMemo(() => {\n    return text.allTasksCompleted();\n  }, []);\n\n  useEffect(() => {\n    if (reservedKey(projectKey)) {\n      // Special project, like an inbox...\n      const unsubscribeProject = drawerService.getDrawer(projectKey, (tasks) => {\n        setDrawerTasks(tasks);\n        setLoading(false);\n      });\n\n      return () => {\n        unsubscribeProject && unsubscribeProject();\n      };\n\n    }\n  }, [projectKey]);\n\n  return (\n    <>\n      <div className=\"flex-row\">\n        <h5 className=\"max-content m0\">{ text.drawer.inbox._ }</h5>\n      </div>\n      <ul>\n        {\n          drawerTasks.length\n          ? drawerTasks.map((t) => {\n            console.log('task is T', t);\n            return <Task key={ t.id } task={ t } level={ 0 }/>;\n          })\n          : <li><h5 className=\"subtle max-content ml-50\">{ allCompleted }</h5></li>\n        }\n      </ul>\n\n    </>\n  );\n}\n\nexport default Drawer;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { urls } from 'config/urls';\nimport { LoggedInUserContext } from 'App';\n\nimport taskService from 'services/taskService';\n\nimport Navbar from 'components/Navbar/Navbar';\nimport projectService from 'services/projectService';\nimport Project from 'components/Project/Project/Project';\nimport NoProject from 'components/Project/NoProject/NoProject';\nimport ProjectList from 'components/Project/ProjectList/ProjectList';\nimport drawerService from './services/drawerService';\nimport Drawer from './components/Drawer/Drawer';\nimport reservedKey from './functions/reservedKey';\n\nexport const ProjectContext = React.createContext({});\n\n\nfunction TodoApp () {\n  const history = useHistory();\n  const { projectKeyParam } = useParams();\n\n  const [projectKey, setProjectKey] = useState(projectKeyParam || '');\n  const [project, setProject] = useState({});\n  const [showSidebar, setShowSidebar] = useState(!window.isSmallScreen);\n\n  useEffect(() => {\n    if (projectKey !== String(projectKeyParam)) {\n      history.push(urls.project(projectKey));\n    }\n  }, [ projectKey ]);\n\n\n  if (!React.useContext(LoggedInUserContext)) {\n    history.push(urls.login);\n    return null;\n  }\n\n  return (\n    <>\n      <Navbar setShowSidebar={ setShowSidebar } showSidebar={ showSidebar }/>\n      <div id=\"todo-app\" className={ (showSidebar ? '' : ' hidden-bar') }>\n        <div className={ 'projects-list-box' }>\n          <div className={ 'projects-list-box-inner' }>\n            <ProjectList\n              projectKey={ projectKey }\n              setProjectKey={ setProjectKey }\n            />\n          </div>\n        </div>\n        <div className=\"tasks-list-box flex-column\">\n          <ProjectContext.Provider value={ project }>\n            {\n              projectKey\n                ? (\n                  reservedKey(projectKey)\n                    ? <Drawer projectKey={ projectKey } />\n                    : <Project projectKey={ projectKey } project={ project } setProject={ setProject }/>\n                )\n                : <NoProject setShowSidebar={ setShowSidebar }/>\n            }\n          </ProjectContext.Provider>\n        </div>\n        <i/> { /* Thanks to this, we have three elements. Space-between works like a charm */ }\n      </div>\n    </>\n  );\n}\n\nexport default TodoApp;\n","import 'assets/loader.svg';\nimport './_app-loader.scss';\n\nimport React from 'react';\n\nfunction Loader () {\n\n  return (\n    <span className=\"app-loader\">\n      <span className=\"loader-img\"/>\n    </span>\n  )\n}\n\nexport default Loader;\n","function Footer () {\n  return (\n    <>\n      <footer className=\"page-footer grey\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col l6 s12\">\n              <h5 className=\"white-text\">Footer Content</h5>\n              <p\n                className=\"grey-text text-lighten-4\"\n              >You can use rows and columns here to organize your footer content.</p>\n            </div>\n            <div className=\"col l4 offset-l2 s12\">\n              <h5 className=\"white-text\">Links</h5>\n              <ul>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-copyright\">\n          <div className=\"container\">\n            © 2014 Copyright Text\n            <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useContext } from 'react';\nimport { LoggedInUserContext } from 'App';\nimport { text } from 'config/text';\nimport { urls } from 'config/urls';\nimport { Link } from 'react-router-dom';\nimport { authService } from 'services/authService';\n\nfunction Header ({ loaded }) {\n  const user = useContext(LoggedInUserContext);\n\n  return (\n    <>\n      <nav className=\"grey\">\n        <div className=\"nav-wrapper container\">\n          <Link to={ urls.app } className=\"brand-logo\">Todo List</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            {\n              user\n                ? loaded && <>\n                <li><Link to={ urls.app }>{ text.gotoApp }</Link></li>\n                <li><a\n                  href=\"#logout\" onClick={ authService.logout }\n                  className=\"btn-invisible\"\n                >{ text.login.logout }</a>\n                </li>\n              </>\n                : loaded && <>\n                <li><Link to={ urls.login }>{ text.login.login }</Link></li>\n                <li><Link to={ urls.signup }>{ text.login.signup }</Link></li>\n              </>\n            }\n          </ul>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\n\n\nfunction HomePage ({ loaded }) {\n\n\n  return (\n    <>\n      <Header loaded={ loaded }/>\n      <div\n        style={ {\n          height: '300px',\n          display: 'block'\n        } }\n      >\n        <h4 className=\"flex-center-self center-align\">Welcome to the best todo-app</h4>\n      </div>\n      <Footer/>\n    </>\n  );\n}\n\nexport default HomePage;\n","import React, { useState } from 'react';\nimport { Route, Switch, HashRouter as Router } from 'react-router-dom';\nimport Signup from './login/Signup';\nimport Login from './login/Login';\nimport TodoApp from './TodoApp';\nimport { authService } from './services/authService';\nimport Loader from './components/Loader/Loader';\nimport HomePage from './components/HomePage/HomePage';\nimport { urls } from 'config/urls';\n\nexport const LoggedInUserContext = React.createContext({});\n\nfunction App () {\n\n  const [loaded, setLoaded] = useState(false);\n  const [user, setUser] = useState(false);\n\n  authService.authState((user) => {\n    console.info('User logged in: ', !!user);\n    setUser(user);\n    setLoaded(true);\n  });\n\n  return (\n    <>\n      <LoggedInUserContext.Provider value={ user }>\n        <Router>\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */ }\n          <Switch>\n            <Route path={ urls.home } exact={ true }>\n              <HomePage loaded={ loaded }/>\n            </Route>\n            { loaded\n              ?\n              <>\n                <Route path={ urls.signup } component={ Signup }/>\n                <Route path={ urls.login } component={ Login }/>\n                <Route path={ `${ urls.project(':projectKeyParam?') }` } component={ TodoApp }/>\n              </>\n              : <Loader/>\n            }\n          </Switch>\n        </Router>\n      </LoggedInUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport 'sass/index.scss';\nimport 'assets/loader.svg';\nimport 'functions/screenSize'; // must be imported here.\n\n// import 'materialize-css/dist/js/materialize.min.js';\nimport App from 'App';\n\n// ======================================== //\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}